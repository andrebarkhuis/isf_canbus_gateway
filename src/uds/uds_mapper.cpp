#include "uds_mapper.h"
#include "uds.h"
#include <unordered_map>




// void init_udsDefinitions_part1() {
//     udsMap.emplace(uds_key{ 0x7E0, 0x1, 0x1 }, UdsDefinition{ 0x7E0, 0x1, 0x1, false, 33, 0, 0, 0.392156862745098, 0.0, 4, "Calculate Load" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2, 0x1 }, UdsDefinition{ 0x7E0, 0x2, 0x1, false, 33, 1, 0, 0.392156862745098, 0.0, 4, "Vehicle Load" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3, 0x1 }, UdsDefinition{ 0x7E0, 0x3, 0x1, false, 46, 3, 0, 0.01, 0.0, 4, "MAF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4, 0x1 }, UdsDefinition{ 0x7E0, 0x4, 0x1, false, 34, 5, 0, 1.0, 0.0, 4, "MAP" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x5, 0x1 }, UdsDefinition{ 0x7E0, 0x5, 0x1, false, 57, 6, 0, 1.0, -40.0, 4, "Intake Air" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x6, 0x1 }, UdsDefinition{ 0x7E0, 0x6, 0x1, false, 57, 7, 0, 1.0, -40.0, 4, "Ambient Temperature" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x7, 0x1 }, UdsDefinition{ 0x7E0, 0x7, 0x1, false, 34, 8, 0, 1.0, 0.0, 4, "Atmosphere Pressure" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x8, 0x1 }, UdsDefinition{ 0x7E0, 0x8, 0x1, false, 57, 9, 0, 1.0, -40.0, 4, "Coolant Temp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x9, 0x1 }, UdsDefinition{ 0x7E0, 0x9, 0x1, false, 39, 10, 0, 0.25, 0.0, 4, "Engine Speed" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3A7, 0x1 }, UdsDefinition{ 0x7E0, 0x3A7, 0x1, false, 39, 10, 0, 0.25, 0.0, 4, "Engine Speed" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA, 0x1 }, UdsDefinition{ 0x7E0, 0xA, 0x1, false, 42, 12, 0, 1.0, 0.0, 4, "Vehicle Speed" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xB, 0x1 }, UdsDefinition{ 0x7E0, 0xB, 0x1, false, 52, 13, 0, 1.0, 0.0, 4, "Engine Run Time" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xC, 0x1 }, UdsDefinition{ 0x7E0, 0xC, 0x1, false, 33, 15, 0, 0.392156862745098, 0.0, 4, "Throttle Sensor Position" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xD, 0x1 }, UdsDefinition{ 0x7E0, 0xD, 0x1, false, 33, 16, 0, 0.392156862745098, 0.0, 4, "Throttle Sensor Volt %" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xE, 0x1 }, UdsDefinition{ 0x7E0, 0xE, 0x1, false, 33, 17, 0, 0.392156862745098, 0.0, 4, "Throttle Sensor #2 Volt %" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xF, 0x1 }, UdsDefinition{ 0x7E0, 0xF, 0x1, false, 33, 18, 0, 0.392156862745098, 0.0, 4, "Accel Sens. No.1 Volt %" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x10, 0x1 }, UdsDefinition{ 0x7E0, 0x10, 0x1, false, 33, 19, 0, 0.392156862745098, 0.0, 4, "Accel Sens. No.2 Volt %" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x11, 0x1 }, UdsDefinition{ 0x7E0, 0x11, 0x1, false, 33, 20, 0, 0.392156862745098, 0.0, 4, "Throttle Motor DUTY" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x12, 0x1 }, UdsDefinition{ 0x7E0, 0x12, 0x1, false, 0, 21, 0, 1.0, 0.0, 4, "Warmup Cycle Cleared DTC" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x13, 0x1 }, UdsDefinition{ 0x7E0, 0x13, 0x1, false, 13, 22, 0, 1.0, 0.0, 4, "Distance from DTC Cleared" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x14, 0x1 }, UdsDefinition{ 0x7E0, 0x14, 0x1, false, 53, 24, 0, 1.0, 0.0, 4, "Time after DTC Cleared" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x15, 0x1 }, UdsDefinition{ 0x7E0, 0x15, 0x1, false, 48, 26, 0, 0.001, 0.0, 4, "Battery Voltage" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x223, 0x1 }, UdsDefinition{ 0x7E0, 0x223, 0x1, false, 0, 29, 1, 4, "MAF Sensor 2 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x223, 0x1 }, UdsDefinition{ 0x7E0, 0x223, 0x1, false, 0, 29, 1, 4, "MAF Sensor 2 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x224, 0x1 }, UdsDefinition{ 0x7E0, 0x224, 0x1, false, 0, 29, 0, 4, "MAF Sensor 1 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x224, 0x1 }, UdsDefinition{ 0x7E0, 0x224, 0x1, false, 0, 29, 0, 4, "MAF Sensor 1 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x225, 0x1 }, UdsDefinition{ 0x7E0, 0x225, 0x1, false, 46, 30, 0, 0.03125, 0.0, 4, "MAF Sensor 1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x226, 0x1 }, UdsDefinition{ 0x7E0, 0x226, 0x1, false, 46, 32, 0, 0.03125, 0.0, 4, "MAF Sensor 2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x227, 0x1 }, UdsDefinition{ 0x7E0, 0x227, 0x1, false, 0, 34, 1, 4, "Coolant Temp Sensor2 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x227, 0x1 }, UdsDefinition{ 0x7E0, 0x227, 0x1, false, 0, 34, 1, 4, "Coolant Temp Sensor2 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x228, 0x1 }, UdsDefinition{ 0x7E0, 0x228, 0x1, false, 0, 34, 0, 4, "Coolant Temp Sensor1 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x228, 0x1 }, UdsDefinition{ 0x7E0, 0x228, 0x1, false, 0, 34, 0, 4, "Coolant Temp Sensor1 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x229, 0x1 }, UdsDefinition{ 0x7E0, 0x229, 0x1, false, 57, 35, 0, 1.0, -40.0, 4, "Coolant Temperature1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x22A, 0x1 }, UdsDefinition{ 0x7E0, 0x22A, 0x1, false, 57, 36, 0, 1.0, -40.0, 4, "Coolant Temperature2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x22B, 0x1 }, UdsDefinition{ 0x7E0, 0x22B, 0x1, false, 0, 37, 5, 4, "Intake Air Temp B2S3 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x22B, 0x1 }, UdsDefinition{ 0x7E0, 0x22B, 0x1, false, 0, 37, 5, 4, "Intake Air Temp B2S3 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x22C, 0x1 }, UdsDefinition{ 0x7E0, 0x22C, 0x1, false, 0, 37, 4, 4, "Intake Air Temp B2S2 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x22C, 0x1 }, UdsDefinition{ 0x7E0, 0x22C, 0x1, false, 0, 37, 4, 4, "Intake Air Temp B2S2 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x22D, 0x1 }, UdsDefinition{ 0x7E0, 0x22D, 0x1, false, 0, 37, 3, 4, "Intake Air Temp B2S1 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x22D, 0x1 }, UdsDefinition{ 0x7E0, 0x22D, 0x1, false, 0, 37, 3, 4, "Intake Air Temp B2S1 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x22E, 0x1 }, UdsDefinition{ 0x7E0, 0x22E, 0x1, false, 0, 37, 2, 4, "Intake Air Temp B1S3 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x22E, 0x1 }, UdsDefinition{ 0x7E0, 0x22E, 0x1, false, 0, 37, 2, 4, "Intake Air Temp B1S3 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x22F, 0x1 }, UdsDefinition{ 0x7E0, 0x22F, 0x1, false, 0, 37, 1, 4, "Intake Air Temp B1S2 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x22F, 0x1 }, UdsDefinition{ 0x7E0, 0x22F, 0x1, false, 0, 37, 1, 4, "Intake Air Temp B1S2 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x230, 0x1 }, UdsDefinition{ 0x7E0, 0x230, 0x1, false, 0, 37, 0, 4, "Intake Air Temp B1S1 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x230, 0x1 }, UdsDefinition{ 0x7E0, 0x230, 0x1, false, 0, 37, 0, 4, "Intake Air Temp B1S1 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x231, 0x1 }, UdsDefinition{ 0x7E0, 0x231, 0x1, false, 57, 38, 0, 1.0, -40.0, 4, "Intake Air Temp B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x232, 0x1 }, UdsDefinition{ 0x7E0, 0x232, 0x1, false, 57, 39, 0, 1.0, -40.0, 4, "Intake Air Temp B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x233, 0x1 }, UdsDefinition{ 0x7E0, 0x233, 0x1, false, 57, 40, 0, 1.0, -40.0, 4, "Intake Air Temp B1S3" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x234, 0x1 }, UdsDefinition{ 0x7E0, 0x234, 0x1, false, 57, 41, 0, 1.0, -40.0, 4, "Intake Air Temp B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x235, 0x1 }, UdsDefinition{ 0x7E0, 0x235, 0x1, false, 57, 42, 0, 1.0, -40.0, 4, "Intake Air Temp B2S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x236, 0x1 }, UdsDefinition{ 0x7E0, 0x236, 0x1, false, 57, 43, 0, 1.0, -40.0, 4, "Intake Air Temp B2S3" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x237, 0x1 }, UdsDefinition{ 0x7E0, 0x237, 0x1, false, 0, 44, 3, 4, "Throttle Sensor Position #2 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x237, 0x1 }, UdsDefinition{ 0x7E0, 0x237, 0x1, false, 0, 44, 3, 4, "Throttle Sensor Position #2 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x238, 0x1 }, UdsDefinition{ 0x7E0, 0x238, 0x1, false, 0, 44, 2, 4, "Target Throttle Position #2 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x238, 0x1 }, UdsDefinition{ 0x7E0, 0x238, 0x1, false, 0, 44, 2, 4, "Target Throttle Position #2 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x239, 0x1 }, UdsDefinition{ 0x7E0, 0x239, 0x1, false, 0, 44, 1, 4, "Throttle Sensor Position #1 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x239, 0x1 }, UdsDefinition{ 0x7E0, 0x239, 0x1, false, 0, 44, 1, 4, "Throttle Sensor Position #1 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x23A, 0x1 }, UdsDefinition{ 0x7E0, 0x23A, 0x1, false, 0, 44, 0, 4, "Target Throttle Position #1 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x23A, 0x1 }, UdsDefinition{ 0x7E0, 0x23A, 0x1, false, 0, 44, 0, 4, "Target Throttle Position #1 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x23B, 0x1 }, UdsDefinition{ 0x7E0, 0x23B, 0x1, false, 33, 45, 0, 0.392156862745098, 0.0, 4, "Target Throttle Position #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x23C, 0x1 }, UdsDefinition{ 0x7E0, 0x23C, 0x1, false, 33, 46, 0, 0.392156862745098, 0.0, 4, "Throttle Sensor Position #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x23D, 0x1 }, UdsDefinition{ 0x7E0, 0x23D, 0x1, false, 33, 47, 0, 0.392156862745098, 0.0, 4, "Target Throttle Position #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x23E, 0x1 }, UdsDefinition{ 0x7E0, 0x23E, 0x1, false, 33, 48, 0, 0.392156862745098, 0.0, 4, "Throttle Sensor Position #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C6, 0x1 }, UdsDefinition{ 0x7E0, 0x2C6, 0x1, false, 57, 49, 0, 1.0, -40.0, 4, "Engine Oil Temperature Sensor" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x32C, 0x1 }, UdsDefinition{ 0x7E0, 0x32C, 0x1, false, 60, 50, 0, 0.0078125, -210.0, 4, "Main Injection Timing" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x17, 0x3 }, UdsDefinition{ 0x7E0, 0x17, 0x3, false, 0, 0, 0, 4, "Fuel System Status #1", 0, "Unused" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x17, 0x3 }, UdsDefinition{ 0x7E0, 0x17, 0x3, false, 0, 0, 0, 4, "Fuel System Status #1", 1, "OL" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x17, 0x3 }, UdsDefinition{ 0x7E0, 0x17, 0x3, false, 0, 0, 0, 4, "Fuel System Status #1", 2, "CL" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x17, 0x3 }, UdsDefinition{ 0x7E0, 0x17, 0x3, false, 0, 0, 0, 4, "Fuel System Status #1", 4, "OLDrive" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x17, 0x3 }, UdsDefinition{ 0x7E0, 0x17, 0x3, false, 0, 0, 0, 4, "Fuel System Status #1", 8, "OLFault" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x17, 0x3 }, UdsDefinition{ 0x7E0, 0x17, 0x3, false, 0, 0, 0, 4, "Fuel System Status #1", 16, "CLFault" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B4, 0x3 }, UdsDefinition{ 0x7E0, 0x3B4, 0x3, false, 0, 0, 0, 4, "Fuel System Status #1", 0, "Unused" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B4, 0x3 }, UdsDefinition{ 0x7E0, 0x3B4, 0x3, false, 0, 0, 0, 4, "Fuel System Status #1", 1, "OL" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B4, 0x3 }, UdsDefinition{ 0x7E0, 0x3B4, 0x3, false, 0, 0, 0, 4, "Fuel System Status #1", 2, "CL" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B4, 0x3 }, UdsDefinition{ 0x7E0, 0x3B4, 0x3, false, 0, 0, 0, 4, "Fuel System Status #1", 4, "OLDrive" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B4, 0x3 }, UdsDefinition{ 0x7E0, 0x3B4, 0x3, false, 0, 0, 0, 4, "Fuel System Status #1", 8, "OLFault" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B4, 0x3 }, UdsDefinition{ 0x7E0, 0x3B4, 0x3, false, 0, 0, 0, 4, "Fuel System Status #1", 16, "CLFault" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x18, 0x3 }, UdsDefinition{ 0x7E0, 0x18, 0x3, false, 0, 1, 0, 4, "Fuel System Status #2", 0, "Unused" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x18, 0x3 }, UdsDefinition{ 0x7E0, 0x18, 0x3, false, 0, 1, 0, 4, "Fuel System Status #2", 1, "OL" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x18, 0x3 }, UdsDefinition{ 0x7E0, 0x18, 0x3, false, 0, 1, 0, 4, "Fuel System Status #2", 2, "CL" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x18, 0x3 }, UdsDefinition{ 0x7E0, 0x18, 0x3, false, 0, 1, 0, 4, "Fuel System Status #2", 4, "OLDrive" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x18, 0x3 }, UdsDefinition{ 0x7E0, 0x18, 0x3, false, 0, 1, 0, 4, "Fuel System Status #2", 8, "OLFault" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x18, 0x3 }, UdsDefinition{ 0x7E0, 0x18, 0x3, false, 0, 1, 0, 4, "Fuel System Status #2", 16, "CLFault" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B5, 0x3 }, UdsDefinition{ 0x7E0, 0x3B5, 0x3, false, 0, 1, 0, 4, "Fuel System Status #2", 0, "Unused" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B5, 0x3 }, UdsDefinition{ 0x7E0, 0x3B5, 0x3, false, 0, 1, 0, 4, "Fuel System Status #2", 1, "OL" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B5, 0x3 }, UdsDefinition{ 0x7E0, 0x3B5, 0x3, false, 0, 1, 0, 4, "Fuel System Status #2", 2, "CL" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B5, 0x3 }, UdsDefinition{ 0x7E0, 0x3B5, 0x3, false, 0, 1, 0, 4, "Fuel System Status #2", 4, "OLDrive" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B5, 0x3 }, UdsDefinition{ 0x7E0, 0x3B5, 0x3, false, 0, 1, 0, 4, "Fuel System Status #2", 8, "OLFault" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B5, 0x3 }, UdsDefinition{ 0x7E0, 0x3B5, 0x3, false, 0, 1, 0, 4, "Fuel System Status #2", 16, "CLFault" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x19, 0x3 }, UdsDefinition{ 0x7E0, 0x19, 0x3, false, 33, 2, 0, 0.78125, -100.0, 4, "Short FT B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3AE, 0x3 }, UdsDefinition{ 0x7E0, 0x3AE, 0x3, false, 33, 2, 0, 0.78125, -100.0, 4, "Short FT B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A, 0x3 }, UdsDefinition{ 0x7E0, 0x1A, 0x3, false, 33, 3, 0, 0.78125, -100.0, 4, "Long FT B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B0, 0x3 }, UdsDefinition{ 0x7E0, 0x3B0, 0x3, false, 33, 3, 0, 0.78125, -100.0, 4, "Long FT B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1B, 0x3 }, UdsDefinition{ 0x7E0, 0x1B, 0x3, false, 33, 4, 0, 0.78125, -100.0, 4, "Short FT B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3AF, 0x3 }, UdsDefinition{ 0x7E0, 0x3AF, 0x3, false, 33, 4, 0, 0.78125, -100.0, 4, "Short FT B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1C, 0x3 }, UdsDefinition{ 0x7E0, 0x1C, 0x3, false, 33, 5, 0, 0.78125, -100.0, 4, "Long FT B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B1, 0x3 }, UdsDefinition{ 0x7E0, 0x3B1, 0x3, false, 33, 5, 0, 0.78125, -100.0, 4, "Long FT B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1D, 0x3 }, UdsDefinition{ 0x7E0, 0x1D, 0x3, false, 5, 6, 0, 0.5, -64.0, 4, "IGN Advance" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1E, 0x3 }, UdsDefinition{ 0x7E0, 0x1E, 0x3, false, 0, 7, 0, 4, "2nd Air System Status", 0, "OFF" });
// }
// void init_udsDefinitions_part2() {
//     udsMap.emplace(uds_key{ 0x7E0, 0x1E, 0x3 }, UdsDefinition{ 0x7E0, 0x1E, 0x3, false, 0, 7, 0, 4, "2nd Air System Status", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x549, 0x3 }, UdsDefinition{ 0x7E0, 0x549, 0x3, false, 0, 7, 3, 4, "Air Pump", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x549, 0x3 }, UdsDefinition{ 0x7E0, 0x549, 0x3, false, 0, 7, 3, 4, "Air Pump", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x54A, 0x3 }, UdsDefinition{ 0x7E0, 0x54A, 0x3, false, 0, 7, 2, 4, "Atmosphere Adoption (Secondary Air)", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x54A, 0x3 }, UdsDefinition{ 0x7E0, 0x54A, 0x3, false, 0, 7, 2, 4, "Atmosphere Adoption (Secondary Air)", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1F, 0x3 }, UdsDefinition{ 0x7E0, 0x1F, 0x3, false, 33, 8, 0, 0.392156862745098, 0.0, 4, "EVAP (Purge) VSV" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x20, 0x3 }, UdsDefinition{ 0x7E0, 0x20, 0x3, false, 33, 9, 0, 0.392156862745098, 0.0, 4, "Target EGR Position" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1DE, 0x3 }, UdsDefinition{ 0x7E0, 0x1DE, 0x3, false, 33, 11, 0, 0.392156862745098, 0.0, 4, "Alcohol Density Estimate" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 1, "Gasoline/petrol" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 2, "Methanol" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 3, "Ethanol" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 4, "Diesel" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 5, "Liquefied Petroleum Gas (LPG) LPG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 6, "Compressed Natural Gas (CNG) CNG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 7, "Propane" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 8, "Battery/electric" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 9, "Bi-fuel vehicle using gasoline" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 10, "Bi-fuel vehicle using methanol" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 11, "Bi-fuel vehicle using ethanol" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 12, "Bi-fuel vehicle using LPG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 13, "Bi-fuel vehicle using CNG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 14, "Bi-fuel vehicle using propane" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 15, "Bi-fuel vehicle using battery" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 16, "Bi-fuel vehicle using battery and combustion engine" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 17, "Hybrid vehicle using gasoline engine" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 18, "Hybrid vehicle using gasoline engine on ethanol" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 19, "Hybrid vehicle using diesel engine" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 20, "Hybrid vehicle using battery" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 21, "Hybrid vehicle using battery and combustion engine" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 22, "Hybrid vehicle in regeneration mode" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 24, "Bi-fuel vehicle using Natural Gas" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 25, "Bi-fuel vehicle using diesel" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 26, "Natural Gas (Compressed or Liquefied Natural Gas)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 27, "Dual Fuel - Diesel and CNG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 28, "Dual Fuel - Diesel and LNG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 29, "Fuel Cell Utilizing Hydrogen" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C7, 0x3 }, UdsDefinition{ 0x7E0, 0x2C7, 0x3, false, 0, 12, 0, 4, "Current Fuel Type", 30, "Hydrogen Internal Combustion Engine" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2ED, 0x3 }, UdsDefinition{ 0x7E0, 0x2ED, 0x3, false, 33, 13, 0, 0.392156862745098, 0.0, 4, "Fuel Remaining Volume" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x32D, 0x3 }, UdsDefinition{ 0x7E0, 0x32D, 0x3, false, 0, 14, 3, 4, "Glow Indicator Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x32D, 0x3 }, UdsDefinition{ 0x7E0, 0x32D, 0x3, false, 0, 14, 3, 4, "Glow Indicator Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x32E, 0x3 }, UdsDefinition{ 0x7E0, 0x32E, 0x3, false, 0, 14, 1, 4, "Shift SW Status (N,P Range) Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x32E, 0x3 }, UdsDefinition{ 0x7E0, 0x32E, 0x3, false, 0, 14, 1, 4, "Shift SW Status (N,P Range) Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x32F, 0x3 }, UdsDefinition{ 0x7E0, 0x32F, 0x3, false, 0, 15, 3, 4, "Glow Indicator", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x32F, 0x3 }, UdsDefinition{ 0x7E0, 0x32F, 0x3, false, 0, 15, 3, 4, "Glow Indicator", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x330, 0x3 }, UdsDefinition{ 0x7E0, 0x330, 0x3, false, 0, 15, 1, 4, "Shift SW Status (N,P Range)", 0, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x330, 0x3 }, UdsDefinition{ 0x7E0, 0x330, 0x3, false, 0, 15, 1, 4, "Shift SW Status (N,P Range)", 1, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x331, 0x3 }, UdsDefinition{ 0x7E0, 0x331, 0x3, false, 0, 16, 4, 4, "Actual EGR Valve Pos #2 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x331, 0x3 }, UdsDefinition{ 0x7E0, 0x331, 0x3, false, 0, 16, 4, 4, "Actual EGR Valve Pos #2 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x332, 0x3 }, UdsDefinition{ 0x7E0, 0x332, 0x3, false, 0, 16, 3, 4, "Target EGR Valve Pos #2 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x332, 0x3 }, UdsDefinition{ 0x7E0, 0x332, 0x3, false, 0, 16, 3, 4, "Target EGR Valve Pos #2 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x333, 0x3 }, UdsDefinition{ 0x7E0, 0x333, 0x3, false, 0, 16, 1, 4, "Actual EGR Valve Pos Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x333, 0x3 }, UdsDefinition{ 0x7E0, 0x333, 0x3, false, 0, 16, 1, 4, "Actual EGR Valve Pos Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x334, 0x3 }, UdsDefinition{ 0x7E0, 0x334, 0x3, false, 0, 16, 0, 4, "Target EGR Valve Pos Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x334, 0x3 }, UdsDefinition{ 0x7E0, 0x334, 0x3, false, 0, 16, 0, 4, "Target EGR Valve Pos Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x335, 0x3 }, UdsDefinition{ 0x7E0, 0x335, 0x3, false, 33, 17, 0, 0.392156862745098, 0.0, 4, "Target EGR Valve Pos" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x336, 0x3 }, UdsDefinition{ 0x7E0, 0x336, 0x3, false, 33, 18, 0, 0.392156862745098, 0.0, 4, "Actual EGR Valve Pos" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x337, 0x3 }, UdsDefinition{ 0x7E0, 0x337, 0x3, false, 33, 20, 0, 0.392156862745098, 0.0, 4, "Target EGR Valve Pos #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x338, 0x3 }, UdsDefinition{ 0x7E0, 0x338, 0x3, false, 33, 21, 0, 0.392156862745098, 0.0, 4, "Actual EGR Valve Pos #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x339, 0x3 }, UdsDefinition{ 0x7E0, 0x339, 0x3, false, 0, 23, 3, 4, "Actual Throttle Position #2 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x339, 0x3 }, UdsDefinition{ 0x7E0, 0x339, 0x3, false, 0, 23, 3, 4, "Actual Throttle Position #2 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x33A, 0x3 }, UdsDefinition{ 0x7E0, 0x33A, 0x3, false, 0, 23, 2, 4, "Target Throttle Position #2 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x33A, 0x3 }, UdsDefinition{ 0x7E0, 0x33A, 0x3, false, 0, 23, 2, 4, "Target Throttle Position #2 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x33B, 0x3 }, UdsDefinition{ 0x7E0, 0x33B, 0x3, false, 0, 23, 1, 4, "Actual Throttle Position Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x33B, 0x3 }, UdsDefinition{ 0x7E0, 0x33B, 0x3, false, 0, 23, 1, 4, "Actual Throttle Position Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x33C, 0x3 }, UdsDefinition{ 0x7E0, 0x33C, 0x3, false, 0, 23, 0, 4, "Target Throttle Position Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x33C, 0x3 }, UdsDefinition{ 0x7E0, 0x33C, 0x3, false, 0, 23, 0, 4, "Target Throttle Position Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x33D, 0x3 }, UdsDefinition{ 0x7E0, 0x33D, 0x3, false, 33, 24, 0, 0.392156862745098, 0.0, 4, "Target Throttle Position" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x33E, 0x3 }, UdsDefinition{ 0x7E0, 0x33E, 0x3, false, 33, 25, 0, 0.392156862745098, 0.0, 4, "Actual Throttle Position" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x33F, 0x3 }, UdsDefinition{ 0x7E0, 0x33F, 0x3, false, 33, 26, 0, 0.392156862745098, 0.0, 4, "Target Throttle Position #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x340, 0x3 }, UdsDefinition{ 0x7E0, 0x340, 0x3, false, 33, 27, 0, 0.392156862745098, 0.0, 4, "Actual Throttle Position #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x341, 0x3 }, UdsDefinition{ 0x7E0, 0x341, 0x3, false, 0, 28, 0, 4, "Target Booster Pressure Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x341, 0x3 }, UdsDefinition{ 0x7E0, 0x341, 0x3, false, 0, 28, 0, 4, "Target Booster Pressure Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x342, 0x3 }, UdsDefinition{ 0x7E0, 0x342, 0x3, false, 34, 29, 0, 0.03125, 0.0, 4, "Target Booster Pressure" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x343, 0x3 }, UdsDefinition{ 0x7E0, 0x343, 0x3, false, 0, 38, 4, 4, "Actual VN Position #2 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x343, 0x3 }, UdsDefinition{ 0x7E0, 0x343, 0x3, false, 0, 38, 4, 4, "Actual VN Position #2 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x344, 0x3 }, UdsDefinition{ 0x7E0, 0x344, 0x3, false, 0, 38, 3, 4, "Target VN Turbo Position #2 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x344, 0x3 }, UdsDefinition{ 0x7E0, 0x344, 0x3, false, 0, 38, 3, 4, "Target VN Turbo Position #2 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x345, 0x3 }, UdsDefinition{ 0x7E0, 0x345, 0x3, false, 0, 38, 1, 4, "Actual VN Position Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x345, 0x3 }, UdsDefinition{ 0x7E0, 0x345, 0x3, false, 0, 38, 1, 4, "Actual VN Position Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x346, 0x3 }, UdsDefinition{ 0x7E0, 0x346, 0x3, false, 0, 38, 0, 4, "Target VN Turbo Position Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x346, 0x3 }, UdsDefinition{ 0x7E0, 0x346, 0x3, false, 0, 38, 0, 4, "Target VN Turbo Position Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x347, 0x3 }, UdsDefinition{ 0x7E0, 0x347, 0x3, false, 33, 39, 0, 0.392156862745098, 0.0, 4, "Target VN Turbo Position" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x348, 0x3 }, UdsDefinition{ 0x7E0, 0x348, 0x3, false, 33, 40, 0, 0.392156862745098, 0.0, 4, "Actual VN Turbo Position" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x349, 0x3 }, UdsDefinition{ 0x7E0, 0x349, 0x3, false, 33, 41, 0, 0.392156862745098, 0.0, 4, "Target VN Turbo Position #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x34A, 0x3 }, UdsDefinition{ 0x7E0, 0x34A, 0x3, false, 33, 42, 0, 0.392156862745098, 0.0, 4, "Actual VN Turbo Position #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4B1, 0x3 }, UdsDefinition{ 0x7E0, 0x4B1, 0x3, false, 33, 44, 0, 0.78125, -100.0, 4, "Short FT B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4B2, 0x3 }, UdsDefinition{ 0x7E0, 0x4B2, 0x3, false, 33, 44, 0, 0.78125, -100.0, 4, "Short FT B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4B3, 0x3 }, UdsDefinition{ 0x7E0, 0x4B3, 0x3, false, 33, 45, 0, 0.78125, -100.0, 4, "Long FT B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4B4, 0x3 }, UdsDefinition{ 0x7E0, 0x4B4, 0x3, false, 33, 45, 0, 0.78125, -100.0, 4, "Long FT B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4B5, 0x3 }, UdsDefinition{ 0x7E0, 0x4B5, 0x3, false, 33, 46, 0, 0.78125, -100.0, 4, "Short FT B2S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4B6, 0x3 }, UdsDefinition{ 0x7E0, 0x4B6, 0x3, false, 33, 46, 0, 0.78125, -100.0, 4, "Short FT B2S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4B7, 0x3 }, UdsDefinition{ 0x7E0, 0x4B7, 0x3, false, 33, 47, 0, 0.78125, -100.0, 4, "Long FT B2S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4B8, 0x3 }, UdsDefinition{ 0x7E0, 0x4B8, 0x3, false, 33, 47, 0, 0.78125, -100.0, 4, "Long FT B2S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x21, 0x4 }, UdsDefinition{ 0x7E0, 0x21, 0x4, false, 0, 0, 0, 3.05e-05, 0.0, 4, "Target Air-Fuel Ratio" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x22, 0x4 }, UdsDefinition{ 0x7E0, 0x22, 0x4, false, 0, 2, 0, 3.05e-05, 0.0, 4, "AF Lambda B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3AC, 0x4 }, UdsDefinition{ 0x7E0, 0x3AC, 0x4, false, 0, 2, 0, 3.05e-05, 0.0, 4, "AF Lambda B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x23, 0x4 }, UdsDefinition{ 0x7E0, 0x23, 0x4, false, 48, 4, 0, 0.000122, 0.0, 4, "AFS Voltage B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3A8, 0x4 }, UdsDefinition{ 0x7E0, 0x3A8, 0x4, false, 48, 4, 0, 0.000122, 0.0, 4, "AFS Voltage B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x24, 0x4 }, UdsDefinition{ 0x7E0, 0x24, 0x4, false, 0, 6, 0, 3.05e-05, 0.0, 4, "AF Lambda B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3AD, 0x4 }, UdsDefinition{ 0x7E0, 0x3AD, 0x4, false, 0, 6, 0, 3.05e-05, 0.0, 4, "AF Lambda B2S1" });
// }
// void init_udsDefinitions_part3() {
//     udsMap.emplace(uds_key{ 0x7E0, 0x25, 0x4 }, UdsDefinition{ 0x7E0, 0x25, 0x4, false, 48, 8, 0, 0.000122, 0.0, 4, "AFS Voltage B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3A9, 0x4 }, UdsDefinition{ 0x7E0, 0x3A9, 0x4, false, 48, 8, 0, 0.000122, 0.0, 4, "AFS Voltage B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x26, 0x4 }, UdsDefinition{ 0x7E0, 0x26, 0x4, false, 0, 10, 0, 3.05e-05, 0.0, 4, "AF Lambda B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4DD, 0x4 }, UdsDefinition{ 0x7E0, 0x4DD, 0x4, false, 0, 10, 0, 3.05e-05, 0.0, 4, "AF Lambda B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x27, 0x4 }, UdsDefinition{ 0x7E0, 0x27, 0x4, false, 12, 12, 0, 0.00390625, -128.0, 4, "AFS Current B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x28, 0x4 }, UdsDefinition{ 0x7E0, 0x28, 0x4, false, 0, 14, 0, 3.05e-05, 0.0, 4, "AF Lambda B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4DE, 0x4 }, UdsDefinition{ 0x7E0, 0x4DE, 0x4, false, 0, 14, 0, 3.05e-05, 0.0, 4, "AF Lambda B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x29, 0x4 }, UdsDefinition{ 0x7E0, 0x29, 0x4, false, 12, 16, 0, 0.00390625, -128.0, 4, "AFS Current B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2A, 0x4 }, UdsDefinition{ 0x7E0, 0x2A, 0x4, false, 48, 18, 0, 0.005, 0.0, 4, "O2S B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2B, 0x4 }, UdsDefinition{ 0x7E0, 0x2B, 0x4, false, 33, 19, 0, 0.78125, -100.0, 4, "O2FT B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C, 0x4 }, UdsDefinition{ 0x7E0, 0x2C, 0x4, false, 48, 20, 0, 0.005, 0.0, 4, "O2S B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3AA, 0x4 }, UdsDefinition{ 0x7E0, 0x3AA, 0x4, false, 48, 20, 0, 0.005, 0.0, 4, "O2S B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2E, 0x4 }, UdsDefinition{ 0x7E0, 0x2E, 0x4, false, 48, 22, 0, 0.005, 0.0, 4, "O2S B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2F, 0x4 }, UdsDefinition{ 0x7E0, 0x2F, 0x4, false, 33, 23, 0, 0.78125, -100.0, 4, "O2FT B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x30, 0x4 }, UdsDefinition{ 0x7E0, 0x30, 0x4, false, 48, 24, 0, 0.005, 0.0, 4, "O2S B2S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3AB, 0x4 }, UdsDefinition{ 0x7E0, 0x3AB, 0x4, false, 48, 24, 0, 0.005, 0.0, 4, "O2S B2S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x34B, 0x4 }, UdsDefinition{ 0x7E0, 0x34B, 0x4, false, 0, 26, 0, 4, "Particulate Filter Differential Pressure Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x34B, 0x4 }, UdsDefinition{ 0x7E0, 0x34B, 0x4, false, 0, 26, 0, 4, "Particulate Filter Differential Pressure Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x34C, 0x4 }, UdsDefinition{ 0x7E0, 0x34C, 0x4, false, 34, 27, 0, 0.01, -327.68, 4, "Particulate Filter Differential Pressure" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x34C, 0x4 }, UdsDefinition{ 0x7E0, 0x34C, 0x4, false, 34, 27, 0, 0.01, 0.0, 4, "Particulate Filter Differential Pressure" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x34D, 0x4 }, UdsDefinition{ 0x7E0, 0x34D, 0x4, false, 0, 33, 0, 4, "Particulate Filter Differential Pressure #2 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x34D, 0x4 }, UdsDefinition{ 0x7E0, 0x34D, 0x4, false, 0, 33, 0, 4, "Particulate Filter Differential Pressure #2 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x34E, 0x4 }, UdsDefinition{ 0x7E0, 0x34E, 0x4, false, 34, 34, 0, 0.01, -327.68, 4, "Particulate Filter Differential Pressure #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4DF, 0x4 }, UdsDefinition{ 0x7E0, 0x4DF, 0x4, false, 0, 40, 0, 3.05e-05, 0.0, 4, "AF Lambda B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4E0, 0x4 }, UdsDefinition{ 0x7E0, 0x4E0, 0x4, false, 0, 40, 0, 3.05e-05, 0.0, 4, "AF Lambda B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4D5, 0x4 }, UdsDefinition{ 0x7E0, 0x4D5, 0x4, false, 12, 42, 0, 0.00390625, -128.0, 4, "AFS Current B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4D6, 0x4 }, UdsDefinition{ 0x7E0, 0x4D6, 0x4, false, 0, 44, 0, 3.05e-05, 0.0, 4, "AF Lambda B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4D7, 0x4 }, UdsDefinition{ 0x7E0, 0x4D7, 0x4, false, 0, 44, 0, 3.05e-05, 0.0, 4, "AF Lambda B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4D8, 0x4 }, UdsDefinition{ 0x7E0, 0x4D8, 0x4, false, 48, 46, 0, 0.000122, 0.0, 4, "AFS Voltage B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4D9, 0x4 }, UdsDefinition{ 0x7E0, 0x4D9, 0x4, false, 48, 46, 0, 0.000122, 0.0, 4, "AFS Voltage B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x32, 0x5 }, UdsDefinition{ 0x7E0, 0x32, 0x5, false, 34, 0, 0, 10.0, 0.0, 4, "Fuel Press" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1CF, 0x5 }, UdsDefinition{ 0x7E0, 0x1CF, 0x5, false, 34, 4, 0, 0.001, 0.0, 4, "EVAP Vapor Pressure (Wide)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x33, 0x5 }, UdsDefinition{ 0x7E0, 0x33, 0x5, false, 57, 6, 0, 0.1, -40.0, 4, "Catalyst Temp B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x34, 0x5 }, UdsDefinition{ 0x7E0, 0x34, 0x5, false, 57, 8, 0, 0.1, -40.0, 4, "Catalyst Temp B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x35, 0x5 }, UdsDefinition{ 0x7E0, 0x35, 0x5, false, 57, 10, 0, 0.1, -40.0, 4, "Catalyst Temp B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x36, 0x5 }, UdsDefinition{ 0x7E0, 0x36, 0x5, false, 57, 12, 0, 0.1, -40.0, 4, "Catalyst Temp B2S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x34F, 0x5 }, UdsDefinition{ 0x7E0, 0x34F, 0x5, false, 0, 14, 2, 4, "Fuel Temperature Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x34F, 0x5 }, UdsDefinition{ 0x7E0, 0x34F, 0x5, false, 0, 14, 2, 4, "Fuel Temperature Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x350, 0x5 }, UdsDefinition{ 0x7E0, 0x350, 0x5, false, 0, 14, 1, 4, "Common Rail Pressure Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x350, 0x5 }, UdsDefinition{ 0x7E0, 0x350, 0x5, false, 0, 14, 1, 4, "Common Rail Pressure Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x351, 0x5 }, UdsDefinition{ 0x7E0, 0x351, 0x5, false, 0, 14, 0, 4, "Target Common Rail Pressure Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x351, 0x5 }, UdsDefinition{ 0x7E0, 0x351, 0x5, false, 0, 14, 0, 4, "Target Common Rail Pressure Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x352, 0x5 }, UdsDefinition{ 0x7E0, 0x352, 0x5, false, 34, 15, 0, 10.0, 0.0, 4, "Target Common Rail Pressure" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x353, 0x5 }, UdsDefinition{ 0x7E0, 0x353, 0x5, false, 34, 17, 0, 10.0, 0.0, 4, "Common Rail Pressure" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x354, 0x5 }, UdsDefinition{ 0x7E0, 0x354, 0x5, false, 57, 19, 0, 1.0, -40.0, 4, "Fuel Temperature" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x355, 0x5 }, UdsDefinition{ 0x7E0, 0x355, 0x5, false, 0, 25, 0, 4, "Intake Air Temp (Turbo) Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x355, 0x5 }, UdsDefinition{ 0x7E0, 0x355, 0x5, false, 0, 25, 0, 4, "Intake Air Temp (Turbo) Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x356, 0x5 }, UdsDefinition{ 0x7E0, 0x356, 0x5, false, 57, 26, 0, 1.0, -40.0, 4, "Intake Air Temp (Turbo)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x357, 0x5 }, UdsDefinition{ 0x7E0, 0x357, 0x5, false, 0, 30, 2, 4, "Exhaust Temperature B1S3 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x357, 0x5 }, UdsDefinition{ 0x7E0, 0x357, 0x5, false, 0, 30, 2, 4, "Exhaust Temperature B1S3 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x358, 0x5 }, UdsDefinition{ 0x7E0, 0x358, 0x5, false, 0, 30, 1, 4, "Exhaust Temperature B1S2 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x358, 0x5 }, UdsDefinition{ 0x7E0, 0x358, 0x5, false, 0, 30, 1, 4, "Exhaust Temperature B1S2 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x359, 0x5 }, UdsDefinition{ 0x7E0, 0x359, 0x5, false, 0, 30, 0, 4, "Exhaust Temperature B1S1 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x359, 0x5 }, UdsDefinition{ 0x7E0, 0x359, 0x5, false, 0, 30, 0, 4, "Exhaust Temperature B1S1 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x556, 0x5 }, UdsDefinition{ 0x7E0, 0x556, 0x5, false, 0, 30, 3, 4, "Exhaust Temperature B1S4 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x556, 0x5 }, UdsDefinition{ 0x7E0, 0x556, 0x5, false, 0, 30, 3, 4, "Exhaust Temperature B1S4 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x35A, 0x5 }, UdsDefinition{ 0x7E0, 0x35A, 0x5, false, 57, 31, 0, 0.1, -40.0, 4, "Exhaust Temperature B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x35B, 0x5 }, UdsDefinition{ 0x7E0, 0x35B, 0x5, false, 57, 33, 0, 0.1, -40.0, 4, "Exhaust Temperature B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x35C, 0x5 }, UdsDefinition{ 0x7E0, 0x35C, 0x5, false, 57, 35, 0, 0.1, -40.0, 4, "Exhaust Temperature B1S3" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x557, 0x5 }, UdsDefinition{ 0x7E0, 0x557, 0x5, false, 57, 37, 0, 0.1, -40.0, 4, "Exhaust Temperature B1S4" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x35D, 0x5 }, UdsDefinition{ 0x7E0, 0x35D, 0x5, false, 0, 39, 2, 4, "Exhaust Temperature B2S3 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x35D, 0x5 }, UdsDefinition{ 0x7E0, 0x35D, 0x5, false, 0, 39, 2, 4, "Exhaust Temperature B2S3 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x35E, 0x5 }, UdsDefinition{ 0x7E0, 0x35E, 0x5, false, 0, 39, 1, 4, "Exhaust Temperature B2S2 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x35E, 0x5 }, UdsDefinition{ 0x7E0, 0x35E, 0x5, false, 0, 39, 1, 4, "Exhaust Temperature B2S2 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x35F, 0x5 }, UdsDefinition{ 0x7E0, 0x35F, 0x5, false, 0, 39, 0, 4, "Exhaust Temperature B2S1 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x35F, 0x5 }, UdsDefinition{ 0x7E0, 0x35F, 0x5, false, 0, 39, 0, 4, "Exhaust Temperature B2S1 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x360, 0x5 }, UdsDefinition{ 0x7E0, 0x360, 0x5, false, 57, 40, 0, 0.1, -40.0, 4, "Exhaust Temperature B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x361, 0x5 }, UdsDefinition{ 0x7E0, 0x361, 0x5, false, 57, 42, 0, 0.1, -40.0, 4, "Exhaust Temperature B2S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x362, 0x5 }, UdsDefinition{ 0x7E0, 0x362, 0x5, false, 57, 44, 0, 0.1, -40.0, 4, "Exhaust Temperature B2S3" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x37, 0x6 }, UdsDefinition{ 0x7E0, 0x37, 0x6, false, 0, 0, 7, 4, "MIL", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x37, 0x6 }, UdsDefinition{ 0x7E0, 0x37, 0x6, false, 0, 0, 7, 4, "MIL", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x38, 0x6 }, UdsDefinition{ 0x7E0, 0x38, 0x6, false, 0, 0, 0, 1.0, 0.0, 4, "Number of Emission DTC" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x39, 0x6 }, UdsDefinition{ 0x7E0, 0x39, 0x6, false, 0, 1, 2, 4, "Complete Parts Monitor", 0, "Not Avl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x39, 0x6 }, UdsDefinition{ 0x7E0, 0x39, 0x6, false, 0, 1, 2, 4, "Complete Parts Monitor", 1, "Avail" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3A, 0x6 }, UdsDefinition{ 0x7E0, 0x3A, 0x6, false, 0, 1, 1, 4, "Fuel System Monitor", 0, "Not Avl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3A, 0x6 }, UdsDefinition{ 0x7E0, 0x3A, 0x6, false, 0, 1, 1, 4, "Fuel System Monitor", 1, "Avail" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B, 0x6 }, UdsDefinition{ 0x7E0, 0x3B, 0x6, false, 0, 1, 0, 4, "Misfire Monitor", 0, "Not Avl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B, 0x6 }, UdsDefinition{ 0x7E0, 0x3B, 0x6, false, 0, 1, 0, 4, "Misfire Monitor", 1, "Avail" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x558, 0x6 }, UdsDefinition{ 0x7E0, 0x558, 0x6, false, 0, 1, 5, 4, "Fuel System Monitor Result", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x558, 0x6 }, UdsDefinition{ 0x7E0, 0x558, 0x6, false, 0, 1, 5, 4, "Fuel System Monitor Result", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3C, 0x6 }, UdsDefinition{ 0x7E0, 0x3C, 0x6, false, 0, 2, 7, 4, "EGR/VVT Monitor", 0, "Not Avl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3C, 0x6 }, UdsDefinition{ 0x7E0, 0x3C, 0x6, false, 0, 2, 7, 4, "EGR/VVT Monitor", 1, "Avail" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3D, 0x6 }, UdsDefinition{ 0x7E0, 0x3D, 0x6, false, 0, 2, 6, 4, "O2S(A/FS) Heater Monitor", 0, "Not Avl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3D, 0x6 }, UdsDefinition{ 0x7E0, 0x3D, 0x6, false, 0, 2, 6, 4, "O2S(A/FS) Heater Monitor", 1, "Avail" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3E, 0x6 }, UdsDefinition{ 0x7E0, 0x3E, 0x6, false, 0, 2, 5, 4, "O2S(A/FS) Monitor", 0, "Not Avl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3E, 0x6 }, UdsDefinition{ 0x7E0, 0x3E, 0x6, false, 0, 2, 5, 4, "O2S(A/FS) Monitor", 1, "Avail" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3F, 0x6 }, UdsDefinition{ 0x7E0, 0x3F, 0x6, false, 0, 2, 4, 4, "A/C Monitor", 0, "Not Avl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3F, 0x6 }, UdsDefinition{ 0x7E0, 0x3F, 0x6, false, 0, 2, 4, 4, "A/C Monitor", 1, "Avail" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x40, 0x6 }, UdsDefinition{ 0x7E0, 0x40, 0x6, false, 0, 2, 3, 4, "2nd Air Monitor", 0, "Not Avl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x40, 0x6 }, UdsDefinition{ 0x7E0, 0x40, 0x6, false, 0, 2, 3, 4, "2nd Air Monitor", 1, "Avail" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x41, 0x6 }, UdsDefinition{ 0x7E0, 0x41, 0x6, false, 0, 2, 2, 4, "EVAP Monitor", 0, "Not Avl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x41, 0x6 }, UdsDefinition{ 0x7E0, 0x41, 0x6, false, 0, 2, 2, 4, "EVAP Monitor", 1, "Avail" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42, 0x6 }, UdsDefinition{ 0x7E0, 0x42, 0x6, false, 0, 2, 1, 4, "Heated Catalyst Monitor", 0, "Not Avl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42, 0x6 }, UdsDefinition{ 0x7E0, 0x42, 0x6, false, 0, 2, 1, 4, "Heated Catalyst Monitor", 1, "Avail" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x43, 0x6 }, UdsDefinition{ 0x7E0, 0x43, 0x6, false, 0, 2, 0, 4, "Catalyst Monitor", 0, "Not Avl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x43, 0x6 }, UdsDefinition{ 0x7E0, 0x43, 0x6, false, 0, 2, 0, 4, "Catalyst Monitor", 1, "Avail" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x44, 0x6 }, UdsDefinition{ 0x7E0, 0x44, 0x6, false, 0, 3, 7, 4, "EGR/VVT Monitor", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x44, 0x6 }, UdsDefinition{ 0x7E0, 0x44, 0x6, false, 0, 3, 7, 4, "EGR/VVT Monitor", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x45, 0x6 }, UdsDefinition{ 0x7E0, 0x45, 0x6, false, 0, 3, 6, 4, "O2S(A/FS) Heater Monitor", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x45, 0x6 }, UdsDefinition{ 0x7E0, 0x45, 0x6, false, 0, 3, 6, 4, "O2S(A/FS) Heater Monitor", 1, "Incmpl" });
// }
// void init_udsDefinitions_part4() {
//     udsMap.emplace(uds_key{ 0x7E0, 0x46, 0x6 }, UdsDefinition{ 0x7E0, 0x46, 0x6, false, 0, 3, 5, 4, "O2S(A/FS) Monitor", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x46, 0x6 }, UdsDefinition{ 0x7E0, 0x46, 0x6, false, 0, 3, 5, 4, "O2S(A/FS) Monitor", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x47, 0x6 }, UdsDefinition{ 0x7E0, 0x47, 0x6, false, 0, 3, 4, 4, "A/C Monitor", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x47, 0x6 }, UdsDefinition{ 0x7E0, 0x47, 0x6, false, 0, 3, 4, 4, "A/C Monitor", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x48, 0x6 }, UdsDefinition{ 0x7E0, 0x48, 0x6, false, 0, 3, 3, 4, "2nd Air Monitor", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x48, 0x6 }, UdsDefinition{ 0x7E0, 0x48, 0x6, false, 0, 3, 3, 4, "2nd Air Monitor", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x49, 0x6 }, UdsDefinition{ 0x7E0, 0x49, 0x6, false, 0, 3, 2, 4, "EVAP Monitor", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x49, 0x6 }, UdsDefinition{ 0x7E0, 0x49, 0x6, false, 0, 3, 2, 4, "EVAP Monitor", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4A, 0x6 }, UdsDefinition{ 0x7E0, 0x4A, 0x6, false, 0, 3, 1, 4, "Heated Catalyst Monitor", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4A, 0x6 }, UdsDefinition{ 0x7E0, 0x4A, 0x6, false, 0, 3, 1, 4, "Heated Catalyst Monitor", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4B, 0x6 }, UdsDefinition{ 0x7E0, 0x4B, 0x6, false, 0, 3, 0, 4, "Catalyst Monitor", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4B, 0x6 }, UdsDefinition{ 0x7E0, 0x4B, 0x6, false, 0, 3, 0, 4, "Catalyst Monitor", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 1, "OBD II (California ARB)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 2, "OBD (US Federal EPA)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 3, "OBD and OBD II" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 4, "OBD I" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 5, "Not OBD compliant" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 6, "EOBD (Euro OBD)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 7, "EOBD and OBD II" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 8, "EOBD and OBD" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 9, "\"EOBD" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 10, "JOBD (Japan OBD)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 11, "JOBD and OBD II" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 12, "JOBD and EOBD" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 13, "\"JOBD" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 14, "EURO 4" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 15, "EURO 5" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 17, "Engine Manufacturer Diagnostics (EMD)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 18, "Engine Manufacturer Diagnostics Enhanced (EMD+)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 19, "Heavy Duty On-Board Diagnostics (Child/Partial)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 20, "Heavy Duty On-Board Diagnostics" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 21, "World Wide Harmonized OBD" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 23, "Heavy Duty Euro OBD Stage I without NOx control" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 24, "Heavy Duty Euro OBD Stage I with NOx control" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 25, "Heavy Duty Euro OBD Stage II without NOx control" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 26, "Heavy Duty Euro OBD Stage II with NOx control" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 28, "Brazil OBD Phase 1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 29, "Brazil OBD Phase 2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 30, "Korean OBD" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 31, "India OBD I" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 32, "India OBD II" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 33, "Heavy Duty Euro OBD Stage VI" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 34, "\"OBD" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 35, "Brazil OBD Phase 3" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 36, "\"Motorcycle" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 37, "\"Motorcycle" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 38, "\"Motorcycle" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 39, "\"Motorcycle" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 40, "\"Motorcycle" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 41, "China Nationwide Stage 6" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C, 0x6 }, UdsDefinition{ 0x7E0, 0x4C, 0x6, false, 0, 5, 0, 4, "OBD Requirements", 42, "Brazil OBD Diesel" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4D, 0x6 }, UdsDefinition{ 0x7E0, 0x4D, 0x6, false, 13, 6, 0, 1.0, 0.0, 4, "MIL ON Run Distance" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4E, 0x6 }, UdsDefinition{ 0x7E0, 0x4E, 0x6, false, 0, 9, 6, 4, "Component Monitor CMPL", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4E, 0x6 }, UdsDefinition{ 0x7E0, 0x4E, 0x6, false, 0, 9, 6, 4, "Component Monitor CMPL", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4F, 0x6 }, UdsDefinition{ 0x7E0, 0x4F, 0x6, false, 0, 9, 5, 4, "Fuel System Monitor CMPL", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4F, 0x6 }, UdsDefinition{ 0x7E0, 0x4F, 0x6, false, 0, 9, 5, 4, "Fuel System Monitor CMPL", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x50, 0x6 }, UdsDefinition{ 0x7E0, 0x50, 0x6, false, 0, 9, 4, 4, "Misfire Monitor CMPL", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x50, 0x6 }, UdsDefinition{ 0x7E0, 0x50, 0x6, false, 0, 9, 4, 4, "Misfire Monitor CMPL", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51, 0x6 }, UdsDefinition{ 0x7E0, 0x51, 0x6, false, 0, 9, 2, 4, "Component Monitor ENA", 0, "Unable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51, 0x6 }, UdsDefinition{ 0x7E0, 0x51, 0x6, false, 0, 9, 2, 4, "Component Monitor ENA", 1, "Enable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x52, 0x6 }, UdsDefinition{ 0x7E0, 0x52, 0x6, false, 0, 9, 1, 4, "Fuel System Monitor ENA", 0, "Unable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x52, 0x6 }, UdsDefinition{ 0x7E0, 0x52, 0x6, false, 0, 9, 1, 4, "Fuel System Monitor ENA", 1, "Enable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x53, 0x6 }, UdsDefinition{ 0x7E0, 0x53, 0x6, false, 0, 9, 0, 4, "Misfire Monitor ENA", 0, "Unable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x53, 0x6 }, UdsDefinition{ 0x7E0, 0x53, 0x6, false, 0, 9, 0, 4, "Misfire Monitor ENA", 1, "Enable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x54, 0x6 }, UdsDefinition{ 0x7E0, 0x54, 0x6, false, 0, 10, 7, 4, "EGR/VVT Monitor ENA", 0, "Unable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x54, 0x6 }, UdsDefinition{ 0x7E0, 0x54, 0x6, false, 0, 10, 7, 4, "EGR/VVT Monitor ENA", 1, "Enable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x55, 0x6 }, UdsDefinition{ 0x7E0, 0x55, 0x6, false, 0, 10, 6, 4, "Heater Monitor ENA", 0, "Unable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x55, 0x6 }, UdsDefinition{ 0x7E0, 0x55, 0x6, false, 0, 10, 6, 4, "Heater Monitor ENA", 1, "Enable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x56, 0x6 }, UdsDefinition{ 0x7E0, 0x56, 0x6, false, 0, 10, 5, 4, "O2S(A/FS) Monitor ENA", 0, "Unable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x56, 0x6 }, UdsDefinition{ 0x7E0, 0x56, 0x6, false, 0, 10, 5, 4, "O2S(A/FS) Monitor ENA", 1, "Enable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x57, 0x6 }, UdsDefinition{ 0x7E0, 0x57, 0x6, false, 0, 10, 4, 4, "A/C Monitor ENA", 0, "Unable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x57, 0x6 }, UdsDefinition{ 0x7E0, 0x57, 0x6, false, 0, 10, 4, 4, "A/C Monitor ENA", 1, "Enable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x58, 0x6 }, UdsDefinition{ 0x7E0, 0x58, 0x6, false, 0, 10, 3, 4, "2nd Air Monitor ENA", 0, "Unable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x58, 0x6 }, UdsDefinition{ 0x7E0, 0x58, 0x6, false, 0, 10, 3, 4, "2nd Air Monitor ENA", 1, "Enable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x59, 0x6 }, UdsDefinition{ 0x7E0, 0x59, 0x6, false, 0, 10, 2, 4, "EVAP Monitor ENA", 0, "Unable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x59, 0x6 }, UdsDefinition{ 0x7E0, 0x59, 0x6, false, 0, 10, 2, 4, "EVAP Monitor ENA", 1, "Enable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x5A, 0x6 }, UdsDefinition{ 0x7E0, 0x5A, 0x6, false, 0, 10, 1, 4, "Heated Cat Monitor ENA", 0, "Unable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x5A, 0x6 }, UdsDefinition{ 0x7E0, 0x5A, 0x6, false, 0, 10, 1, 4, "Heated Cat Monitor ENA", 1, "Enable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x5B, 0x6 }, UdsDefinition{ 0x7E0, 0x5B, 0x6, false, 0, 10, 0, 4, "Catalyst Monitor ENA", 0, "Unable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x5B, 0x6 }, UdsDefinition{ 0x7E0, 0x5B, 0x6, false, 0, 10, 0, 4, "Catalyst Monitor ENA", 1, "Enable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x5C, 0x6 }, UdsDefinition{ 0x7E0, 0x5C, 0x6, false, 0, 11, 7, 4, "EGR/VVT Monitor CMPL", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x5C, 0x6 }, UdsDefinition{ 0x7E0, 0x5C, 0x6, false, 0, 11, 7, 4, "EGR/VVT Monitor CMPL", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x5D, 0x6 }, UdsDefinition{ 0x7E0, 0x5D, 0x6, false, 0, 11, 6, 4, "Heater Monitor CMPL", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x5D, 0x6 }, UdsDefinition{ 0x7E0, 0x5D, 0x6, false, 0, 11, 6, 4, "Heater Monitor CMPL", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x5E, 0x6 }, UdsDefinition{ 0x7E0, 0x5E, 0x6, false, 0, 11, 5, 4, "O2S(A/FS) Monitor CMPL", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x5E, 0x6 }, UdsDefinition{ 0x7E0, 0x5E, 0x6, false, 0, 11, 5, 4, "O2S(A/FS) Monitor CMPL", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x5F, 0x6 }, UdsDefinition{ 0x7E0, 0x5F, 0x6, false, 0, 11, 4, 4, "A/C Monitor CMPL", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x5F, 0x6 }, UdsDefinition{ 0x7E0, 0x5F, 0x6, false, 0, 11, 4, 4, "A/C Monitor CMPL", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x60, 0x6 }, UdsDefinition{ 0x7E0, 0x60, 0x6, false, 0, 11, 3, 4, "2nd Air Monitor CMPL", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x60, 0x6 }, UdsDefinition{ 0x7E0, 0x60, 0x6, false, 0, 11, 3, 4, "2nd Air Monitor CMPL", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x61, 0x6 }, UdsDefinition{ 0x7E0, 0x61, 0x6, false, 0, 11, 2, 4, "EVAP Monitor CMPL", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x61, 0x6 }, UdsDefinition{ 0x7E0, 0x61, 0x6, false, 0, 11, 2, 4, "EVAP Monitor CMPL", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x62, 0x6 }, UdsDefinition{ 0x7E0, 0x62, 0x6, false, 0, 11, 1, 4, "Heated Cat Monitor CMPL", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x62, 0x6 }, UdsDefinition{ 0x7E0, 0x62, 0x6, false, 0, 11, 1, 4, "Heated Cat Monitor CMPL", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x63, 0x6 }, UdsDefinition{ 0x7E0, 0x63, 0x6, false, 0, 11, 0, 4, "Catalyst Monitor CMPL", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x63, 0x6 }, UdsDefinition{ 0x7E0, 0x63, 0x6, false, 0, 11, 0, 4, "Catalyst Monitor CMPL", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x64, 0x6 }, UdsDefinition{ 0x7E0, 0x64, 0x6, false, 53, 12, 0, 1.0, 0.0, 4, "Running Time from MIL ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x436, 0x7 }, UdsDefinition{ 0x7E0, 0x436, 0x7, false, 0, 0, 3, 4, "NOx Density B2S2 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x436, 0x7 }, UdsDefinition{ 0x7E0, 0x436, 0x7, false, 0, 0, 3, 4, "NOx Density B2S2 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x437, 0x7 }, UdsDefinition{ 0x7E0, 0x437, 0x7, false, 0, 0, 2, 4, "NOx Density B2S1 Supported", 0, "Unsupp" });
// }
// void init_udsDefinitions_part5() {
//     udsMap.emplace(uds_key{ 0x7E0, 0x437, 0x7 }, UdsDefinition{ 0x7E0, 0x437, 0x7, false, 0, 0, 2, 4, "NOx Density B2S1 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x438, 0x7 }, UdsDefinition{ 0x7E0, 0x438, 0x7, false, 0, 0, 1, 4, "NOx Density B1S2 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x438, 0x7 }, UdsDefinition{ 0x7E0, 0x438, 0x7, false, 0, 0, 1, 4, "NOx Density B1S2 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x439, 0x7 }, UdsDefinition{ 0x7E0, 0x439, 0x7, false, 0, 0, 0, 4, "NOx Density B1S1 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x439, 0x7 }, UdsDefinition{ 0x7E0, 0x439, 0x7, false, 0, 0, 0, 4, "NOx Density B1S1 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x43A, 0x7 }, UdsDefinition{ 0x7E0, 0x43A, 0x7, false, 32, 1, 0, 1.0, 0.0, 4, "NOx Density B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x43B, 0x7 }, UdsDefinition{ 0x7E0, 0x43B, 0x7, false, 32, 3, 0, 1.0, 0.0, 4, "NOx Density B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x43C, 0x7 }, UdsDefinition{ 0x7E0, 0x43C, 0x7, false, 32, 5, 0, 1.0, 0.0, 4, "NOx Density B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x43D, 0x7 }, UdsDefinition{ 0x7E0, 0x43D, 0x7, false, 32, 7, 0, 1.0, 0.0, 4, "NOx Density B2S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4E1, 0x7 }, UdsDefinition{ 0x7E0, 0x4E1, 0x7, false, 0, 22, 7, 4, "AF Lambda B2S2 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4E1, 0x7 }, UdsDefinition{ 0x7E0, 0x4E1, 0x7, false, 0, 22, 7, 4, "AF Lambda B2S2 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4E2, 0x7 }, UdsDefinition{ 0x7E0, 0x4E2, 0x7, false, 0, 22, 6, 4, "AF Lambda B2S1 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4E2, 0x7 }, UdsDefinition{ 0x7E0, 0x4E2, 0x7, false, 0, 22, 6, 4, "AF Lambda B2S1 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4E3, 0x7 }, UdsDefinition{ 0x7E0, 0x4E3, 0x7, false, 0, 22, 5, 4, "AF Lambda B1S2 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4E3, 0x7 }, UdsDefinition{ 0x7E0, 0x4E3, 0x7, false, 0, 22, 5, 4, "AF Lambda B1S2 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4E4, 0x7 }, UdsDefinition{ 0x7E0, 0x4E4, 0x7, false, 0, 22, 4, 4, "AF Lambda B1S1 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4E4, 0x7 }, UdsDefinition{ 0x7E0, 0x4E4, 0x7, false, 0, 22, 4, 4, "AF Lambda B1S1 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4E5, 0x7 }, UdsDefinition{ 0x7E0, 0x4E5, 0x7, false, 0, 22, 3, 4, "A/F (O2) Density B2S2 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4E5, 0x7 }, UdsDefinition{ 0x7E0, 0x4E5, 0x7, false, 0, 22, 3, 4, "A/F (O2) Density B2S2 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4E6, 0x7 }, UdsDefinition{ 0x7E0, 0x4E6, 0x7, false, 0, 22, 2, 4, "A/F (O2) Density B2S1 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4E6, 0x7 }, UdsDefinition{ 0x7E0, 0x4E6, 0x7, false, 0, 22, 2, 4, "A/F (O2) Density B2S1 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4E7, 0x7 }, UdsDefinition{ 0x7E0, 0x4E7, 0x7, false, 0, 22, 1, 4, "A/F (O2) Density B1S2 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4E7, 0x7 }, UdsDefinition{ 0x7E0, 0x4E7, 0x7, false, 0, 22, 1, 4, "A/F (O2) Density B1S2 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4E8, 0x7 }, UdsDefinition{ 0x7E0, 0x4E8, 0x7, false, 0, 22, 0, 4, "A/F (O2) Density B1S1 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4E8, 0x7 }, UdsDefinition{ 0x7E0, 0x4E8, 0x7, false, 0, 22, 0, 4, "A/F (O2) Density B1S1 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4E9, 0x7 }, UdsDefinition{ 0x7E0, 0x4E9, 0x7, false, 33, 23, 0, 0.001526, 0.0, 4, "A/F (O2) Density B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4EA, 0x7 }, UdsDefinition{ 0x7E0, 0x4EA, 0x7, false, 33, 25, 0, 0.001526, 0.0, 4, "A/F (O2) Density B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4EB, 0x7 }, UdsDefinition{ 0x7E0, 0x4EB, 0x7, false, 33, 27, 0, 0.001526, 0.0, 4, "A/F (O2) Density B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4EC, 0x7 }, UdsDefinition{ 0x7E0, 0x4EC, 0x7, false, 33, 29, 0, 0.001526, 0.0, 4, "A/F (O2) Density B2S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4ED, 0x7 }, UdsDefinition{ 0x7E0, 0x4ED, 0x7, false, 0, 31, 0, 0.000122, 0.0, 4, "AF Lambda B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x510, 0x7 }, UdsDefinition{ 0x7E0, 0x510, 0x7, false, 0, 31, 0, 0.000122, 0.0, 4, "AF Lambda B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4EE, 0x7 }, UdsDefinition{ 0x7E0, 0x4EE, 0x7, false, 0, 33, 0, 0.000122, 0.0, 4, "AF Lambda B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x511, 0x7 }, UdsDefinition{ 0x7E0, 0x511, 0x7, false, 0, 33, 0, 0.000122, 0.0, 4, "AF Lambda B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4EF, 0x7 }, UdsDefinition{ 0x7E0, 0x4EF, 0x7, false, 0, 35, 0, 0.000122, 0.0, 4, "AF Lambda B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x512, 0x7 }, UdsDefinition{ 0x7E0, 0x512, 0x7, false, 0, 35, 0, 0.000122, 0.0, 4, "AF Lambda B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4F0, 0x7 }, UdsDefinition{ 0x7E0, 0x4F0, 0x7, false, 0, 37, 0, 0.000122, 0.0, 4, "AF Lambda B2S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x513, 0x7 }, UdsDefinition{ 0x7E0, 0x513, 0x7, false, 0, 37, 0, 0.000122, 0.0, 4, "AF Lambda B2S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4F1, 0x7 }, UdsDefinition{ 0x7E0, 0x4F1, 0x7, false, 0, 39, 3, 4, "NOx Corrected Density B2S2 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4F1, 0x7 }, UdsDefinition{ 0x7E0, 0x4F1, 0x7, false, 0, 39, 3, 4, "NOx Corrected Density B2S2 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4F2, 0x7 }, UdsDefinition{ 0x7E0, 0x4F2, 0x7, false, 0, 39, 2, 4, "NOx Corrected Density B2S1 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4F2, 0x7 }, UdsDefinition{ 0x7E0, 0x4F2, 0x7, false, 0, 39, 2, 4, "NOx Corrected Density B2S1 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4F3, 0x7 }, UdsDefinition{ 0x7E0, 0x4F3, 0x7, false, 0, 39, 1, 4, "NOx Corrected Density B1S2 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4F3, 0x7 }, UdsDefinition{ 0x7E0, 0x4F3, 0x7, false, 0, 39, 1, 4, "NOx Corrected Density B1S2 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4F4, 0x7 }, UdsDefinition{ 0x7E0, 0x4F4, 0x7, false, 0, 39, 0, 4, "NOx Corrected Density B1S1 Supported", 0, "Unsupp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4F4, 0x7 }, UdsDefinition{ 0x7E0, 0x4F4, 0x7, false, 0, 39, 0, 4, "NOx Corrected Density B1S1 Supported", 1, "Supp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4F5, 0x7 }, UdsDefinition{ 0x7E0, 0x4F5, 0x7, false, 32, 40, 0, 1.0, 0.0, 4, "NOx Corrected Density B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4F6, 0x7 }, UdsDefinition{ 0x7E0, 0x4F6, 0x7, false, 32, 42, 0, 1.0, 0.0, 4, "NOx Corrected Density B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4F7, 0x7 }, UdsDefinition{ 0x7E0, 0x4F7, 0x7, false, 32, 44, 0, 1.0, 0.0, 4, "NOx Corrected Density B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4F8, 0x7 }, UdsDefinition{ 0x7E0, 0x4F8, 0x7, false, 32, 46, 0, 1.0, 0.0, 4, "NOx Corrected Density B2S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4F9, 0x8 }, UdsDefinition{ 0x7E0, 0x4F9, 0x8, false, 33, 0, 0, 1.0, -125.0, 4, "Actual Engine Percent Torque" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4FA, 0x8 }, UdsDefinition{ 0x7E0, 0x4FA, 0x8, false, 58, 1, 0, 1.0, 0.0, 4, "Engine Reference Torque (Fixed Value)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4FB, 0x8 }, UdsDefinition{ 0x7E0, 0x4FB, 0x8, false, 33, 3, 0, 1.0, -125.0, 4, "Engine Friction Percent Torque" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4FC, 0x8 }, UdsDefinition{ 0x7E0, 0x4FC, 0x8, false, 46, 4, 0, 0.02, 0.0, 4, "Engine Fuel Rate" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4FD, 0x8 }, UdsDefinition{ 0x7E0, 0x4FD, 0x8, false, 46, 6, 0, 0.02, 0.0, 4, "Vehicle Fuel Rate" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4FE, 0x8 }, UdsDefinition{ 0x7E0, 0x4FE, 0x8, false, 69, 8, 0, 0.2, 0.0, 4, "Engine Exhaust Flow Rate" });
//     udsMap.emplace(uds_key{ 0xC7, 0x1, 0x21 }, UdsDefinition{ 0xC7, 0x1, 0x21, false, 0, 0, 1, 4, "Emergency Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0xC7, 0x1, 0x21 }, UdsDefinition{ 0xC7, 0x1, 0x21, false, 0, 0, 1, 4, "Emergency Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0xC7, 0x3, 0x21 }, UdsDefinition{ 0xC7, 0x3, 0x21, false, 0, 0, 0, 4, "Current Com Back-Up Battery", 0, "without" });
//     udsMap.emplace(uds_key{ 0xC7, 0x3, 0x21 }, UdsDefinition{ 0xC7, 0x3, 0x21, false, 0, 0, 0, 4, "Current Com Back-Up Battery", 1, "with" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xBBD, 0x21 }, UdsDefinition{ 0x7E0, 0xBBD, 0x21, false, 0, 10, 4, 4, "RES/ACC Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xBBD, 0x21 }, UdsDefinition{ 0x7E0, 0xBBD, 0x21, false, 0, 10, 4, 4, "RES/ACC Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xBBE, 0x21 }, UdsDefinition{ 0x7E0, 0xBBE, 0x21, false, 0, 10, 3, 4, "SET/COAST Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xBBE, 0x21 }, UdsDefinition{ 0x7E0, 0xBBE, 0x21, false, 0, 10, 3, 4, "SET/COAST Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xBBF, 0x21 }, UdsDefinition{ 0x7E0, 0xBBF, 0x21, false, 0, 10, 2, 4, "Cancel Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xBBF, 0x21 }, UdsDefinition{ 0x7E0, 0xBBF, 0x21, false, 0, 10, 2, 4, "Cancel Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xBC0, 0x21 }, UdsDefinition{ 0x7E0, 0xBC0, 0x21, false, 42, 26, 0, 1.0, 0.0, 4, "ASL Vehicle Speed" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xBC1, 0x21 }, UdsDefinition{ 0x7E0, 0xBC1, 0x21, false, 42, 27, 0, 1.0, 0.0, 4, "ASL Memory Vehicle Speed" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xBC2, 0x21 }, UdsDefinition{ 0x7E0, 0xBC2, 0x21, false, 0, 28, 0, 1.0, 0.0, 4, "ASL Shift Position Request" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xBC3, 0x21 }, UdsDefinition{ 0x7E0, 0xBC3, 0x21, false, 5, 29, 0, 0.48828125, 0.0, 4, "ASL Throttle Position" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xBC4, 0x21 }, UdsDefinition{ 0x7E0, 0xBC4, 0x21, false, 33, 30, 0, 0.48828125, 0.0, 4, "ASL Throttle Position" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xBC5, 0x21 }, UdsDefinition{ 0x7E0, 0xBC5, 0x21, false, 0, 31, 7, 4, "ASL Main Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xBC5, 0x21 }, UdsDefinition{ 0x7E0, 0xBC5, 0x21, false, 0, 31, 7, 4, "ASL Main Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xBC6, 0x21 }, UdsDefinition{ 0x7E0, 0xBC6, 0x21, false, 0, 31, 6, 4, "ASL Ready", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xBC6, 0x21 }, UdsDefinition{ 0x7E0, 0xBC6, 0x21, false, 0, 31, 6, 4, "ASL Ready", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x65, 0x22 }, UdsDefinition{ 0x7E0, 0x65, 0x22, false, 39, 0, 0, 0.78125, 0.0, 4, "Engine Speed from EFI" });
//     udsMap.emplace(uds_key{ 0xC7, 0x24, 0x22 }, UdsDefinition{ 0xC7, 0x24, 0x22, false, 0, 0, 0, 1.0, 0.0, 4, "VIN" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x66, 0x22 }, UdsDefinition{ 0x7E0, 0x66, 0x22, false, 57, 2, 0, 1.0, -40.0, 4, "Intake-Air Temp from EFI" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x67, 0x22 }, UdsDefinition{ 0x7E0, 0x67, 0x22, false, 57, 3, 0, 1.0, -40.0, 4, "Coolant Temp from EFI" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x68, 0x22 }, UdsDefinition{ 0x7E0, 0x68, 0x22, false, 33, 4, 0, 0.5, 0.0, 4, "Accel Position from EFI" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x69, 0x22 }, UdsDefinition{ 0x7E0, 0x69, 0x22, false, 33, 5, 0, 0.5, 0.0, 4, "Throttle Position from EFI" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x6A, 0x22 }, UdsDefinition{ 0x7E0, 0x6A, 0x22, false, 62, 6, 0, 0.01953125, 0.0, 4, "Injection Volume from EFI" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x6B, 0x22 }, UdsDefinition{ 0x7E0, 0x6B, 0x22, false, 0, 8, 0, 4, "Received MIL from ECT", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x6B, 0x22 }, UdsDefinition{ 0x7E0, 0x6B, 0x22, false, 0, 8, 0, 4, "Received MIL from ECT", 90, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x6C, 0x22 }, UdsDefinition{ 0x7E0, 0x6C, 0x22, false, 57, 9, 0, 0.00390625, -40.0, 4, "A/T Oil Temp from ECT" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x6D, 0x22 }, UdsDefinition{ 0x7E0, 0x6D, 0x22, false, 0, 11, 0, 4, "Shift Position Sig from ECT", 0, "1st" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x6D, 0x22 }, UdsDefinition{ 0x7E0, 0x6D, 0x22, false, 0, 11, 0, 4, "Shift Position Sig from ECT", 1, "2nd" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x6D, 0x22 }, UdsDefinition{ 0x7E0, 0x6D, 0x22, false, 0, 11, 0, 4, "Shift Position Sig from ECT", 2, "3rd" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x6D, 0x22 }, UdsDefinition{ 0x7E0, 0x6D, 0x22, false, 0, 11, 0, 4, "Shift Position Sig from ECT", 3, "4th" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x6D, 0x22 }, UdsDefinition{ 0x7E0, 0x6D, 0x22, false, 0, 11, 0, 4, "Shift Position Sig from ECT", 4, "5th" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x6D, 0x22 }, UdsDefinition{ 0x7E0, 0x6D, 0x22, false, 0, 11, 0, 4, "Shift Position Sig from ECT", 5, "6th" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x6D, 0x22 }, UdsDefinition{ 0x7E0, 0x6D, 0x22, false, 0, 11, 0, 4, "Shift Position Sig from ECT", 6, "7th" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x6D, 0x22 }, UdsDefinition{ 0x7E0, 0x6D, 0x22, false, 0, 11, 0, 4, "Shift Position Sig from ECT", 7, "8th" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x6E, 0x22 }, UdsDefinition{ 0x7E0, 0x6E, 0x22, false, 39, 12, 0, 50.0, 0.0, 4, "SPD (NO)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x6F, 0x22 }, UdsDefinition{ 0x7E0, 0x6F, 0x22, false, 39, 13, 0, 50.0, 0.0, 4, "SPD (NT)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x70, 0x22 }, UdsDefinition{ 0x7E0, 0x70, 0x22, false, 0, 14, 7, 4, "ECT Lock Up", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x70, 0x22 }, UdsDefinition{ 0x7E0, 0x70, 0x22, false, 0, 14, 7, 4, "ECT Lock Up", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3E8, 0x22 }, UdsDefinition{ 0x7E0, 0x3E8, 0x22, false, 39, 15, 0, 50.0, 0.0, 4, "SPD (NC)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3E9, 0x22 }, UdsDefinition{ 0x7E0, 0x3E9, 0x22, false, 42, 16, 0, 1.0, 0.0, 4, "SPD (SP2)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x483, 0x22 }, UdsDefinition{ 0x7E0, 0x483, 0x22, false, 0, 17, 7, 4, "Stop Light Signal from EFI", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x483, 0x22 }, UdsDefinition{ 0x7E0, 0x483, 0x22, false, 0, 17, 7, 4, "Stop Light Signal from EFI", 1, "ON" });
// }
// void init_udsDefinitions_part6() {
//     udsMap.emplace(uds_key{ 0xC7, 0x4, 0x23 }, UdsDefinition{ 0xC7, 0x4, 0x23, false, 0, 0, 0, 1.0, 0.0, 4, "MIN" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x71, 0x23 }, UdsDefinition{ 0x7E0, 0x71, 0x23, false, 0, 1, 0, 4, "VN Turbo Type", 0, "Not Avl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x71, 0x23 }, UdsDefinition{ 0x7E0, 0x71, 0x23, false, 0, 1, 0, 4, "VN Turbo Type", 1, "Commo" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x71, 0x23 }, UdsDefinition{ 0x7E0, 0x71, 0x23, false, 0, 1, 0, 4, "VN Turbo Type", 2, "Vacuum" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x71, 0x23 }, UdsDefinition{ 0x7E0, 0x71, 0x23, false, 0, 1, 0, 4, "VN Turbo Type", 3, "CAN Com" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x71, 0x23 }, UdsDefinition{ 0x7E0, 0x71, 0x23, false, 0, 1, 0, 4, "VN Turbo Type", 4, "DC" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x72, 0x24 }, UdsDefinition{ 0x7E0, 0x72, 0x24, false, 0, 0, 7, 4, "Communication with ECT", 0, "No Comm" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x72, 0x24 }, UdsDefinition{ 0x7E0, 0x72, 0x24, false, 0, 0, 7, 4, "Communication with ECT", 1, "Comm" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1D0, 0x24 }, UdsDefinition{ 0x7E0, 0x1D0, 0x24, false, 0, 0, 6, 4, "Comm with Power Manage", 0, "No Comm" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1D0, 0x24 }, UdsDefinition{ 0x7E0, 0x1D0, 0x24, false, 0, 0, 6, 4, "Comm with Power Manage", 1, "Comm" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1D1, 0x24 }, UdsDefinition{ 0x7E0, 0x1D1, 0x24, false, 0, 0, 5, 4, "Communication with HV", 0, "No Comm" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1D1, 0x24 }, UdsDefinition{ 0x7E0, 0x1D1, 0x24, false, 0, 0, 5, 4, "Communication with HV", 1, "Comm" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1D2, 0x24 }, UdsDefinition{ 0x7E0, 0x1D2, 0x24, false, 0, 0, 3, 4, "Communication with Brake", 0, "No Comm" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1D2, 0x24 }, UdsDefinition{ 0x7E0, 0x1D2, 0x24, false, 0, 0, 3, 4, "Communication with Brake", 1, "Comm" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1D3, 0x24 }, UdsDefinition{ 0x7E0, 0x1D3, 0x24, false, 0, 0, 2, 4, "Comm with Air Conditioner", 0, "No Comm" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1D3, 0x24 }, UdsDefinition{ 0x7E0, 0x1D3, 0x24, false, 0, 0, 2, 4, "Comm with Air Conditioner", 1, "Comm" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x206, 0x24 }, UdsDefinition{ 0x7E0, 0x206, 0x24, false, 0, 0, 4, 4, "Comm with Driving Support Sys", 0, "No Comm" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x206, 0x24 }, UdsDefinition{ 0x7E0, 0x206, 0x24, false, 0, 0, 4, 4, "Comm with Driving Support Sys", 1, "Comm" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x20D, 0x24 }, UdsDefinition{ 0x7E0, 0x20D, 0x24, false, 0, 0, 1, 4, "Comm with VALVEMATIC", 0, "No Comm" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x20D, 0x24 }, UdsDefinition{ 0x7E0, 0x20D, 0x24, false, 0, 0, 1, 4, "Comm with VALVEMATIC", 1, "Comm" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x469, 0x24 }, UdsDefinition{ 0x7E0, 0x469, 0x24, false, 0, 0, 0, 4, "Comm with Reductant Control Module", 0, "No Comm" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x469, 0x24 }, UdsDefinition{ 0x7E0, 0x469, 0x24, false, 0, 0, 0, 4, "Comm with Reductant Control Module", 1, "Comm" });
//     udsMap.emplace(uds_key{ 0xC7, 0x5, 0x24 }, UdsDefinition{ 0xC7, 0x5, 0x24, false, 0, 0, 0, 1.0, 0.0, 4, "MDN" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x73, 0x25 }, UdsDefinition{ 0x7E0, 0x73, 0x25, false, 0, 0, 6, 4, "Engine Oil Pressure SW", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x73, 0x25 }, UdsDefinition{ 0x7E0, 0x73, 0x25, false, 0, 0, 6, 4, "Engine Oil Pressure SW", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x74, 0x25 }, UdsDefinition{ 0x7E0, 0x74, 0x25, false, 0, 0, 3, 4, "Power Steering Signal", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x74, 0x25 }, UdsDefinition{ 0x7E0, 0x74, 0x25, false, 0, 0, 3, 4, "Power Steering Signal", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x75, 0x25 }, UdsDefinition{ 0x7E0, 0x75, 0x25, false, 0, 0, 2, 4, "Stop Light Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x75, 0x25 }, UdsDefinition{ 0x7E0, 0x75, 0x25, false, 0, 0, 2, 4, "Stop Light Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x386, 0x25 }, UdsDefinition{ 0x7E0, 0x386, 0x25, false, 0, 0, 5, 4, "Beacon Light Signal", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x386, 0x25 }, UdsDefinition{ 0x7E0, 0x386, 0x25, false, 0, 0, 5, 4, "Beacon Light Signal", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x395, 0x25 }, UdsDefinition{ 0x7E0, 0x395, 0x25, false, 0, 0, 7, 4, "Idle Up SW", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x395, 0x25 }, UdsDefinition{ 0x7E0, 0x395, 0x25, false, 0, 0, 7, 4, "Idle Up SW", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x47B, 0x25 }, UdsDefinition{ 0x7E0, 0x47B, 0x25, false, 0, 0, 4, 4, "Cooler Box Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x47B, 0x25 }, UdsDefinition{ 0x7E0, 0x47B, 0x25, false, 0, 0, 4, 4, "Cooler Box Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0xC7, 0xA, 0x25 }, UdsDefinition{ 0xC7, 0xA, 0x25, false, 0, 0, 0, 1.0, 0.0, 4, "SIMRAV ID High" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x76, 0x25 }, UdsDefinition{ 0x7E0, 0x76, 0x25, false, 0, 1, 4, 4, "Starter Signal", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x76, 0x25 }, UdsDefinition{ 0x7E0, 0x76, 0x25, false, 0, 1, 4, 4, "Starter Signal", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x77, 0x25 }, UdsDefinition{ 0x7E0, 0x77, 0x25, false, 0, 1, 3, 4, "Starter Control", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x77, 0x25 }, UdsDefinition{ 0x7E0, 0x77, 0x25, false, 0, 1, 3, 4, "Starter Control", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x78, 0x25 }, UdsDefinition{ 0x7E0, 0x78, 0x25, false, 0, 1, 2, 4, "Fuel Lid", 0, "Close" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x78, 0x25 }, UdsDefinition{ 0x7E0, 0x78, 0x25, false, 0, 1, 2, 4, "Fuel Lid", 1, "Open" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x79, 0x25 }, UdsDefinition{ 0x7E0, 0x79, 0x25, false, 0, 1, 1, 4, "Fuel Lid Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x79, 0x25 }, UdsDefinition{ 0x7E0, 0x79, 0x25, false, 0, 1, 1, 4, "Fuel Lid Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1D4, 0x25 }, UdsDefinition{ 0x7E0, 0x1D4, 0x25, false, 0, 1, 5, 4, "Clutch Start SW", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1D4, 0x25 }, UdsDefinition{ 0x7E0, 0x1D4, 0x25, false, 0, 1, 5, 4, "Clutch Start SW", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B6, 0x25 }, UdsDefinition{ 0x7E0, 0x3B6, 0x25, false, 0, 1, 0, 4, "Fuel Select Switch", 0, "Gasoline" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B6, 0x25 }, UdsDefinition{ 0x7E0, 0x3B6, 0x25, false, 0, 1, 0, 4, "Fuel Select Switch", 1, "CNG" });
//     udsMap.emplace(uds_key{ 0xC7, 0x6, 0x25 }, UdsDefinition{ 0xC7, 0x6, 0x25, false, 0, 1, 0, 1.0, 0.0, 4, "MEID" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x486, 0x25 }, UdsDefinition{ 0x7E0, 0x486, 0x25, false, 0, 2, 7, 4, "Fuel Cooler SW", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x486, 0x25 }, UdsDefinition{ 0x7E0, 0x486, 0x25, false, 0, 2, 7, 4, "Fuel Cooler SW", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x487, 0x25 }, UdsDefinition{ 0x7E0, 0x487, 0x25, false, 0, 2, 6, 4, "Door Courtesy SW", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x487, 0x25 }, UdsDefinition{ 0x7E0, 0x487, 0x25, false, 0, 2, 6, 4, "Door Courtesy SW", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4AA, 0x25 }, UdsDefinition{ 0x7E0, 0x4AA, 0x25, false, 0, 2, 5, 4, "Clogged Fuel Filter Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4AA, 0x25 }, UdsDefinition{ 0x7E0, 0x4AA, 0x25, false, 0, 2, 5, 4, "Clogged Fuel Filter Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x555, 0x25 }, UdsDefinition{ 0x7E0, 0x555, 0x25, false, 0, 2, 4, 4, "Catalyst Regeneration Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x555, 0x25 }, UdsDefinition{ 0x7E0, 0x555, 0x25, false, 0, 2, 4, 4, "Catalyst Regeneration Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x7A, 0x25 }, UdsDefinition{ 0x7E0, 0x7A, 0x25, false, 0, 3, 7, 4, "Electrical Load Signal 1", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x7A, 0x25 }, UdsDefinition{ 0x7E0, 0x7A, 0x25, false, 0, 3, 7, 4, "Electrical Load Signal 1", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x7B, 0x25 }, UdsDefinition{ 0x7E0, 0x7B, 0x25, false, 0, 3, 6, 4, "Electrical Load Signal 2", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x7B, 0x25 }, UdsDefinition{ 0x7E0, 0x7B, 0x25, false, 0, 3, 6, 4, "Electrical Load Signal 2", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x7C, 0x25 }, UdsDefinition{ 0x7E0, 0x7C, 0x25, false, 0, 3, 5, 4, "Electrical Load Signal 3", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x7C, 0x25 }, UdsDefinition{ 0x7E0, 0x7C, 0x25, false, 0, 3, 5, 4, "Electrical Load Signal 3", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x207, 0x25 }, UdsDefinition{ 0x7E0, 0x207, 0x25, false, 0, 3, 4, 4, "Electrical Load Signal 4", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x207, 0x25 }, UdsDefinition{ 0x7E0, 0x207, 0x25, false, 0, 3, 4, 4, "Electrical Load Signal 4", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x7D, 0x25 }, UdsDefinition{ 0x7E0, 0x7D, 0x25, false, 0, 4, 7, 4, "Shift SW Status (P Range)", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x7D, 0x25 }, UdsDefinition{ 0x7E0, 0x7D, 0x25, false, 0, 4, 7, 4, "Shift SW Status (P Range)", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x7E, 0x25 }, UdsDefinition{ 0x7E0, 0x7E, 0x25, false, 0, 4, 6, 4, "Shift SW Status (R Range)", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x7E, 0x25 }, UdsDefinition{ 0x7E0, 0x7E, 0x25, false, 0, 4, 6, 4, "Shift SW Status (R Range)", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x7F, 0x25 }, UdsDefinition{ 0x7E0, 0x7F, 0x25, false, 0, 4, 5, 4, "Shift SW Status (N Range)", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x7F, 0x25 }, UdsDefinition{ 0x7E0, 0x7F, 0x25, false, 0, 4, 5, 4, "Shift SW Status (N Range)", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x80, 0x25 }, UdsDefinition{ 0x7E0, 0x80, 0x25, false, 0, 4, 4, 4, "Shift SW Status (D Range)", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x80, 0x25 }, UdsDefinition{ 0x7E0, 0x80, 0x25, false, 0, 4, 4, 4, "Shift SW Status (D Range)", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x81, 0x25 }, UdsDefinition{ 0x7E0, 0x81, 0x25, false, 0, 4, 3, 4, "Shift SW Status (4 Range)", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x81, 0x25 }, UdsDefinition{ 0x7E0, 0x81, 0x25, false, 0, 4, 3, 4, "Shift SW Status (4 Range)", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x82, 0x25 }, UdsDefinition{ 0x7E0, 0x82, 0x25, false, 0, 4, 2, 4, "Shift SW Status (3 Range)", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x82, 0x25 }, UdsDefinition{ 0x7E0, 0x82, 0x25, false, 0, 4, 2, 4, "Shift SW Status (3 Range)", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x83, 0x25 }, UdsDefinition{ 0x7E0, 0x83, 0x25, false, 0, 4, 1, 4, "Shift SW Status (2 Range)", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x83, 0x25 }, UdsDefinition{ 0x7E0, 0x83, 0x25, false, 0, 4, 1, 4, "Shift SW Status (2 Range)", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x84, 0x25 }, UdsDefinition{ 0x7E0, 0x84, 0x25, false, 0, 4, 0, 4, "Shift SW Status (L Range)", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x84, 0x25 }, UdsDefinition{ 0x7E0, 0x84, 0x25, false, 0, 4, 0, 4, "Shift SW Status (L Range)", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x85, 0x25 }, UdsDefinition{ 0x7E0, 0x85, 0x25, false, 0, 5, 7, 4, "Sports Mode Selection SW", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x85, 0x25 }, UdsDefinition{ 0x7E0, 0x85, 0x25, false, 0, 5, 7, 4, "Sports Mode Selection SW", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x86, 0x25 }, UdsDefinition{ 0x7E0, 0x86, 0x25, false, 0, 5, 6, 4, "Sports Shift Up SW", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x86, 0x25 }, UdsDefinition{ 0x7E0, 0x86, 0x25, false, 0, 5, 6, 4, "Sports Shift Up SW", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x87, 0x25 }, UdsDefinition{ 0x7E0, 0x87, 0x25, false, 0, 5, 5, 4, "Sports Shift Down SW", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x87, 0x25 }, UdsDefinition{ 0x7E0, 0x87, 0x25, false, 0, 5, 5, 4, "Sports Shift Down SW", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x88, 0x25 }, UdsDefinition{ 0x7E0, 0x88, 0x25, false, 0, 5, 3, 4, "Shift SW Status (B Range)", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x88, 0x25 }, UdsDefinition{ 0x7E0, 0x88, 0x25, false, 0, 5, 3, 4, "Shift SW Status (B Range)", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1D5, 0x25 }, UdsDefinition{ 0x7E0, 0x1D5, 0x25, false, 0, 5, 4, 4, "SD Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1D5, 0x25 }, UdsDefinition{ 0x7E0, 0x1D5, 0x25, false, 0, 5, 4, 4, "SD Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x484, 0x25 }, UdsDefinition{ 0x7E0, 0x484, 0x25, false, 0, 5, 2, 4, "Reverse Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x484, 0x25 }, UdsDefinition{ 0x7E0, 0x484, 0x25, false, 0, 5, 2, 4, "Reverse Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x89, 0x25 }, UdsDefinition{ 0x7E0, 0x89, 0x25, false, 0, 6, 7, 4, "Overdrive Cut Switch #1", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x89, 0x25 }, UdsDefinition{ 0x7E0, 0x89, 0x25, false, 0, 6, 7, 4, "Overdrive Cut Switch #1", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x8A, 0x25 }, UdsDefinition{ 0x7E0, 0x8A, 0x25, false, 0, 6, 6, 4, "Overdrive Cut Switch #2", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x8A, 0x25 }, UdsDefinition{ 0x7E0, 0x8A, 0x25, false, 0, 6, 6, 4, "Overdrive Cut Switch #2", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x8B, 0x25 }, UdsDefinition{ 0x7E0, 0x8B, 0x25, false, 0, 6, 5, 4, "Pattern Switch (PWR/M)", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x8B, 0x25 }, UdsDefinition{ 0x7E0, 0x8B, 0x25, false, 0, 6, 5, 4, "Pattern Switch (PWR/M)", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x8C, 0x25 }, UdsDefinition{ 0x7E0, 0x8C, 0x25, false, 0, 6, 4, 4, "Snow or 2nd Start Mode", 0, "OFF" });
// }
// void init_udsDefinitions_part7() {
//     udsMap.emplace(uds_key{ 0x7E0, 0x8C, 0x25 }, UdsDefinition{ 0x7E0, 0x8C, 0x25, false, 0, 6, 4, 4, "Snow or 2nd Start Mode", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x20E, 0x25 }, UdsDefinition{ 0x7E0, 0x20E, 0x25, false, 0, 6, 2, 4, "Snow Switch Status", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x20E, 0x25 }, UdsDefinition{ 0x7E0, 0x20E, 0x25, false, 0, 6, 2, 4, "Snow Switch Status", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C8, 0x25 }, UdsDefinition{ 0x7E0, 0x2C8, 0x25, false, 0, 6, 0, 4, "Normal Mode Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C8, 0x25 }, UdsDefinition{ 0x7E0, 0x2C8, 0x25, false, 0, 6, 0, 4, "Normal Mode Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2EE, 0x25 }, UdsDefinition{ 0x7E0, 0x2EE, 0x25, false, 0, 6, 1, 4, "ECO Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2EE, 0x25 }, UdsDefinition{ 0x7E0, 0x2EE, 0x25, false, 0, 6, 1, 4, "ECO Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x47C, 0x25 }, UdsDefinition{ 0x7E0, 0x47C, 0x25, false, 0, 6, 3, 4, "Sports Drive Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x47C, 0x25 }, UdsDefinition{ 0x7E0, 0x47C, 0x25, false, 0, 6, 3, 4, "Sports Drive Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x8D, 0x25 }, UdsDefinition{ 0x7E0, 0x8D, 0x25, false, 0, 7, 7, 4, "TPS 1 Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x8D, 0x25 }, UdsDefinition{ 0x7E0, 0x8D, 0x25, false, 0, 7, 7, 4, "TPS 1 Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x8E, 0x25 }, UdsDefinition{ 0x7E0, 0x8E, 0x25, false, 0, 7, 6, 4, "TPS 2 Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x8E, 0x25 }, UdsDefinition{ 0x7E0, 0x8E, 0x25, false, 0, 7, 6, 4, "TPS 2 Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x8F, 0x25 }, UdsDefinition{ 0x7E0, 0x8F, 0x25, false, 0, 7, 5, 4, "TPS 3 Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x8F, 0x25 }, UdsDefinition{ 0x7E0, 0x8F, 0x25, false, 0, 7, 5, 4, "TPS 3 Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x47D, 0x25 }, UdsDefinition{ 0x7E0, 0x47D, 0x25, false, 0, 7, 4, 4, "TPS 4 Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x47D, 0x25 }, UdsDefinition{ 0x7E0, 0x47D, 0x25, false, 0, 7, 4, 4, "TPS 4 Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x47E, 0x25 }, UdsDefinition{ 0x7E0, 0x47E, 0x25, false, 0, 7, 3, 4, "TPS 5 Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x47E, 0x25 }, UdsDefinition{ 0x7E0, 0x47E, 0x25, false, 0, 7, 3, 4, "TPS 5 Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x47F, 0x25 }, UdsDefinition{ 0x7E0, 0x47F, 0x25, false, 0, 7, 2, 4, "TPS 6 Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x47F, 0x25 }, UdsDefinition{ 0x7E0, 0x47F, 0x25, false, 0, 7, 2, 4, "TPS 6 Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x90, 0x25 }, UdsDefinition{ 0x7E0, 0x90, 0x25, false, 0, 8, 7, 4, "Low Gear Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x90, 0x25 }, UdsDefinition{ 0x7E0, 0x90, 0x25, false, 0, 8, 7, 4, "Low Gear Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x91, 0x25 }, UdsDefinition{ 0x7E0, 0x91, 0x25, false, 0, 8, 4, 4, "Kick Down Switch Status", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x91, 0x25 }, UdsDefinition{ 0x7E0, 0x91, 0x25, false, 0, 8, 4, 4, "Kick Down Switch Status", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x92, 0x25 }, UdsDefinition{ 0x7E0, 0x92, 0x25, false, 0, 8, 3, 4, "Transfer L4", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x92, 0x25 }, UdsDefinition{ 0x7E0, 0x92, 0x25, false, 0, 8, 3, 4, "Transfer L4", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x93, 0x25 }, UdsDefinition{ 0x7E0, 0x93, 0x25, false, 0, 8, 2, 4, "Neutral Position SW Signal", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x93, 0x25 }, UdsDefinition{ 0x7E0, 0x93, 0x25, false, 0, 8, 2, 4, "Neutral Position SW Signal", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x94, 0x25 }, UdsDefinition{ 0x7E0, 0x94, 0x25, false, 0, 8, 1, 4, "Brake Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x94, 0x25 }, UdsDefinition{ 0x7E0, 0x94, 0x25, false, 0, 8, 1, 4, "Brake Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x95, 0x25 }, UdsDefinition{ 0x7E0, 0x95, 0x25, false, 0, 8, 0, 4, "Brake Switch Status", 0, "Unable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x95, 0x25 }, UdsDefinition{ 0x7E0, 0x95, 0x25, false, 0, 8, 0, 4, "Brake Switch Status", 1, "Able" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1D6, 0x25 }, UdsDefinition{ 0x7E0, 0x1D6, 0x25, false, 0, 8, 6, 4, "Transfer Neutral", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1D6, 0x25 }, UdsDefinition{ 0x7E0, 0x1D6, 0x25, false, 0, 8, 6, 4, "Transfer Neutral", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1D7, 0x25 }, UdsDefinition{ 0x7E0, 0x1D7, 0x25, false, 0, 8, 5, 4, "4WD SW", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1D7, 0x25 }, UdsDefinition{ 0x7E0, 0x1D7, 0x25, false, 0, 8, 5, 4, "4WD SW", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C9, 0x25 }, UdsDefinition{ 0x7E0, 0x2C9, 0x25, false, 0, 9, 6, 4, "Sports Mode Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C9, 0x25 }, UdsDefinition{ 0x7E0, 0x2C9, 0x25, false, 0, 9, 6, 4, "Sports Mode Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C9, 0x25 }, UdsDefinition{ 0x7E0, 0x2C9, 0x25, false, 0, 9, 6, 4, "Sports Mode Switch", 2, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C9, 0x25 }, UdsDefinition{ 0x7E0, 0x2C9, 0x25, false, 0, 9, 6, 4, "Sports Mode Switch", 3, "3" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3EC, 0x25 }, UdsDefinition{ 0x7E0, 0x3EC, 0x25, false, 0, 9, 5, 4, "EV City Mode Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3EC, 0x25 }, UdsDefinition{ 0x7E0, 0x3EC, 0x25, false, 0, 9, 5, 4, "EV City Mode Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x43E, 0x25 }, UdsDefinition{ 0x7E0, 0x43E, 0x25, false, 0, 9, 4, 4, "iMT Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x43E, 0x25 }, UdsDefinition{ 0x7E0, 0x43E, 0x25, false, 0, 9, 4, 4, "iMT Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x48D, 0x25 }, UdsDefinition{ 0x7E0, 0x48D, 0x25, false, 0, 9, 3, 4, "Neutral Position SW Signal", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x48D, 0x25 }, UdsDefinition{ 0x7E0, 0x48D, 0x25, false, 0, 9, 3, 4, "Neutral Position SW Signal", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x550, 0x25 }, UdsDefinition{ 0x7E0, 0x550, 0x25, false, 0, 9, 2, 4, "Launch Control Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x550, 0x25 }, UdsDefinition{ 0x7E0, 0x550, 0x25, false, 0, 9, 2, 4, "Launch Control Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x96, 0x25 }, UdsDefinition{ 0x7E0, 0x96, 0x25, false, 0, 10, 7, 4, "Shift Indication Enable", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x96, 0x25 }, UdsDefinition{ 0x7E0, 0x96, 0x25, false, 0, 10, 7, 4, "Shift Indication Enable", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x97, 0x25 }, UdsDefinition{ 0x7E0, 0x97, 0x25, false, 0, 10, 6, 4, "Clutch Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x97, 0x25 }, UdsDefinition{ 0x7E0, 0x97, 0x25, false, 0, 10, 6, 4, "Clutch Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x208, 0x25 }, UdsDefinition{ 0x7E0, 0x208, 0x25, false, 0, 10, 4, 4, "Cruise Cancel Signal", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x208, 0x25 }, UdsDefinition{ 0x7E0, 0x208, 0x25, false, 0, 10, 4, 4, "Cruise Cancel Signal", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x20F, 0x25 }, UdsDefinition{ 0x7E0, 0x20F, 0x25, false, 0, 10, 3, 4, "A/C Pressure Normal SW", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x20F, 0x25 }, UdsDefinition{ 0x7E0, 0x20F, 0x25, false, 0, 10, 3, 4, "A/C Pressure Normal SW", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x210, 0x25 }, UdsDefinition{ 0x7E0, 0x210, 0x25, false, 0, 10, 2, 4, "A/C Pressure Abnormal SW", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x210, 0x25 }, UdsDefinition{ 0x7E0, 0x210, 0x25, false, 0, 10, 2, 4, "A/C Pressure Abnormal SW", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x211, 0x25 }, UdsDefinition{ 0x7E0, 0x211, 0x25, false, 0, 10, 0, 4, "ASL Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x211, 0x25 }, UdsDefinition{ 0x7E0, 0x211, 0x25, false, 0, 10, 0, 4, "ASL Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0xC7, 0xB, 0x25 }, UdsDefinition{ 0xC7, 0xB, 0x25, false, 0, 10, 0, 1.0, 0.0, 4, "SIMRAV ID Low" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x98, 0x25 }, UdsDefinition{ 0x7E0, 0x98, 0x25, false, 0, 11, 7, 4, "A/C Signal", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x98, 0x25 }, UdsDefinition{ 0x7E0, 0x98, 0x25, false, 0, 11, 7, 4, "A/C Signal", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x99, 0x25 }, UdsDefinition{ 0x7E0, 0x99, 0x25, false, 0, 11, 2, 4, "TC Terminal", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x99, 0x25 }, UdsDefinition{ 0x7E0, 0x99, 0x25, false, 0, 11, 2, 4, "TC Terminal", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x9A, 0x25 }, UdsDefinition{ 0x7E0, 0x9A, 0x25, false, 0, 11, 1, 4, "Throttle Open Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x9A, 0x25 }, UdsDefinition{ 0x7E0, 0x9A, 0x25, false, 0, 11, 1, 4, "Throttle Open Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1D8, 0x25 }, UdsDefinition{ 0x7E0, 0x1D8, 0x25, false, 0, 11, 6, 4, "Idle Up Signal", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1D8, 0x25 }, UdsDefinition{ 0x7E0, 0x1D8, 0x25, false, 0, 11, 6, 4, "Idle Up Signal", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x209, 0x25 }, UdsDefinition{ 0x7E0, 0x209, 0x25, false, 0, 11, 3, 4, "Key Unlock Signal", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x209, 0x25 }, UdsDefinition{ 0x7E0, 0x209, 0x25, false, 0, 11, 3, 4, "Key Unlock Signal", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3DD, 0x25 }, UdsDefinition{ 0x7E0, 0x3DD, 0x25, false, 0, 11, 0, 4, "Cruise Main SW", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3DD, 0x25 }, UdsDefinition{ 0x7E0, 0x3DD, 0x25, false, 0, 11, 0, 4, "Cruise Main SW", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2CA, 0x25 }, UdsDefinition{ 0x7E0, 0x2CA, 0x25, false, 0, 15, 7, 4, "Vehicle Spec Signal 1", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2CA, 0x25 }, UdsDefinition{ 0x7E0, 0x2CA, 0x25, false, 0, 15, 7, 4, "Vehicle Spec Signal 1", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2CB, 0x28 }, UdsDefinition{ 0x7E0, 0x2CB, 0x28, false, 13, 0, 0, 1.0, 0.0, 4, "Total Distance Traveled" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x396, 0x29 }, UdsDefinition{ 0x7E0, 0x396, 0x29, false, 52, 0, 0, 1.0, 0.0, 4, "Previous Trip Alternator Max Output Time" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x397, 0x29 }, UdsDefinition{ 0x7E0, 0x397, 0x29, false, 48, 2, 0, 0.1, 0.0, 4, "Initial Engine Battery Minimum Voltage" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x398, 0x29 }, UdsDefinition{ 0x7E0, 0x398, 0x29, false, 52, 3, 0, 1.0, 0.0, 4, "Previous Trip Charge Control Time" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x399, 0x29 }, UdsDefinition{ 0x7E0, 0x399, 0x29, false, 57, 5, 0, 1.0, -40.0, 4, "Previous Trip Average Battery Temperature" });
//     udsMap.emplace(uds_key{ 0xC7, 0xC, 0x2B }, UdsDefinition{ 0xC7, 0xC, 0x2B, false, 0, 0, 7, 4, "Remote DTC Recorder", 0, "NOT Avail" });
//     udsMap.emplace(uds_key{ 0xC7, 0xC, 0x2B }, UdsDefinition{ 0xC7, 0xC, 0x2B, false, 0, 0, 7, 4, "Remote DTC Recorder", 1, "Available" });
//     udsMap.emplace(uds_key{ 0xC7, 0xD, 0x2B }, UdsDefinition{ 0xC7, 0xD, 0x2B, false, 0, 0, 6, 4, "Remote Monitoring", 0, "NOT Avail" });
//     udsMap.emplace(uds_key{ 0xC7, 0xD, 0x2B }, UdsDefinition{ 0xC7, 0xD, 0x2B, false, 0, 0, 6, 4, "Remote Monitoring", 1, "Available" });
//     udsMap.emplace(uds_key{ 0xC7, 0xE, 0x2B }, UdsDefinition{ 0xC7, 0xE, 0x2B, false, 0, 0, 5, 4, "Remote Precaution", 0, "NOT Avail" });
//     udsMap.emplace(uds_key{ 0xC7, 0xE, 0x2B }, UdsDefinition{ 0xC7, 0xE, 0x2B, false, 0, 0, 5, 4, "Remote Precaution", 1, "Available" });
//     udsMap.emplace(uds_key{ 0xC7, 0xF, 0x2B }, UdsDefinition{ 0xC7, 0xF, 0x2B, false, 0, 0, 4, 4, "Remote Vehicle Status", 0, "NOT Avail" });
//     udsMap.emplace(uds_key{ 0xC7, 0xF, 0x2B }, UdsDefinition{ 0xC7, 0xF, 0x2B, false, 0, 0, 4, 4, "Remote Vehicle Status", 1, "Available" });
//     udsMap.emplace(uds_key{ 0xC7, 0x10, 0x2B }, UdsDefinition{ 0xC7, 0x10, 0x2B, false, 0, 0, 3, 4, "Remote Detect DTC", 0, "NOT Avail" });
//     udsMap.emplace(uds_key{ 0xC7, 0x10, 0x2B }, UdsDefinition{ 0xC7, 0x10, 0x2B, false, 0, 0, 3, 4, "Remote Detect DTC", 1, "Available" });
//     udsMap.emplace(uds_key{ 0xC7, 0x11, 0x2B }, UdsDefinition{ 0xC7, 0x11, 0x2B, false, 0, 0, 2, 4, "Remote FFD", 0, "NOT Avail" });
//     udsMap.emplace(uds_key{ 0xC7, 0x11, 0x2B }, UdsDefinition{ 0xC7, 0x11, 0x2B, false, 0, 0, 2, 4, "Remote FFD", 1, "Available" });
//     udsMap.emplace(uds_key{ 0xC7, 0x12, 0x2B }, UdsDefinition{ 0xC7, 0x12, 0x2B, false, 0, 0, 1, 4, "Remote Detected DTC", 0, "NOT Avail" });
//     udsMap.emplace(uds_key{ 0xC7, 0x12, 0x2B }, UdsDefinition{ 0xC7, 0x12, 0x2B, false, 0, 0, 1, 4, "Remote Detected DTC", 1, "Available" });
//     udsMap.emplace(uds_key{ 0xC7, 0x13, 0x2B }, UdsDefinition{ 0xC7, 0x13, 0x2B, false, 0, 0, 0, 4, "Remote Warning", 0, "NOT Avail" });
//     udsMap.emplace(uds_key{ 0xC7, 0x13, 0x2B }, UdsDefinition{ 0xC7, 0x13, 0x2B, false, 0, 0, 0, 4, "Remote Warning", 1, "Available" });
//     udsMap.emplace(uds_key{ 0xC7, 0x14, 0x2B }, UdsDefinition{ 0xC7, 0x14, 0x2B, false, 0, 1, 7, 4, "Remote Guest Driver Status", 0, "NOT Avail" });
//     udsMap.emplace(uds_key{ 0xC7, 0x14, 0x2B }, UdsDefinition{ 0xC7, 0x14, 0x2B, false, 0, 1, 7, 4, "Remote Guest Driver Status", 1, "Available" });
//     udsMap.emplace(uds_key{ 0xC7, 0x15, 0x2B }, UdsDefinition{ 0xC7, 0x15, 0x2B, false, 0, 1, 6, 4, "Remote Navigation Display", 0, "NOT Avail" });
// }
// void init_udsDefinitions_part8() {
//     udsMap.emplace(uds_key{ 0xC7, 0x15, 0x2B }, UdsDefinition{ 0xC7, 0x15, 0x2B, false, 0, 1, 6, 4, "Remote Navigation Display", 1, "Available" });
//     udsMap.emplace(uds_key{ 0xC7, 0x16, 0x2B }, UdsDefinition{ 0xC7, 0x16, 0x2B, false, 0, 1, 5, 4, "Remote Vehicle Location", 0, "NOT Avail" });
//     udsMap.emplace(uds_key{ 0xC7, 0x16, 0x2B }, UdsDefinition{ 0xC7, 0x16, 0x2B, false, 0, 1, 5, 4, "Remote Vehicle Location", 1, "Available" });
//     udsMap.emplace(uds_key{ 0xC7, 0x17, 0x2B }, UdsDefinition{ 0xC7, 0x17, 0x2B, false, 0, 1, 4, 4, "Maintenance Message", 0, "NOT Avail" });
//     udsMap.emplace(uds_key{ 0xC7, 0x17, 0x2B }, UdsDefinition{ 0xC7, 0x17, 0x2B, false, 0, 1, 4, 4, "Maintenance Message", 1, "Available" });
//     udsMap.emplace(uds_key{ 0xC7, 0x18, 0x2B }, UdsDefinition{ 0xC7, 0x18, 0x2B, false, 0, 1, 3, 4, "Remote Vehicle Control History", 0, "NOT Avail" });
//     udsMap.emplace(uds_key{ 0xC7, 0x18, 0x2B }, UdsDefinition{ 0xC7, 0x18, 0x2B, false, 0, 1, 3, 4, "Remote Vehicle Control History", 1, "Available" });
//     udsMap.emplace(uds_key{ 0xC7, 0x19, 0x2B }, UdsDefinition{ 0xC7, 0x19, 0x2B, false, 0, 1, 2, 4, "Remote Immobiliser", 0, "NOT Avail" });
//     udsMap.emplace(uds_key{ 0xC7, 0x19, 0x2B }, UdsDefinition{ 0xC7, 0x19, 0x2B, false, 0, 1, 2, 4, "Remote Immobiliser", 1, "Available" });
//     udsMap.emplace(uds_key{ 0xC7, 0x1A, 0x2B }, UdsDefinition{ 0xC7, 0x1A, 0x2B, false, 0, 1, 1, 4, "Remote Operation", 0, "NOT Avail" });
//     udsMap.emplace(uds_key{ 0xC7, 0x1A, 0x2B }, UdsDefinition{ 0xC7, 0x1A, 0x2B, false, 0, 1, 1, 4, "Remote Operation", 1, "Available" });
//     udsMap.emplace(uds_key{ 0xC7, 0x1B, 0x2B }, UdsDefinition{ 0xC7, 0x1B, 0x2B, false, 0, 1, 0, 4, "Remote Alarm Detect", 0, "NOT Avail" });
//     udsMap.emplace(uds_key{ 0xC7, 0x1B, 0x2B }, UdsDefinition{ 0xC7, 0x1B, 0x2B, false, 0, 1, 0, 4, "Remote Alarm Detect", 1, "Available" });
//     udsMap.emplace(uds_key{ 0xC7, 0x1C, 0x2B }, UdsDefinition{ 0xC7, 0x1C, 0x2B, false, 0, 2, 7, 4, "Remote Service Function", 0, "NOT Avail" });
//     udsMap.emplace(uds_key{ 0xC7, 0x1C, 0x2B }, UdsDefinition{ 0xC7, 0x1C, 0x2B, false, 0, 2, 7, 4, "Remote Service Function", 1, "Available" });
//     udsMap.emplace(uds_key{ 0xC7, 0x1D, 0x2B }, UdsDefinition{ 0xC7, 0x1D, 0x2B, false, 0, 2, 0, 4, "Remote A/C by Smart Key", 0, "NOT Avail" });
//     udsMap.emplace(uds_key{ 0xC7, 0x1D, 0x2B }, UdsDefinition{ 0xC7, 0x1D, 0x2B, false, 0, 2, 0, 4, "Remote A/C by Smart Key", 1, "Available" });
//     udsMap.emplace(uds_key{ 0xC7, 0x28, 0x2B }, UdsDefinition{ 0xC7, 0x28, 0x2B, false, 0, 2, 6, 4, "eConnect Remote Vehicle Location", 0, "NOT Avail" });
//     udsMap.emplace(uds_key{ 0xC7, 0x28, 0x2B }, UdsDefinition{ 0xC7, 0x28, 0x2B, false, 0, 2, 6, 4, "eConnect Remote Vehicle Location", 1, "Available" });
//     udsMap.emplace(uds_key{ 0xC7, 0x29, 0x2B }, UdsDefinition{ 0xC7, 0x29, 0x2B, false, 0, 2, 5, 4, "Driving Trip Data Notification", 0, "NOT Avail" });
//     udsMap.emplace(uds_key{ 0xC7, 0x29, 0x2B }, UdsDefinition{ 0xC7, 0x29, 0x2B, false, 0, 2, 5, 4, "Driving Trip Data Notification", 1, "Available" });
//     udsMap.emplace(uds_key{ 0xC7, 0x2A, 0x2B }, UdsDefinition{ 0xC7, 0x2A, 0x2B, false, 0, 2, 4, 4, "eConnect Remote Operation", 0, "NOT Avail" });
//     udsMap.emplace(uds_key{ 0xC7, 0x2A, 0x2B }, UdsDefinition{ 0xC7, 0x2A, 0x2B, false, 0, 2, 4, 4, "eConnect Remote Operation", 1, "Available" });
//     udsMap.emplace(uds_key{ 0xC7, 0x2B, 0x2B }, UdsDefinition{ 0xC7, 0x2B, 0x2B, false, 0, 2, 3, 4, "eConnect State Change Notification", 0, "NOT Avail" });
//     udsMap.emplace(uds_key{ 0xC7, 0x2B, 0x2B }, UdsDefinition{ 0xC7, 0x2B, 0x2B, false, 0, 2, 3, 4, "eConnect State Change Notification", 1, "Available" });
//     udsMap.emplace(uds_key{ 0xC7, 0x2C, 0x2B }, UdsDefinition{ 0xC7, 0x2C, 0x2B, false, 0, 2, 2, 4, "eConnect Event Notification", 0, "NOT Avail" });
//     udsMap.emplace(uds_key{ 0xC7, 0x2C, 0x2B }, UdsDefinition{ 0xC7, 0x2C, 0x2B, false, 0, 2, 2, 4, "eConnect Event Notification", 1, "Available" });
//     udsMap.emplace(uds_key{ 0xC7, 0x2D, 0x2B }, UdsDefinition{ 0xC7, 0x2D, 0x2B, false, 0, 2, 1, 4, "eConnect State Notification", 0, "NOT Avail" });
//     udsMap.emplace(uds_key{ 0xC7, 0x2D, 0x2B }, UdsDefinition{ 0xC7, 0x2D, 0x2B, false, 0, 2, 1, 4, "eConnect State Notification", 1, "Available" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x48E, 0x2C }, UdsDefinition{ 0x7E0, 0x48E, 0x2C, false, 9, 0, 0, 0.001, -32.768, 4, "Auxiliary Battery Average Current during IG OFF 1 Trip before" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x48F, 0x2C }, UdsDefinition{ 0x7E0, 0x48F, 0x2C, false, 9, 2, 0, 0.001, -32.768, 4, "Auxiliary Battery Average Current during IG OFF 2 Trip before" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x490, 0x2C }, UdsDefinition{ 0x7E0, 0x490, 0x2C, false, 9, 4, 0, 0.001, -32.768, 4, "Auxiliary Battery Average Current during IG OFF 3 Trip before" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x491, 0x2C }, UdsDefinition{ 0x7E0, 0x491, 0x2C, false, 13, 6, 0, 2.0, 0.0, 4, "Total Distance Up to 1 Trip before" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x492, 0x2C }, UdsDefinition{ 0x7E0, 0x492, 0x2C, false, 13, 8, 0, 2.0, 0.0, 4, "Total Distance Up to 2 Trip before" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x493, 0x2C }, UdsDefinition{ 0x7E0, 0x493, 0x2C, false, 13, 10, 0, 2.0, 0.0, 4, "Total Distance Up to 3 Trip before" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x494, 0x2C }, UdsDefinition{ 0x7E0, 0x494, 0x2C, false, 55, 12, 0, 1.0, 0.0, 4, "IG OFF Time before 1 trip" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x495, 0x2C }, UdsDefinition{ 0x7E0, 0x495, 0x2C, false, 55, 13, 0, 1.0, 0.0, 4, "IG OFF Time before 2 trip" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x496, 0x2C }, UdsDefinition{ 0x7E0, 0x496, 0x2C, false, 55, 14, 0, 1.0, 0.0, 4, "IG OFF Time before 3 trip" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x497, 0x2C }, UdsDefinition{ 0x7E0, 0x497, 0x2C, false, 53, 15, 0, 2.0, 0.0, 4, "IG ON Time Up to 1 trip before" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x498, 0x2C }, UdsDefinition{ 0x7E0, 0x498, 0x2C, false, 53, 16, 0, 2.0, 0.0, 4, "IG ON Time Up to 2 trip before" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x499, 0x2C }, UdsDefinition{ 0x7E0, 0x499, 0x2C, false, 53, 17, 0, 2.0, 0.0, 4, "IG ON Time Up to 3 trip before" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x49A, 0x2C }, UdsDefinition{ 0x7E0, 0x49A, 0x2C, false, 53, 18, 0, 2.0, 0.0, 4, "Engine Run Time before 1 trip" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x49B, 0x2C }, UdsDefinition{ 0x7E0, 0x49B, 0x2C, false, 53, 19, 0, 2.0, 0.0, 4, "Engine Run Time before 2 trip" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x49C, 0x2C }, UdsDefinition{ 0x7E0, 0x49C, 0x2C, false, 53, 20, 0, 2.0, 0.0, 4, "Engine Run Time before 3 trip" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x49D, 0x2C }, UdsDefinition{ 0x7E0, 0x49D, 0x2C, false, 55, 21, 0, 1.0, 0.0, 4, "Time of Long Term Leaving with IG OFF (1st)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x49E, 0x2C }, UdsDefinition{ 0x7E0, 0x49E, 0x2C, false, 55, 22, 0, 1.0, 0.0, 4, "Time of Long Term Leaving with IG OFF (2nd)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x49F, 0x2C }, UdsDefinition{ 0x7E0, 0x49F, 0x2C, false, 55, 23, 0, 1.0, 0.0, 4, "Time of Long Term Leaving with IG OFF (3rd)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4A0, 0x2C }, UdsDefinition{ 0x7E0, 0x4A0, 0x2C, false, 13, 24, 0, 2.0, 0.0, 4, "Total Distance Indicated after Long Term Leaving with IG OFF (1st)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4A1, 0x2C }, UdsDefinition{ 0x7E0, 0x4A1, 0x2C, false, 13, 26, 0, 2.0, 0.0, 4, "Total Distance Indicated after Long Term Leaving with IG OFF (2nd)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4A2, 0x2C }, UdsDefinition{ 0x7E0, 0x4A2, 0x2C, false, 13, 28, 0, 2.0, 0.0, 4, "Total Distance Indicated after Long Term Leaving with IG OFF (3rd)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4A3, 0x2C }, UdsDefinition{ 0x7E0, 0x4A3, 0x2C, false, 18, 30, 0, 0.1, 0.0, 4, "Auxiliary Battery Charging Integrated Current" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4A4, 0x2C }, UdsDefinition{ 0x7E0, 0x4A4, 0x2C, false, 18, 34, 0, 0.1, 0.0, 4, "Auxiliary Battery Discharging Integrated Current" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4A5, 0x2C }, UdsDefinition{ 0x7E0, 0x4A5, 0x2C, false, 0, 38, 0, 1.0, 0.0, 4, "Auxiliary Battery Integrated Thermal Load" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4A6, 0x2C }, UdsDefinition{ 0x7E0, 0x4A6, 0x2C, false, 18, 42, 0, 1.0, -128.0, 4, "Auxiliary Battery Capacity after IG ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4A7, 0x2C }, UdsDefinition{ 0x7E0, 0x4A7, 0x2C, false, 18, 43, 0, 1.0, -128.0, 4, "Auxiliary Battery Capacity after IG OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4A8, 0x2C }, UdsDefinition{ 0x7E0, 0x4A8, 0x2C, false, 54, 44, 0, 1.0, 0.0, 4, "Integrated Engine Run Time" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4A9, 0x2C }, UdsDefinition{ 0x7E0, 0x4A9, 0x2C, false, 0, 46, 0, 1.0, 0.0, 4, "Number of Long Term Leaving with IG OFF" });
//     udsMap.emplace(uds_key{ 0xC7, 0x25, 0x2F }, UdsDefinition{ 0xC7, 0x25, 0x2F, false, 0, 0, 0, 1.0, 0.0, 4, "Unsent Emergency Call Number" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x212, 0x30 }, UdsDefinition{ 0x7E0, 0x212, 0x30, false, 5, 0, 0, 0.009765625, 0.0, 4, "Actual VVT Angle #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x213, 0x30 }, UdsDefinition{ 0x7E0, 0x213, 0x30, false, 5, 2, 0, 0.009765625, 0.0, 4, "Actual VVT Angle #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x214, 0x30 }, UdsDefinition{ 0x7E0, 0x214, 0x30, false, 5, 4, 0, 0.009765625, 0.0, 4, "Actual VVT Ex Angle #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x215, 0x30 }, UdsDefinition{ 0x7E0, 0x215, 0x30, false, 5, 6, 0, 0.009765625, 0.0, 4, "Actual VVT Ex Angle #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3A5, 0x30 }, UdsDefinition{ 0x7E0, 0x3A5, 0x30, false, 57, 8, 0, 0.625, -40.0, 4, "Coolant Temp Variation after Waterpump Start" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3A6, 0x30 }, UdsDefinition{ 0x7E0, 0x3A6, 0x30, false, 57, 9, 0, 0.625, -40.0, 4, "Intake Air Temp Variation after Engine Start" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x9B, 0x31 }, UdsDefinition{ 0x7E0, 0x9B, 0x31, false, 46, 0, 0, 0.01, 0.0, 4, "MAF #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x9C, 0x31 }, UdsDefinition{ 0x7E0, 0x9C, 0x31, false, 46, 2, 0, 0.01, 0.0, 4, "MAF #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x9D, 0x31 }, UdsDefinition{ 0x7E0, 0x9D, 0x31, false, 57, 4, 0, 1.0, -40.0, 4, "Intake Air #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x9E, 0x31 }, UdsDefinition{ 0x7E0, 0x9E, 0x31, false, 57, 5, 0, 1.0, -40.0, 4, "Intake Air #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x9F, 0x31 }, UdsDefinition{ 0x7E0, 0x9F, 0x31, false, 57, 6, 0, 1.0, -40.0, 4, "Intake Air Temp (Turbo)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA0, 0x31 }, UdsDefinition{ 0x7E0, 0xA0, 0x31, false, 48, 7, 0, 7.62939453125e-05, 0.0, 4, "IAC Sensor Voltage" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA1, 0x31 }, UdsDefinition{ 0x7E0, 0xA1, 0x31, false, 5, 9, 0, 0.00762939453125, -250.0, 4, "Intake Air Control Position" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA2, 0x31 }, UdsDefinition{ 0x7E0, 0xA2, 0x31, false, 60, 13, 0, 0.009765625, 0.0, 4, "VALVEMATIC Current Angle" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA3, 0x31 }, UdsDefinition{ 0x7E0, 0xA3, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IG OFF", 0, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA3, 0x31 }, UdsDefinition{ 0x7E0, 0xA3, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IG OFF", 11, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA3, 0x31 }, UdsDefinition{ 0x7E0, 0xA3, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IG OFF", 21, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA3, 0x31 }, UdsDefinition{ 0x7E0, 0xA3, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IG OFF", 22, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA3, 0x31 }, UdsDefinition{ 0x7E0, 0xA3, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IG OFF", 23, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA3, 0x31 }, UdsDefinition{ 0x7E0, 0xA3, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IG OFF", 25, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA3, 0x31 }, UdsDefinition{ 0x7E0, 0xA3, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IG OFF", 101, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA3, 0x31 }, UdsDefinition{ 0x7E0, 0xA3, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IG OFF", 105, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA4, 0x31 }, UdsDefinition{ 0x7E0, 0xA4, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IG ON", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA4, 0x31 }, UdsDefinition{ 0x7E0, 0xA4, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IG ON", 11, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA4, 0x31 }, UdsDefinition{ 0x7E0, 0xA4, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IG ON", 21, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA4, 0x31 }, UdsDefinition{ 0x7E0, 0xA4, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IG ON", 22, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA4, 0x31 }, UdsDefinition{ 0x7E0, 0xA4, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IG ON", 23, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA4, 0x31 }, UdsDefinition{ 0x7E0, 0xA4, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IG ON", 25, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA4, 0x31 }, UdsDefinition{ 0x7E0, 0xA4, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IG ON", 101, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA4, 0x31 }, UdsDefinition{ 0x7E0, 0xA4, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IG ON", 105, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA5, 0x31 }, UdsDefinition{ 0x7E0, 0xA5, 0x31, false, 0, 15, 0, 4, "VALVEMATIC Cranking", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA5, 0x31 }, UdsDefinition{ 0x7E0, 0xA5, 0x31, false, 0, 15, 0, 4, "VALVEMATIC Cranking", 11, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA5, 0x31 }, UdsDefinition{ 0x7E0, 0xA5, 0x31, false, 0, 15, 0, 4, "VALVEMATIC Cranking", 21, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA5, 0x31 }, UdsDefinition{ 0x7E0, 0xA5, 0x31, false, 0, 15, 0, 4, "VALVEMATIC Cranking", 22, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA5, 0x31 }, UdsDefinition{ 0x7E0, 0xA5, 0x31, false, 0, 15, 0, 4, "VALVEMATIC Cranking", 23, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA5, 0x31 }, UdsDefinition{ 0x7E0, 0xA5, 0x31, false, 0, 15, 0, 4, "VALVEMATIC Cranking", 25, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA5, 0x31 }, UdsDefinition{ 0x7E0, 0xA5, 0x31, false, 0, 15, 0, 4, "VALVEMATIC Cranking", 101, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA5, 0x31 }, UdsDefinition{ 0x7E0, 0xA5, 0x31, false, 0, 15, 0, 4, "VALVEMATIC Cranking", 105, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA6, 0x31 }, UdsDefinition{ 0x7E0, 0xA6, 0x31, false, 0, 15, 0, 4, "VALVEMATIC bef Warm Up", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA6, 0x31 }, UdsDefinition{ 0x7E0, 0xA6, 0x31, false, 0, 15, 0, 4, "VALVEMATIC bef Warm Up", 11, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA6, 0x31 }, UdsDefinition{ 0x7E0, 0xA6, 0x31, false, 0, 15, 0, 4, "VALVEMATIC bef Warm Up", 21, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA6, 0x31 }, UdsDefinition{ 0x7E0, 0xA6, 0x31, false, 0, 15, 0, 4, "VALVEMATIC bef Warm Up", 22, "ON" });
// }
// void init_udsDefinitions_part9() {
//     udsMap.emplace(uds_key{ 0x7E0, 0xA6, 0x31 }, UdsDefinition{ 0x7E0, 0xA6, 0x31, false, 0, 15, 0, 4, "VALVEMATIC bef Warm Up", 23, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA6, 0x31 }, UdsDefinition{ 0x7E0, 0xA6, 0x31, false, 0, 15, 0, 4, "VALVEMATIC bef Warm Up", 25, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA6, 0x31 }, UdsDefinition{ 0x7E0, 0xA6, 0x31, false, 0, 15, 0, 4, "VALVEMATIC bef Warm Up", 101, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA6, 0x31 }, UdsDefinition{ 0x7E0, 0xA6, 0x31, false, 0, 15, 0, 4, "VALVEMATIC bef Warm Up", 105, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA7, 0x31 }, UdsDefinition{ 0x7E0, 0xA7, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IDM Hi Temp", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA7, 0x31 }, UdsDefinition{ 0x7E0, 0xA7, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IDM Hi Temp", 11, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA7, 0x31 }, UdsDefinition{ 0x7E0, 0xA7, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IDM Hi Temp", 21, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA7, 0x31 }, UdsDefinition{ 0x7E0, 0xA7, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IDM Hi Temp", 22, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA7, 0x31 }, UdsDefinition{ 0x7E0, 0xA7, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IDM Hi Temp", 23, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA7, 0x31 }, UdsDefinition{ 0x7E0, 0xA7, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IDM Hi Temp", 25, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA7, 0x31 }, UdsDefinition{ 0x7E0, 0xA7, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IDM Hi Temp", 101, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA7, 0x31 }, UdsDefinition{ 0x7E0, 0xA7, 0x31, false, 0, 15, 0, 4, "VALVEMATIC IDM Hi Temp", 105, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA8, 0x31 }, UdsDefinition{ 0x7E0, 0xA8, 0x31, false, 0, 15, 0, 4, "VALVEMATIC High(ACT)", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA8, 0x31 }, UdsDefinition{ 0x7E0, 0xA8, 0x31, false, 0, 15, 0, 4, "VALVEMATIC High(ACT)", 11, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA8, 0x31 }, UdsDefinition{ 0x7E0, 0xA8, 0x31, false, 0, 15, 0, 4, "VALVEMATIC High(ACT)", 21, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA8, 0x31 }, UdsDefinition{ 0x7E0, 0xA8, 0x31, false, 0, 15, 0, 4, "VALVEMATIC High(ACT)", 22, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA8, 0x31 }, UdsDefinition{ 0x7E0, 0xA8, 0x31, false, 0, 15, 0, 4, "VALVEMATIC High(ACT)", 23, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA8, 0x31 }, UdsDefinition{ 0x7E0, 0xA8, 0x31, false, 0, 15, 0, 4, "VALVEMATIC High(ACT)", 25, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA8, 0x31 }, UdsDefinition{ 0x7E0, 0xA8, 0x31, false, 0, 15, 0, 4, "VALVEMATIC High(ACT)", 101, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA8, 0x31 }, UdsDefinition{ 0x7E0, 0xA8, 0x31, false, 0, 15, 0, 4, "VALVEMATIC High(ACT)", 105, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA9, 0x31 }, UdsDefinition{ 0x7E0, 0xA9, 0x31, false, 0, 15, 0, 4, "VALVEMATIC aft Warm Up", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA9, 0x31 }, UdsDefinition{ 0x7E0, 0xA9, 0x31, false, 0, 15, 0, 4, "VALVEMATIC aft Warm Up", 11, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA9, 0x31 }, UdsDefinition{ 0x7E0, 0xA9, 0x31, false, 0, 15, 0, 4, "VALVEMATIC aft Warm Up", 21, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA9, 0x31 }, UdsDefinition{ 0x7E0, 0xA9, 0x31, false, 0, 15, 0, 4, "VALVEMATIC aft Warm Up", 22, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA9, 0x31 }, UdsDefinition{ 0x7E0, 0xA9, 0x31, false, 0, 15, 0, 4, "VALVEMATIC aft Warm Up", 23, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA9, 0x31 }, UdsDefinition{ 0x7E0, 0xA9, 0x31, false, 0, 15, 0, 4, "VALVEMATIC aft Warm Up", 25, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA9, 0x31 }, UdsDefinition{ 0x7E0, 0xA9, 0x31, false, 0, 15, 0, 4, "VALVEMATIC aft Warm Up", 101, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xA9, 0x31 }, UdsDefinition{ 0x7E0, 0xA9, 0x31, false, 0, 15, 0, 4, "VALVEMATIC aft Warm Up", 105, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xAA, 0x31 }, UdsDefinition{ 0x7E0, 0xAA, 0x31, false, 0, 15, 0, 4, "VALVEMATIC Low(ACT)", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xAA, 0x31 }, UdsDefinition{ 0x7E0, 0xAA, 0x31, false, 0, 15, 0, 4, "VALVEMATIC Low(ACT)", 11, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xAA, 0x31 }, UdsDefinition{ 0x7E0, 0xAA, 0x31, false, 0, 15, 0, 4, "VALVEMATIC Low(ACT)", 21, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xAA, 0x31 }, UdsDefinition{ 0x7E0, 0xAA, 0x31, false, 0, 15, 0, 4, "VALVEMATIC Low(ACT)", 22, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xAA, 0x31 }, UdsDefinition{ 0x7E0, 0xAA, 0x31, false, 0, 15, 0, 4, "VALVEMATIC Low(ACT)", 23, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xAA, 0x31 }, UdsDefinition{ 0x7E0, 0xAA, 0x31, false, 0, 15, 0, 4, "VALVEMATIC Low(ACT)", 25, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xAA, 0x31 }, UdsDefinition{ 0x7E0, 0xAA, 0x31, false, 0, 15, 0, 4, "VALVEMATIC Low(ACT)", 101, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xAA, 0x31 }, UdsDefinition{ 0x7E0, 0xAA, 0x31, false, 0, 15, 0, 4, "VALVEMATIC Low(ACT)", 105, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2CC, 0x31 }, UdsDefinition{ 0x7E0, 0x2CC, 0x31, false, 34, 16, 0, 0.01, 0.0, 4, "Balance Pipe Pressure" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x39A, 0x31 }, UdsDefinition{ 0x7E0, 0x39A, 0x31, false, 48, 18, 0, 0.01953125, 0.0, 4, "VALVEMATIC Shaft Sensor Voltage" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4DB, 0x31 }, UdsDefinition{ 0x7E0, 0x4DB, 0x31, false, 57, 19, 0, 1.0, -40.0, 4, "Intercooler Coolant Temperature" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xAB, 0x33 }, UdsDefinition{ 0x7E0, 0xAB, 0x33, false, 56, 10, 0, 65.536, 0.0, 4, "O2 LR Switch Time B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xAC, 0x33 }, UdsDefinition{ 0x7E0, 0xAC, 0x33, false, 56, 11, 0, 65.536, 0.0, 4, "O2 LR Switch Time B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xAD, 0x33 }, UdsDefinition{ 0x7E0, 0xAD, 0x33, false, 56, 12, 0, 65.536, 0.0, 4, "O2 RL Switch Time B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xAE, 0x33 }, UdsDefinition{ 0x7E0, 0xAE, 0x33, false, 56, 13, 0, 65.536, 0.0, 4, "O2 RL Switch Time B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xAF, 0x33 }, UdsDefinition{ 0x7E0, 0xAF, 0x33, false, 40, 14, 0, 0.32421875, 0.0, 4, "O2S Impedance B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xB0, 0x33 }, UdsDefinition{ 0x7E0, 0xB0, 0x33, false, 40, 16, 0, 0.32421875, 0.0, 4, "O2S Impedance B2S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xB1, 0x33 }, UdsDefinition{ 0x7E0, 0xB1, 0x33, false, 57, 18, 0, 0.1, -40.0, 4, "Exhaust Temperature B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xB2, 0x33 }, UdsDefinition{ 0x7E0, 0xB2, 0x33, false, 57, 20, 0, 0.1, -40.0, 4, "Exhaust Temperature B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xB3, 0x33 }, UdsDefinition{ 0x7E0, 0xB3, 0x33, false, 57, 22, 0, 0.1, -40.0, 4, "Exhaust Temperature B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xB4, 0x33 }, UdsDefinition{ 0x7E0, 0xB4, 0x33, false, 57, 24, 0, 0.1, -40.0, 4, "Exhaust Temperature B2S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xB5, 0x33 }, UdsDefinition{ 0x7E0, 0xB5, 0x33, false, 34, 26, 0, 1.0, 0.0, 4, "Air Pump Pressure (Absolute)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xB6, 0x33 }, UdsDefinition{ 0x7E0, 0xB6, 0x33, false, 34, 28, 0, 1.0, 0.0, 4, "Air Pump2 Pressure (Absolute)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xB7, 0x33 }, UdsDefinition{ 0x7E0, 0xB7, 0x33, false, 34, 30, 0, 0.01, -327.68, 4, "DPF Differential Pressure" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x286, 0x33 }, UdsDefinition{ 0x7E0, 0x286, 0x33, false, 34, 32, 0, 0.01, 0.0, 4, "DPR/DPNR Absolute Pressure" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2F1, 0x33 }, UdsDefinition{ 0x7E0, 0x2F1, 0x33, false, 48, 34, 0, 7.62939453125e-05, 0.0, 4, "VN Position Sensor Out" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x363, 0x33 }, UdsDefinition{ 0x7E0, 0x363, 0x33, false, 48, 36, 0, 7.62939453125e-05, 0.0, 4, "VN Position Sensor Out #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4DA, 0x33 }, UdsDefinition{ 0x7E0, 0x4DA, 0x33, false, 40, 38, 0, 0.32421875, 0.0, 4, "A/F Sensor Impedance B1S2" });
//     udsMap.emplace(uds_key{ 0xC7, 0x26, 0x34 }, UdsDefinition{ 0xC7, 0x26, 0x34, false, 0, 0, 0, 4, "Backup Battery Status", 1, "Normal" });
//     udsMap.emplace(uds_key{ 0xC7, 0x26, 0x34 }, UdsDefinition{ 0xC7, 0x26, 0x34, false, 0, 0, 0, 4, "Backup Battery Status", 2, "Replace" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xB8, 0x35 }, UdsDefinition{ 0x7E0, 0xB8, 0x35, false, 57, 0, 0, 1.0, -40.0, 4, "Radiator Coolant Temp" });
//     udsMap.emplace(uds_key{ 0xC7, 0x27, 0x35 }, UdsDefinition{ 0xC7, 0x27, 0x35, false, 0, 0, 0, 4, "Activation Status", 1, "Shipping (Disable)" });
//     udsMap.emplace(uds_key{ 0xC7, 0x27, 0x35 }, UdsDefinition{ 0xC7, 0x27, 0x35, false, 0, 0, 0, 4, "Activation Status", 2, "Shipping (Enable)" });
//     udsMap.emplace(uds_key{ 0xC7, 0x27, 0x35 }, UdsDefinition{ 0xC7, 0x27, 0x35, false, 0, 0, 0, 4, "Activation Status", 3, "Full Services" });
//     udsMap.emplace(uds_key{ 0xC7, 0x27, 0x35 }, UdsDefinition{ 0xC7, 0x27, 0x35, false, 0, 0, 0, 4, "Activation Status", 4, "Full Services and F&I Service" });
//     udsMap.emplace(uds_key{ 0xC7, 0x27, 0x35 }, UdsDefinition{ 0xC7, 0x27, 0x35, false, 0, 0, 0, 4, "Activation Status", 5, "eCall only" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xB9, 0x35 }, UdsDefinition{ 0x7E0, 0xB9, 0x35, false, 36, 1, 0, 0.000390625, 0.0, 4, "Power Steering Pressure" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2CD, 0x35 }, UdsDefinition{ 0x7E0, 0x2CD, 0x35, false, 34, 3, 0, 0.022, 0.0, 4, "Engine Oil Pressure" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2CE, 0x35 }, UdsDefinition{ 0x7E0, 0x2CE, 0x35, false, 48, 5, 0, 0.01953125, 0.0, 4, "PCV Voltage for Oil Tank" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2CF, 0x35 }, UdsDefinition{ 0x7E0, 0x2CF, 0x35, false, 48, 6, 0, 0.01953125, 0.0, 4, "PCV Voltage for Ventilation Case" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x43F, 0x35 }, UdsDefinition{ 0x7E0, 0x43F, 0x35, false, 48, 7, 0, 7.62939453125e-05, 0.0, 4, "Brake Boost Pressure Sensor" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x479, 0x35 }, UdsDefinition{ 0x7E0, 0x479, 0x35, false, 48, 9, 0, 7.62939453125e-05, 0.0, 4, "Atmospheric Pressure Sensor" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xBA, 0x37 }, UdsDefinition{ 0x7E0, 0xBA, 0x37, false, 57, 0, 0, 0.625, -40.0, 4, "Initial Engine Coolant Temp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xBB, 0x37 }, UdsDefinition{ 0x7E0, 0xBB, 0x37, false, 57, 1, 0, 0.625, -40.0, 4, "Initial Intake Air Temp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xBC, 0x37 }, UdsDefinition{ 0x7E0, 0xBC, 0x37, false, 36, 2, 0, 0.001953125, 0.0, 4, "FPrs diff / Relief Vlv op" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xBD, 0x37 }, UdsDefinition{ 0x7E0, 0xBD, 0x37, false, 34, 4, 0, 0.01, 0.0, 4, "Air Pump Pulsation Pressure" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xBE, 0x37 }, UdsDefinition{ 0x7E0, 0xBE, 0x37, false, 34, 6, 0, 0.01, 0.0, 4, "Air Pump2 Pulsation Pressure" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xBF, 0x37 }, UdsDefinition{ 0x7E0, 0xBF, 0x37, false, 60, 8, 0, 0.03125, -1024.0, 4, "Knock Correct Learn Value" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xC0, 0x37 }, UdsDefinition{ 0x7E0, 0xC0, 0x37, false, 60, 10, 0, 0.03125, -1024.0, 4, "Knock Feedback Value" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xC1, 0x37 }, UdsDefinition{ 0x7E0, 0xC1, 0x37, false, 0, 12, 0, 0.006103515625, -200.0, 4, "Purge Density Learn Value" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xC2, 0x37 }, UdsDefinition{ 0x7E0, 0xC2, 0x37, false, 33, 14, 0, 0.006103515625, 0.0, 4, "Evap Purge Flow" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xC3, 0x37 }, UdsDefinition{ 0x7E0, 0xC3, 0x37, false, 53, 16, 0, 10.0, 0.0, 4, "IG OFF Elapsed Time" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xC4, 0x37 }, UdsDefinition{ 0x7E0, 0xC4, 0x37, false, 13, 18, 0, 1.0, 0.0, 4, "Dist Batt Cable Disconnect" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xC5, 0x37 }, UdsDefinition{ 0x7E0, 0xC5, 0x37, false, 0, 20, 7, 4, "EGR Close Lrn. Status", 0, "NG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xC5, 0x37 }, UdsDefinition{ 0x7E0, 0xC5, 0x37, false, 0, 20, 7, 4, "EGR Close Lrn. Status", 1, "OK" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xC6, 0x37 }, UdsDefinition{ 0x7E0, 0xC6, 0x37, false, 0, 20, 6, 4, "Diesel Throttle Learn Status", 0, "NG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xC6, 0x37 }, UdsDefinition{ 0x7E0, 0xC6, 0x37, false, 0, 20, 6, 4, "Diesel Throttle Learn Status", 1, "OK" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xC7, 0x37 }, UdsDefinition{ 0x7E0, 0xC7, 0x37, false, 0, 21, 7, 4, "Immobiliser Communication", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xC7, 0x37 }, UdsDefinition{ 0x7E0, 0xC7, 0x37, false, 0, 21, 7, 4, "Immobiliser Communication", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xC8, 0x37 }, UdsDefinition{ 0x7E0, 0xC8, 0x37, false, 0, 21, 6, 4, "Fuel Cut Condition", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xC8, 0x37 }, UdsDefinition{ 0x7E0, 0xC8, 0x37, false, 0, 21, 6, 4, "Fuel Cut Condition", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xC9, 0x37 }, UdsDefinition{ 0x7E0, 0xC9, 0x37, false, 0, 21, 4, 4, "Throttle Learning", 0, "NG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xC9, 0x37 }, UdsDefinition{ 0x7E0, 0xC9, 0x37, false, 0, 21, 4, 4, "Throttle Learning", 1, "OK" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xCA, 0x37 }, UdsDefinition{ 0x7E0, 0xCA, 0x37, false, 0, 21, 3, 4, "AI Test", 0, "READY" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xCA, 0x37 }, UdsDefinition{ 0x7E0, 0xCA, 0x37, false, 0, 21, 3, 4, "AI Test", 1, "NOT RDY" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xCB, 0x37 }, UdsDefinition{ 0x7E0, 0xCB, 0x37, false, 0, 21, 2, 4, "Closed Throttle Position SW", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xCB, 0x37 }, UdsDefinition{ 0x7E0, 0xCB, 0x37, false, 0, 21, 2, 4, "Closed Throttle Position SW", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xCC, 0x37 }, UdsDefinition{ 0x7E0, 0xCC, 0x37, false, 0, 21, 1, 4, "Idle Fuel Cut", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xCC, 0x37 }, UdsDefinition{ 0x7E0, 0xCC, 0x37, false, 0, 21, 1, 4, "Idle Fuel Cut", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xCD, 0x37 }, UdsDefinition{ 0x7E0, 0xCD, 0x37, false, 0, 21, 0, 4, "FC TAU", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xCD, 0x37 }, UdsDefinition{ 0x7E0, 0xCD, 0x37, false, 0, 21, 0, 4, "FC TAU", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xCE, 0x37 }, UdsDefinition{ 0x7E0, 0xCE, 0x37, false, 0, 22, 5, 4, "Auto Shift Up Status", 0, "OFF" });
// }
// void init_udsDefinitions_part10() {
//     udsMap.emplace(uds_key{ 0x7E0, 0xCE, 0x37 }, UdsDefinition{ 0x7E0, 0xCE, 0x37, false, 0, 22, 5, 4, "Auto Shift Up Status", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x384, 0x37 }, UdsDefinition{ 0x7E0, 0x384, 0x37, false, 0, 22, 4, 4, "Brake Override System", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x384, 0x37 }, UdsDefinition{ 0x7E0, 0x384, 0x37, false, 0, 22, 4, 4, "Brake Override System", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x216, 0x37 }, UdsDefinition{ 0x7E0, 0x216, 0x37, false, 0, 23, 6, 4, "Subfreezing Conditions", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x216, 0x37 }, UdsDefinition{ 0x7E0, 0x216, 0x37, false, 0, 23, 6, 4, "Subfreezing Conditions", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x217, 0x37 }, UdsDefinition{ 0x7E0, 0x217, 0x37, false, 0, 23, 4, 4, "Air Pump Freeze", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x217, 0x37 }, UdsDefinition{ 0x7E0, 0x217, 0x37, false, 0, 23, 4, 4, "Air Pump Freeze", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x218, 0x37 }, UdsDefinition{ 0x7E0, 0x218, 0x37, false, 0, 23, 3, 4, "Air Pump2 Freeze", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x218, 0x37 }, UdsDefinition{ 0x7E0, 0x218, 0x37, false, 0, 23, 3, 4, "Air Pump2 Freeze", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x219, 0x37 }, UdsDefinition{ 0x7E0, 0x219, 0x37, false, 0, 23, 2, 4, "Air Switching Valve Freeze", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x219, 0x37 }, UdsDefinition{ 0x7E0, 0x219, 0x37, false, 0, 23, 2, 4, "Air Switching Valve Freeze", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x21A, 0x37 }, UdsDefinition{ 0x7E0, 0x21A, 0x37, false, 0, 23, 1, 4, "Air Switching Valve2 Freeze", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x21A, 0x37 }, UdsDefinition{ 0x7E0, 0x21A, 0x37, false, 0, 23, 1, 4, "Air Switching Valve2 Freeze", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2D0, 0x37 }, UdsDefinition{ 0x7E0, 0x2D0, 0x37, false, 57, 24, 0, 1.0, -40.0, 4, "Engine Oil Temp for Eng Start" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2D1, 0x37 }, UdsDefinition{ 0x7E0, 0x2D1, 0x37, false, 34, 25, 0, 0.022, 0.0, 4, "Engine Oil Press for Eng Start" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2D2, 0x37 }, UdsDefinition{ 0x7E0, 0x2D2, 0x37, false, 0, 27, 0, 1.0, 0.0, 4, "PCV Volt Vibration for Oil Tank" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2D3, 0x37 }, UdsDefinition{ 0x7E0, 0x2D3, 0x37, false, 0, 28, 0, 1.0, 0.0, 4, "PCV Volt Vibration for Ventilation Case" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2D4, 0x37 }, UdsDefinition{ 0x7E0, 0x2D4, 0x37, false, 34, 29, 0, 0.01, -327.68, 4, "Balance Pipe Relative Pressure" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3D4, 0x37 }, UdsDefinition{ 0x7E0, 0x3D4, 0x37, false, 60, 31, 0, 0.03125, 0.0, 4, "Knock Sensor Lowest Learning Value" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4AB, 0x37 }, UdsDefinition{ 0x7E0, 0x4AB, 0x37, false, 0, 33, 0, 4, "Exhaust Exterior Valve Status (Valve 1)", 0, "Driver Not Judge" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4AB, 0x37 }, UdsDefinition{ 0x7E0, 0x4AB, 0x37, false, 0, 33, 0, 4, "Exhaust Exterior Valve Status (Valve 1)", 1, "Close(Incomplete)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4AB, 0x37 }, UdsDefinition{ 0x7E0, 0x4AB, 0x37, false, 0, 33, 0, 4, "Exhaust Exterior Valve Status (Valve 1)", 2, "Close(Complete)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4AB, 0x37 }, UdsDefinition{ 0x7E0, 0x4AB, 0x37, false, 0, 33, 0, 4, "Exhaust Exterior Valve Status (Valve 1)", 3, "Abnormal Level Lo" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4AB, 0x37 }, UdsDefinition{ 0x7E0, 0x4AB, 0x37, false, 0, 33, 0, 4, "Exhaust Exterior Valve Status (Valve 1)", 4, "Abnormal Level Hi" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4AB, 0x37 }, UdsDefinition{ 0x7E0, 0x4AB, 0x37, false, 0, 33, 0, 4, "Exhaust Exterior Valve Status (Valve 1)", 5, "Fully Open" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4AC, 0x37 }, UdsDefinition{ 0x7E0, 0x4AC, 0x37, false, 0, 34, 0, 4, "Exhaust Exterior Valve Status (Valve 2)", 0, "Driver Not Judge" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4AC, 0x37 }, UdsDefinition{ 0x7E0, 0x4AC, 0x37, false, 0, 34, 0, 4, "Exhaust Exterior Valve Status (Valve 2)", 1, "Close(Incomplete)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4AC, 0x37 }, UdsDefinition{ 0x7E0, 0x4AC, 0x37, false, 0, 34, 0, 4, "Exhaust Exterior Valve Status (Valve 2)", 2, "Close(Complete)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4AC, 0x37 }, UdsDefinition{ 0x7E0, 0x4AC, 0x37, false, 0, 34, 0, 4, "Exhaust Exterior Valve Status (Valve 2)", 3, "Abnormal Level Lo" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4AC, 0x37 }, UdsDefinition{ 0x7E0, 0x4AC, 0x37, false, 0, 34, 0, 4, "Exhaust Exterior Valve Status (Valve 2)", 4, "Abnormal Level Hi" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4AC, 0x37 }, UdsDefinition{ 0x7E0, 0x4AC, 0x37, false, 0, 34, 0, 4, "Exhaust Exterior Valve Status (Valve 2)", 5, "Fully Open" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2F2, 0x38 }, UdsDefinition{ 0x7E0, 0x2F2, 0x38, false, 33, 0, 0, 0.392156862745098, 0.0, 4, "Accel Position" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2F3, 0x38 }, UdsDefinition{ 0x7E0, 0x2F3, 0x38, false, 48, 1, 0, 7.62939453125e-05, 0.0, 4, "VN Close Learn Value" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x364, 0x38 }, UdsDefinition{ 0x7E0, 0x364, 0x38, false, 48, 3, 0, 7.62939453125e-05, 0.0, 4, "VN Close Learn Value #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2F4, 0x38 }, UdsDefinition{ 0x7E0, 0x2F4, 0x38, false, 33, 5, 0, 0.5, 0.0, 4, "VN Turbo Min Angle" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2F5, 0x38 }, UdsDefinition{ 0x7E0, 0x2F5, 0x38, false, 33, 6, 0, 0.5, 0.0, 4, "VN Turbo Max Angle" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2F6, 0x38 }, UdsDefinition{ 0x7E0, 0x2F6, 0x38, false, 0, 7, 0, 0.001, -32.768, 4, "Catalyst Differential Press" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x365, 0x38 }, UdsDefinition{ 0x7E0, 0x365, 0x38, false, 0, 9, 0, 0.001, -32.768, 4, "Catalyst Differential Press #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2F7, 0x38 }, UdsDefinition{ 0x7E0, 0x2F7, 0x38, false, 34, 11, 0, 0.01, -327.68, 4, "Diff. Press. Sensor Corr." });
//     udsMap.emplace(uds_key{ 0x7E0, 0x366, 0x38 }, UdsDefinition{ 0x7E0, 0x366, 0x38, false, 34, 13, 0, 0.01, -327.68, 4, "Diff Press Sensor Corr #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2F8, 0x38 }, UdsDefinition{ 0x7E0, 0x2F8, 0x38, false, 33, 15, 0, 2.0, 0.0, 4, "PM Accumulation Ratio" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x367, 0x38 }, UdsDefinition{ 0x7E0, 0x367, 0x38, false, 33, 16, 0, 2.0, 0.0, 4, "PM Accumulation Ratio #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2F9, 0x38 }, UdsDefinition{ 0x7E0, 0x2F9, 0x38, false, 33, 17, 0, 2.0, 0.0, 4, "Sulfur Accumulation Ratio" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x368, 0x38 }, UdsDefinition{ 0x7E0, 0x368, 0x38, false, 33, 18, 0, 2.0, 0.0, 4, "Sulfur Accumulation Ratio #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2FA, 0x38 }, UdsDefinition{ 0x7E0, 0x2FA, 0x38, false, 48, 19, 0, 0.001220703125, 0.0, 4, "AF Sensor Learning Value" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x369, 0x38 }, UdsDefinition{ 0x7E0, 0x369, 0x38, false, 48, 21, 0, 0.001220703125, 0.0, 4, "AF Sensor Learning Value #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2FB, 0x38 }, UdsDefinition{ 0x7E0, 0x2FB, 0x38, false, 0, 23, 0, 0.01, -327.68, 4, "Exhaust Fuel Addition FB" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x36A, 0x38 }, UdsDefinition{ 0x7E0, 0x36A, 0x38, false, 0, 25, 0, 0.01, -327.68, 4, "Exhaust Fuel Addition FB #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2FC, 0x38 }, UdsDefinition{ 0x7E0, 0x2FC, 0x38, false, 0, 27, 0, 4, "DPNR Status Reju (S)", 3, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2FC, 0x38 }, UdsDefinition{ 0x7E0, 0x2FC, 0x38, false, 0, 27, 0, 4, "DPNR Status Reju (S)", 2, "Operate" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2FC, 0x38 }, UdsDefinition{ 0x7E0, 0x2FC, 0x38, false, 0, 27, 0, 4, "DPNR Status Reju (S)", 1, "Ready" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2FC, 0x38 }, UdsDefinition{ 0x7E0, 0x2FC, 0x38, false, 0, 27, 0, 4, "DPNR Status Reju (S)", 0, "Standby" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2FD, 0x38 }, UdsDefinition{ 0x7E0, 0x2FD, 0x38, false, 0, 28, 0, 4, "DPNR/DPF Status Reju(PM)", 3, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2FD, 0x38 }, UdsDefinition{ 0x7E0, 0x2FD, 0x38, false, 0, 28, 0, 4, "DPNR/DPF Status Reju(PM)", 2, "Operate" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2FD, 0x38 }, UdsDefinition{ 0x7E0, 0x2FD, 0x38, false, 0, 28, 0, 4, "DPNR/DPF Status Reju(PM)", 1, "Ready" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2FD, 0x38 }, UdsDefinition{ 0x7E0, 0x2FD, 0x38, false, 0, 28, 0, 4, "DPNR/DPF Status Reju(PM)", 0, "Standby" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2FE, 0x38 }, UdsDefinition{ 0x7E0, 0x2FE, 0x38, false, 33, 29, 0, 0.5, 0.0, 4, "Alternate Duty Ratio" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x559, 0x38 }, UdsDefinition{ 0x7E0, 0x559, 0x38, false, 0, 30, 0, 1.0, 0.0, 4, "Soot Blow Control Canceled Max Continuous Count" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x55A, 0x38 }, UdsDefinition{ 0x7E0, 0x55A, 0x38, false, 0, 31, 0, 1.0, 0.0, 4, "Soot Blow Control Canceled Accumulation Count" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xCF, 0x39 }, UdsDefinition{ 0x7E0, 0xCF, 0x39, false, 0, 0, 7, 4, "Swirl Control Valve VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xCF, 0x39 }, UdsDefinition{ 0x7E0, 0xCF, 0x39, false, 0, 0, 7, 4, "Swirl Control Valve VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xD0, 0x39 }, UdsDefinition{ 0x7E0, 0xD0, 0x39, false, 0, 0, 6, 4, "Secondary Air Control VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xD0, 0x39 }, UdsDefinition{ 0x7E0, 0xD0, 0x39, false, 0, 0, 6, 4, "Secondary Air Control VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xD1, 0x39 }, UdsDefinition{ 0x7E0, 0xD1, 0x39, false, 0, 0, 5, 4, "Fuel Pump Speed Control", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xD1, 0x39 }, UdsDefinition{ 0x7E0, 0xD1, 0x39, false, 0, 0, 5, 4, "Fuel Pump Speed Control", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xD2, 0x39 }, UdsDefinition{ 0x7E0, 0xD2, 0x39, false, 0, 0, 4, 4, "ACIS VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xD2, 0x39 }, UdsDefinition{ 0x7E0, 0xD2, 0x39, false, 0, 0, 4, 4, "ACIS VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xD3, 0x39 }, UdsDefinition{ 0x7E0, 0xD3, 0x39, false, 0, 0, 3, 4, "EGR VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xD3, 0x39 }, UdsDefinition{ 0x7E0, 0xD3, 0x39, false, 0, 0, 3, 4, "EGR VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xD4, 0x39 }, UdsDefinition{ 0x7E0, 0xD4, 0x39, false, 0, 0, 2, 4, "Fuel Pressure Up VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xD4, 0x39 }, UdsDefinition{ 0x7E0, 0xD4, 0x39, false, 0, 0, 2, 4, "Fuel Pressure Up VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xD5, 0x39 }, UdsDefinition{ 0x7E0, 0xD5, 0x39, false, 0, 0, 1, 4, "Variable Intake Control VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xD5, 0x39 }, UdsDefinition{ 0x7E0, 0xD5, 0x39, false, 0, 0, 1, 4, "Variable Intake Control VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xD6, 0x39 }, UdsDefinition{ 0x7E0, 0xD6, 0x39, false, 0, 0, 0, 4, "ACT VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xD6, 0x39 }, UdsDefinition{ 0x7E0, 0xD6, 0x39, false, 0, 0, 0, 4, "ACT VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xD7, 0x39 }, UdsDefinition{ 0x7E0, 0xD7, 0x39, false, 0, 1, 7, 4, "Intake Air Control VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xD7, 0x39 }, UdsDefinition{ 0x7E0, 0xD7, 0x39, false, 0, 1, 7, 4, "Intake Air Control VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xD8, 0x39 }, UdsDefinition{ 0x7E0, 0xD8, 0x39, false, 0, 1, 6, 4, "VVT Control Status #2", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xD8, 0x39 }, UdsDefinition{ 0x7E0, 0xD8, 0x39, false, 0, 1, 6, 4, "VVT Control Status #2", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xD9, 0x39 }, UdsDefinition{ 0x7E0, 0xD9, 0x39, false, 0, 1, 4, 4, "EVAP Purge VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xD9, 0x39 }, UdsDefinition{ 0x7E0, 0xD9, 0x39, false, 0, 1, 4, 4, "EVAP Purge VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xDA, 0x39 }, UdsDefinition{ 0x7E0, 0xDA, 0x39, false, 0, 1, 3, 4, "A/C Magnetic Clutch Relay", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xDA, 0x39 }, UdsDefinition{ 0x7E0, 0xDA, 0x39, false, 0, 1, 3, 4, "A/C Magnetic Clutch Relay", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xDB, 0x39 }, UdsDefinition{ 0x7E0, 0xDB, 0x39, false, 0, 1, 2, 4, "Purge Cut VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xDB, 0x39 }, UdsDefinition{ 0x7E0, 0xDB, 0x39, false, 0, 1, 2, 4, "Purge Cut VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xDC, 0x39 }, UdsDefinition{ 0x7E0, 0xDC, 0x39, false, 0, 1, 1, 4, "Fuel Pump/Speed Status", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xDC, 0x39 }, UdsDefinition{ 0x7E0, 0xDC, 0x39, false, 0, 1, 1, 4, "Fuel Pump/Speed Status", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x28A, 0x39 }, UdsDefinition{ 0x7E0, 0x28A, 0x39, false, 0, 1, 0, 4, "Idle Up VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x28A, 0x39 }, UdsDefinition{ 0x7E0, 0x28A, 0x39, false, 0, 1, 0, 4, "Idle Up VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xDD, 0x39 }, UdsDefinition{ 0x7E0, 0xDD, 0x39, false, 0, 2, 5, 4, "Intake Air Control VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xDD, 0x39 }, UdsDefinition{ 0x7E0, 0xDD, 0x39, false, 0, 2, 5, 4, "Intake Air Control VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xDE, 0x39 }, UdsDefinition{ 0x7E0, 0xDE, 0x39, false, 0, 2, 1, 4, "VVT Control Status #1", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xDE, 0x39 }, UdsDefinition{ 0x7E0, 0xDE, 0x39, false, 0, 2, 1, 4, "VVT Control Status #1", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x28B, 0x39 }, UdsDefinition{ 0x7E0, 0x28B, 0x39, false, 0, 2, 7, 4, "Exhaust Bypass Control VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x28B, 0x39 }, UdsDefinition{ 0x7E0, 0x28B, 0x39, false, 0, 2, 7, 4, "Exhaust Bypass Control VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x28C, 0x39 }, UdsDefinition{ 0x7E0, 0x28C, 0x39, false, 0, 2, 6, 4, "Exhaust Switching Control VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x28C, 0x39 }, UdsDefinition{ 0x7E0, 0x28C, 0x39, false, 0, 2, 6, 4, "Exhaust Switching Control VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x28F, 0x39 }, UdsDefinition{ 0x7E0, 0x28F, 0x39, false, 0, 2, 2, 4, "Boost Pressure Control VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x28F, 0x39 }, UdsDefinition{ 0x7E0, 0x28F, 0x39, false, 0, 2, 2, 4, "Boost Pressure Control VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xDF, 0x39 }, UdsDefinition{ 0x7E0, 0xDF, 0x39, false, 0, 3, 4, 4, "Regulator Shut Valve", 0, "OFF" });
// }
// void init_udsDefinitions_part11() {
//     udsMap.emplace(uds_key{ 0x7E0, 0xDF, 0x39 }, UdsDefinition{ 0x7E0, 0xDF, 0x39, false, 0, 3, 4, 4, "Regulator Shut Valve", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xE0, 0x39 }, UdsDefinition{ 0x7E0, 0xE0, 0x39, false, 0, 3, 3, 4, "Fuel Shutoff Valve for Delivery Pipe", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xE0, 0x39 }, UdsDefinition{ 0x7E0, 0xE0, 0x39, false, 0, 3, 3, 4, "Fuel Shutoff Valve for Delivery Pipe", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xE1, 0x39 }, UdsDefinition{ 0x7E0, 0xE1, 0x39, false, 0, 3, 2, 4, "ACM Inhibit", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xE1, 0x39 }, UdsDefinition{ 0x7E0, 0xE1, 0x39, false, 0, 3, 2, 4, "ACM Inhibit", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xE2, 0x39 }, UdsDefinition{ 0x7E0, 0xE2, 0x39, false, 0, 3, 1, 4, "TC and TE1", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xE2, 0x39 }, UdsDefinition{ 0x7E0, 0xE2, 0x39, false, 0, 3, 1, 4, "TC and TE1", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xE3, 0x39 }, UdsDefinition{ 0x7E0, 0xE3, 0x39, false, 0, 3, 0, 4, "Idle Fuel Cut Prohibit", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xE3, 0x39 }, UdsDefinition{ 0x7E0, 0xE3, 0x39, false, 0, 3, 0, 4, "Idle Fuel Cut Prohibit", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x291, 0x39 }, UdsDefinition{ 0x7E0, 0x291, 0x39, false, 0, 3, 7, 4, "HC Adsorber Catalyst Switching VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x291, 0x39 }, UdsDefinition{ 0x7E0, 0x291, 0x39, false, 0, 3, 7, 4, "HC Adsorber Catalyst Switching VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x292, 0x39 }, UdsDefinition{ 0x7E0, 0x292, 0x39, false, 0, 3, 6, 4, "Fuel Pressure Status Stratification", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x292, 0x39 }, UdsDefinition{ 0x7E0, 0x292, 0x39, false, 0, 3, 6, 4, "Fuel Pressure Status Stratification", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x293, 0x39 }, UdsDefinition{ 0x7E0, 0x293, 0x39, false, 0, 3, 5, 4, "Fuel Pressure Status Stoichiometric", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x293, 0x39 }, UdsDefinition{ 0x7E0, 0x293, 0x39, false, 0, 3, 5, 4, "Fuel Pressure Status Stoichiometric", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xE4, 0x39 }, UdsDefinition{ 0x7E0, 0xE4, 0x39, false, 0, 4, 7, 4, "Vacuum Pump", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xE4, 0x39 }, UdsDefinition{ 0x7E0, 0xE4, 0x39, false, 0, 4, 7, 4, "Vacuum Pump", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xE5, 0x39 }, UdsDefinition{ 0x7E0, 0xE5, 0x39, false, 0, 4, 6, 4, "EVAP System Vent Valve", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xE5, 0x39 }, UdsDefinition{ 0x7E0, 0xE5, 0x39, false, 0, 4, 6, 4, "EVAP System Vent Valve", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xE6, 0x39 }, UdsDefinition{ 0x7E0, 0xE6, 0x39, false, 0, 4, 5, 4, "Electric Fan Motor", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xE6, 0x39 }, UdsDefinition{ 0x7E0, 0xE6, 0x39, false, 0, 4, 5, 4, "Electric Fan Motor", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xE7, 0x39 }, UdsDefinition{ 0x7E0, 0xE7, 0x39, false, 0, 4, 4, 4, "AICV VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xE7, 0x39 }, UdsDefinition{ 0x7E0, 0xE7, 0x39, false, 0, 4, 4, 4, "AICV VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xE8, 0x39 }, UdsDefinition{ 0x7E0, 0xE8, 0x39, false, 0, 4, 3, 4, "VVTL System #2", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xE8, 0x39 }, UdsDefinition{ 0x7E0, 0xE8, 0x39, false, 0, 4, 3, 4, "VVTL System #2", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xE9, 0x39 }, UdsDefinition{ 0x7E0, 0xE9, 0x39, false, 0, 4, 2, 4, "VVTL System #1", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xE9, 0x39 }, UdsDefinition{ 0x7E0, 0xE9, 0x39, false, 0, 4, 2, 4, "VVTL System #1", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xEA, 0x39 }, UdsDefinition{ 0x7E0, 0xEA, 0x39, false, 0, 4, 1, 4, "Tank Bypass VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xEA, 0x39 }, UdsDefinition{ 0x7E0, 0xEA, 0x39, false, 0, 4, 1, 4, "Tank Bypass VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xEB, 0x39 }, UdsDefinition{ 0x7E0, 0xEB, 0x39, false, 0, 4, 0, 4, "Canister Control VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xEB, 0x39 }, UdsDefinition{ 0x7E0, 0xEB, 0x39, false, 0, 4, 0, 4, "Canister Control VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xEC, 0x39 }, UdsDefinition{ 0x7E0, 0xEC, 0x39, false, 0, 5, 3, 4, "Fuel Route Switching Valve", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xEC, 0x39 }, UdsDefinition{ 0x7E0, 0xEC, 0x39, false, 0, 5, 3, 4, "Fuel Route Switching Valve", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xED, 0x39 }, UdsDefinition{ 0x7E0, 0xED, 0x39, false, 0, 5, 2, 4, "Intank Fuel Pump", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xED, 0x39 }, UdsDefinition{ 0x7E0, 0xED, 0x39, false, 0, 5, 2, 4, "Intank Fuel Pump", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xEE, 0x39 }, UdsDefinition{ 0x7E0, 0xEE, 0x39, false, 0, 5, 1, 4, "ACC Relay", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xEE, 0x39 }, UdsDefinition{ 0x7E0, 0xEE, 0x39, false, 0, 5, 1, 4, "ACC Relay", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xEF, 0x39 }, UdsDefinition{ 0x7E0, 0xEF, 0x39, false, 0, 5, 0, 4, "Starter Relay", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xEF, 0x39 }, UdsDefinition{ 0x7E0, 0xEF, 0x39, false, 0, 5, 0, 4, "Starter Relay", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1DF, 0x39 }, UdsDefinition{ 0x7E0, 0x1DF, 0x39, false, 0, 5, 4, 4, "Fuel Press Switching Valve", 0, "Low" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1DF, 0x39 }, UdsDefinition{ 0x7E0, 0x1DF, 0x39, false, 0, 5, 4, 4, "Fuel Press Switching Valve", 1, "High" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x21B, 0x39 }, UdsDefinition{ 0x7E0, 0x21B, 0x39, false, 0, 5, 5, 4, "Air Pump Heater", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x21B, 0x39 }, UdsDefinition{ 0x7E0, 0x21B, 0x39, false, 0, 5, 5, 4, "Air Pump Heater", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x388, 0x39 }, UdsDefinition{ 0x7E0, 0x388, 0x39, false, 0, 5, 7, 4, "Fuel Route Switching Valve", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x388, 0x39 }, UdsDefinition{ 0x7E0, 0x388, 0x39, false, 0, 5, 7, 4, "Fuel Route Switching Valve", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x389, 0x39 }, UdsDefinition{ 0x7E0, 0x389, 0x39, false, 0, 5, 6, 4, "Intank Fuel Pump", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x389, 0x39 }, UdsDefinition{ 0x7E0, 0x389, 0x39, false, 0, 5, 6, 4, "Intank Fuel Pump", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1CC, 0x39 }, UdsDefinition{ 0x7E0, 0x1CC, 0x39, false, 0, 6, 6, 4, "Brake Ejector VSV", 0, "CLOSE" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1CC, 0x39 }, UdsDefinition{ 0x7E0, 0x1CC, 0x39, false, 0, 6, 6, 4, "Brake Ejector VSV", 1, "OPEN" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x21C, 0x39 }, UdsDefinition{ 0x7E0, 0x21C, 0x39, false, 0, 6, 0, 4, "Sub Fuel Tank VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x21C, 0x39 }, UdsDefinition{ 0x7E0, 0x21C, 0x39, false, 0, 6, 0, 4, "Sub Fuel Tank VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x295, 0x39 }, UdsDefinition{ 0x7E0, 0x295, 0x39, false, 0, 7, 5, 4, "Exhaust Pressure Control VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x295, 0x39 }, UdsDefinition{ 0x7E0, 0x295, 0x39, false, 0, 7, 5, 4, "Exhaust Pressure Control VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x296, 0x39 }, UdsDefinition{ 0x7E0, 0x296, 0x39, false, 0, 7, 0, 4, "EGR Cut VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x296, 0x39 }, UdsDefinition{ 0x7E0, 0x296, 0x39, false, 0, 7, 0, 4, "EGR Cut VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xF0, 0x39 }, UdsDefinition{ 0x7E0, 0xF0, 0x39, false, 0, 8, 4, 4, "Fuel Filler Opener", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xF0, 0x39 }, UdsDefinition{ 0x7E0, 0xF0, 0x39, false, 0, 8, 4, 4, "Fuel Filler Opener", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xF1, 0x39 }, UdsDefinition{ 0x7E0, 0xF1, 0x39, false, 0, 8, 3, 4, "Fuel Vapor-Containment Valve", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xF1, 0x39 }, UdsDefinition{ 0x7E0, 0xF1, 0x39, false, 0, 8, 3, 4, "Fuel Vapor-Containment Valve", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xF2, 0x39 }, UdsDefinition{ 0x7E0, 0xF2, 0x39, false, 0, 9, 6, 4, "HC Adsorber Catalyst VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xF2, 0x39 }, UdsDefinition{ 0x7E0, 0xF2, 0x39, false, 0, 9, 6, 4, "HC Adsorber Catalyst VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x387, 0x39 }, UdsDefinition{ 0x7E0, 0x387, 0x39, false, 0, 9, 2, 4, "Pressure Discharge Valve", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x387, 0x39 }, UdsDefinition{ 0x7E0, 0x387, 0x39, false, 0, 9, 2, 4, "Pressure Discharge Valve", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2D5, 0x39 }, UdsDefinition{ 0x7E0, 0x2D5, 0x39, false, 0, 10, 1, 4, "Exhaust Switching Valve", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2D5, 0x39 }, UdsDefinition{ 0x7E0, 0x2D5, 0x39, false, 0, 10, 1, 4, "Exhaust Switching Valve", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x385, 0x39 }, UdsDefinition{ 0x7E0, 0x385, 0x39, false, 0, 10, 2, 4, "Fuel Return Pipe Valve", 0, "CLOSE" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x385, 0x39 }, UdsDefinition{ 0x7E0, 0x385, 0x39, false, 0, 10, 2, 4, "Fuel Return Pipe Valve", 1, "OPEN" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B7, 0x39 }, UdsDefinition{ 0x7E0, 0x3B7, 0x39, false, 0, 10, 0, 4, "Eng Oil Press Switch Valve", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B7, 0x39 }, UdsDefinition{ 0x7E0, 0x3B7, 0x39, false, 0, 10, 0, 4, "Eng Oil Press Switch Valve", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4AD, 0x39 }, UdsDefinition{ 0x7E0, 0x4AD, 0x39, false, 0, 10, 4, 4, "Coolant Water Route Switching Valve", 0, "Open" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4AD, 0x39 }, UdsDefinition{ 0x7E0, 0x4AD, 0x39, false, 0, 10, 4, 4, "Coolant Water Route Switching Valve", 1, "Close" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x440, 0x3A }, UdsDefinition{ 0x7E0, 0x440, 0x3A, false, 33, 0, 0, 0.5, 0.0, 4, "ISC Duty" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xF4, 0x3A }, UdsDefinition{ 0x7E0, 0xF4, 0x3A, false, 33, 2, 0, 1.0, -128.0, 4, "Swirl C.V. Duty Ratio" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xF5, 0x3A }, UdsDefinition{ 0x7E0, 0xF5, 0x3A, false, 33, 3, 0, 1.0, -128.0, 4, "Tumble C.V Duty Ratio" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xF6, 0x3A }, UdsDefinition{ 0x7E0, 0xF6, 0x3A, false, 33, 4, 0, 1.0, 0.0, 4, "ACM" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xF7, 0x3A }, UdsDefinition{ 0x7E0, 0xF7, 0x3A, false, 33, 5, 0, 0.006103515625, -200.0, 4, "ACIS Motor Duty" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xF8, 0x3A }, UdsDefinition{ 0x7E0, 0xF8, 0x3A, false, 33, 7, 0, 0.006103515625, 0.0, 4, "Resonator Mot Duty" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xF9, 0x3A }, UdsDefinition{ 0x7E0, 0xF9, 0x3A, false, 60, 9, 0, 0.009765625, 0.0, 4, "VALVEMATIC Target Angle" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1E0, 0x3A }, UdsDefinition{ 0x7E0, 0x1E0, 0x3A, false, 39, 11, 0, 25.0, 0.0, 4, "Elec Water Pump Target Spd" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1E1, 0x3A }, UdsDefinition{ 0x7E0, 0x1E1, 0x3A, false, 39, 12, 0, 25.0, 0.0, 4, "Elec Water Pump Spd" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xFA, 0x3A }, UdsDefinition{ 0x7E0, 0xFA, 0x3A, false, 33, 13, 0, 0.006103515625, 0.0, 4, "Purge Cut VSV Duty" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xFB, 0x3A }, UdsDefinition{ 0x7E0, 0xFB, 0x3A, false, 33, 15, 0, 0.006103515625, 0.0, 4, "EGR VSV" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xFC, 0x3A }, UdsDefinition{ 0x7E0, 0xFC, 0x3A, false, 33, 17, 0, 0.006103515625, 0.0, 4, "A/F Heater Duty B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xFD, 0x3A }, UdsDefinition{ 0x7E0, 0xFD, 0x3A, false, 33, 19, 0, 0.006103515625, 0.0, 4, "A/F Heater Duty B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1D9, 0x3A }, UdsDefinition{ 0x7E0, 0x1D9, 0x3A, false, 9, 21, 0, 7.62939453125e-05, 0.0, 4, "O2 Heater Curr Val B1S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1DA, 0x3A }, UdsDefinition{ 0x7E0, 0x1DA, 0x3A, false, 9, 23, 0, 7.62939453125e-05, 0.0, 4, "O2 Heater Curr Val B2S1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xFE, 0x3A }, UdsDefinition{ 0x7E0, 0xFE, 0x3A, false, 9, 25, 0, 7.62939453125e-05, 0.0, 4, "O2 Heater Curr Val B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0xFF, 0x3A }, UdsDefinition{ 0x7E0, 0xFF, 0x3A, false, 9, 27, 0, 7.62939453125e-05, 0.0, 4, "O2 Heater Curr Val B2S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x100, 0x3A }, UdsDefinition{ 0x7E0, 0x100, 0x3A, false, 0, 29, 7, 4, "SCV Status (D4)", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x100, 0x3A }, UdsDefinition{ 0x7E0, 0x100, 0x3A, false, 0, 29, 7, 4, "SCV Status (D4)", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x101, 0x3A }, UdsDefinition{ 0x7E0, 0x101, 0x3A, false, 0, 29, 6, 4, "TCV Status", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x101, 0x3A }, UdsDefinition{ 0x7E0, 0x101, 0x3A, false, 0, 29, 6, 4, "TCV Status", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x102, 0x3A }, UdsDefinition{ 0x7E0, 0x102, 0x3A, false, 0, 29, 3, 4, "O2 Heater B1S2", 0, "Not Act" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x102, 0x3A }, UdsDefinition{ 0x7E0, 0x102, 0x3A, false, 0, 29, 3, 4, "O2 Heater B1S2", 1, "Active" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x103, 0x3A }, UdsDefinition{ 0x7E0, 0x103, 0x3A, false, 0, 29, 2, 4, "O2 Heater B2S2", 0, "Not Act" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x103, 0x3A }, UdsDefinition{ 0x7E0, 0x103, 0x3A, false, 0, 29, 2, 4, "O2 Heater B2S2", 1, "Active" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x20A, 0x3A }, UdsDefinition{ 0x7E0, 0x20A, 0x3A, false, 0, 29, 5, 4, "O2 Heater B1S1", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x20A, 0x3A }, UdsDefinition{ 0x7E0, 0x20A, 0x3A, false, 0, 29, 5, 4, "O2 Heater B1S1", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x20B, 0x3A }, UdsDefinition{ 0x7E0, 0x20B, 0x3A, false, 0, 29, 4, 4, "O2 Heater B2S1", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x20B, 0x3A }, UdsDefinition{ 0x7E0, 0x20B, 0x3A, false, 0, 29, 4, 4, "O2 Heater B2S1", 1, "ON" });
// }
// void init_udsDefinitions_part12() {
//     udsMap.emplace(uds_key{ 0x7E0, 0x2D6, 0x3A }, UdsDefinition{ 0x7E0, 0x2D6, 0x3A, false, 33, 30, 0, 0.5, 0.0, 4, "Purge Dilution Valve Duty(Bank 1)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2D7, 0x3A }, UdsDefinition{ 0x7E0, 0x2D7, 0x3A, false, 33, 31, 0, 0.5, 0.0, 4, "Purge Dilution Valve Duty(Bank 2)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2D8, 0x3A }, UdsDefinition{ 0x7E0, 0x2D8, 0x3A, false, 33, 32, 0, 0.006103515625, 0.0, 4, "Fuel Pump Duty" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2FF, 0x3A }, UdsDefinition{ 0x7E0, 0x2FF, 0x3A, false, 33, 34, 0, 0.5, 0.0, 4, "VN Motor Duty" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x36B, 0x3A }, UdsDefinition{ 0x7E0, 0x36B, 0x3A, false, 33, 35, 0, 0.5, 0.0, 4, "VN Motor Duty #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x36C, 0x3A }, UdsDefinition{ 0x7E0, 0x36C, 0x3A, false, 0, 36, 7, 4, "Viscous Heater Stop Request", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x36C, 0x3A }, UdsDefinition{ 0x7E0, 0x36C, 0x3A, false, 0, 36, 7, 4, "Viscous Heater Stop Request", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x36D, 0x3A }, UdsDefinition{ 0x7E0, 0x36D, 0x3A, false, 0, 36, 6, 4, "Idle Signal Output Value", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x36D, 0x3A }, UdsDefinition{ 0x7E0, 0x36D, 0x3A, false, 0, 36, 6, 4, "Idle Signal Output Value", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x36E, 0x3A }, UdsDefinition{ 0x7E0, 0x36E, 0x3A, false, 0, 36, 5, 4, "Idle Signal Output Value #2", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x36E, 0x3A }, UdsDefinition{ 0x7E0, 0x36E, 0x3A, false, 0, 36, 5, 4, "Idle Signal Output Value #2", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x36F, 0x3A }, UdsDefinition{ 0x7E0, 0x36F, 0x3A, false, 0, 36, 4, 4, "Glow Relay Request", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x36F, 0x3A }, UdsDefinition{ 0x7E0, 0x36F, 0x3A, false, 0, 36, 4, 4, "Glow Relay Request", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x370, 0x3A }, UdsDefinition{ 0x7E0, 0x370, 0x3A, false, 0, 36, 3, 4, "Glow Relay Request #2", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x370, 0x3A }, UdsDefinition{ 0x7E0, 0x370, 0x3A, false, 0, 36, 3, 4, "Glow Relay Request #2", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x371, 0x3A }, UdsDefinition{ 0x7E0, 0x371, 0x3A, false, 0, 36, 2, 4, "Injection EDU Relay Request", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x371, 0x3A }, UdsDefinition{ 0x7E0, 0x371, 0x3A, false, 0, 36, 2, 4, "Injection EDU Relay Request", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x372, 0x3A }, UdsDefinition{ 0x7E0, 0x372, 0x3A, false, 0, 36, 1, 4, "Injection EDU Relay Request #2", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x372, 0x3A }, UdsDefinition{ 0x7E0, 0x372, 0x3A, false, 0, 36, 1, 4, "Injection EDU Relay Request #2", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x373, 0x3A }, UdsDefinition{ 0x7E0, 0x373, 0x3A, false, 0, 37, 7, 4, "Exhaust Fuel Addition Injector Status", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x373, 0x3A }, UdsDefinition{ 0x7E0, 0x373, 0x3A, false, 0, 37, 7, 4, "Exhaust Fuel Addition Injector Status", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x374, 0x3A }, UdsDefinition{ 0x7E0, 0x374, 0x3A, false, 0, 37, 6, 4, "Exhaust Fuel Addition Injector Status #2", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x374, 0x3A }, UdsDefinition{ 0x7E0, 0x374, 0x3A, false, 0, 37, 6, 4, "Exhaust Fuel Addition Injector Status #2", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x375, 0x3A }, UdsDefinition{ 0x7E0, 0x375, 0x3A, false, 0, 37, 5, 4, "Electric Cooling Fan High", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x375, 0x3A }, UdsDefinition{ 0x7E0, 0x375, 0x3A, false, 0, 37, 5, 4, "Electric Cooling Fan High", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x376, 0x3A }, UdsDefinition{ 0x7E0, 0x376, 0x3A, false, 0, 37, 4, 4, "Electric Cooling Fan Low", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x376, 0x3A }, UdsDefinition{ 0x7E0, 0x376, 0x3A, false, 0, 37, 4, 4, "Electric Cooling Fan Low", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x301, 0x3A }, UdsDefinition{ 0x7E0, 0x301, 0x3A, false, 33, 38, 0, 0.5, 0.0, 4, "Glow Control Unit Duty" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x377, 0x3A }, UdsDefinition{ 0x7E0, 0x377, 0x3A, false, 33, 39, 0, 0.5, 0.0, 4, "Electric Cooling Fan Request Duty" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x378, 0x3A }, UdsDefinition{ 0x7E0, 0x378, 0x3A, false, 33, 40, 0, 0.5, 0.0, 4, "Electric Cooling Fan Request Duty #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x480, 0x3A }, UdsDefinition{ 0x7E0, 0x480, 0x3A, false, 9, 41, 0, 0.001, 0.0, 4, "A/F Heater Current Value B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x481, 0x3A }, UdsDefinition{ 0x7E0, 0x481, 0x3A, false, 33, 43, 0, 0.006103515625, 0.0, 4, "A/F Heater Duty B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x488, 0x3A }, UdsDefinition{ 0x7E0, 0x488, 0x3A, false, 33, 45, 0, 0.5, 0.0, 4, "Delivery Heater Duty Ratio" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4AE, 0x3A }, UdsDefinition{ 0x7E0, 0x4AE, 0x3A, false, 33, 46, 0, 0.5, 0.0, 4, "Exhaust Exterior Valve Duty Ratio (Valve 1)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4AF, 0x3A }, UdsDefinition{ 0x7E0, 0x4AF, 0x3A, false, 33, 47, 0, 0.5, 0.0, 4, "Exhaust Exterior Valve Duty Ratio (Valve 2)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4DC, 0x3A }, UdsDefinition{ 0x7E0, 0x4DC, 0x3A, false, 33, 48, 0, 0.006103515625, 0.0, 4, "Intercooler Water Pump Duty Ratio" });
//     udsMap.emplace(uds_key{ 0xC7, 0x7, 0x3B }, UdsDefinition{ 0xC7, 0x7, 0x3B, false, 0, 0, 2, 4, "DWIMIHI/DWIMIHI2 State", 0, "Low(0)" });
//     udsMap.emplace(uds_key{ 0xC7, 0x7, 0x3B }, UdsDefinition{ 0xC7, 0x7, 0x3B, false, 0, 0, 2, 4, "DWIMIHI/DWIMIHI2 State", 1, "High(1)" });
//     udsMap.emplace(uds_key{ 0xC7, 0x8, 0x3B }, UdsDefinition{ 0xC7, 0x8, 0x3B, false, 0, 0, 1, 4, "Autonomous Blocking State", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0xC7, 0x8, 0x3B }, UdsDefinition{ 0xC7, 0x8, 0x3B, false, 0, 0, 1, 4, "Autonomous Blocking State", 1, "ON" });
//     udsMap.emplace(uds_key{ 0xC7, 0x9, 0x3B }, UdsDefinition{ 0xC7, 0x9, 0x3B, false, 0, 0, 0, 4, "Remote Blocking State", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0xC7, 0x9, 0x3B }, UdsDefinition{ 0xC7, 0x9, 0x3B, false, 0, 0, 0, 4, "Remote Blocking State", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x104, 0x3C }, UdsDefinition{ 0x7E0, 0x104, 0x3C, false, 24, 0, 0, 3.125e-05, 0.0, 4, "Injection Volum (Cylinder1)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x105, 0x3C }, UdsDefinition{ 0x7E0, 0x105, 0x3C, false, 31, 2, 0, 1.0, 0.0, 4, "Injection Time (D4)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x106, 0x3C }, UdsDefinition{ 0x7E0, 0x106, 0x3C, false, 31, 4, 0, 1.0, 0.0, 4, "Injector (Port)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x107, 0x3C }, UdsDefinition{ 0x7E0, 0x107, 0x3C, false, 0, 6, 0, 0.00390625, -0.5, 4, "Total FT #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B2, 0x3C }, UdsDefinition{ 0x7E0, 0x3B2, 0x3C, false, 0, 6, 0, 0.00390625, -0.5, 4, "Total FT #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x108, 0x3C }, UdsDefinition{ 0x7E0, 0x108, 0x3C, false, 0, 7, 0, 0.00390625, -0.5, 4, "Total FT #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B3, 0x3C }, UdsDefinition{ 0x7E0, 0x3B3, 0x3C, false, 0, 7, 0, 0.00390625, -0.5, 4, "Total FT #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x109, 0x3C }, UdsDefinition{ 0x7E0, 0x109, 0x3C, false, 60, 8, 0, 0.1, -3276.8, 4, "Injection Timing (D4)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x10A, 0x3C }, UdsDefinition{ 0x7E0, 0x10A, 0x3C, false, 33, 10, 0, 0.5, 0.0, 4, "Fuel Pump Duty (D4)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1DB, 0x3C }, UdsDefinition{ 0x7E0, 0x1DB, 0x3C, false, 33, 11, 0, 0.5, 0.0, 4, "Fuel Pump2 Duty (D4)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x10B, 0x3C }, UdsDefinition{ 0x7E0, 0x10B, 0x3C, false, 24, 12, 0, 3.125e-05, 0.0, 4, "HP FP Discharge Rate" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x10C, 0x3C }, UdsDefinition{ 0x7E0, 0x10C, 0x3C, false, 24, 14, 0, 3.125e-05, 0.0, 4, "HP FP Discharge Rate 2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x10D, 0x3C }, UdsDefinition{ 0x7E0, 0x10D, 0x3C, false, 36, 16, 0, 0.001, 0.0, 4, "Fuel Pressure Target Value" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x10E, 0x3C }, UdsDefinition{ 0x7E0, 0x10E, 0x3C, false, 0, 18, 0, 4, "Combustion Status (D4)", 0, "FC" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x10E, 0x3C }, UdsDefinition{ 0x7E0, 0x10E, 0x3C, false, 0, 18, 0, 4, "Combustion Status (D4)", 1, "Stratify" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x10E, 0x3C }, UdsDefinition{ 0x7E0, 0x10E, 0x3C, false, 0, 18, 0, 4, "Combustion Status (D4)", 2, "LeanBurn" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x10E, 0x3C }, UdsDefinition{ 0x7E0, 0x10E, 0x3C, false, 0, 18, 0, 4, "Combustion Status (D4)", 3, "Stoich1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x10E, 0x3C }, UdsDefinition{ 0x7E0, 0x10E, 0x3C, false, 0, 18, 0, 4, "Combustion Status (D4)", 4, "Stoich2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x10F, 0x3C }, UdsDefinition{ 0x7E0, 0x10F, 0x3C, false, 0, 19, 0, 4, "Injection Way", 0, "Unset" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x10F, 0x3C }, UdsDefinition{ 0x7E0, 0x10F, 0x3C, false, 0, 19, 0, 4, "Injection Way", 1, "Port" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x10F, 0x3C }, UdsDefinition{ 0x7E0, 0x10F, 0x3C, false, 0, 19, 0, 4, "Injection Way", 2, "Direct" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x10F, 0x3C }, UdsDefinition{ 0x7E0, 0x10F, 0x3C, false, 0, 19, 0, 4, "Injection Way", 3, "Either" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x110, 0x3C }, UdsDefinition{ 0x7E0, 0x110, 0x3C, false, 0, 20, 7, 4, "Injection Switching Status", 0, "NG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x110, 0x3C }, UdsDefinition{ 0x7E0, 0x110, 0x3C, false, 0, 20, 7, 4, "Injection Switching Status", 1, "OK" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1E2, 0x3C }, UdsDefinition{ 0x7E0, 0x1E2, 0x3C, false, 0, 21, 7, 4, "Alcohol Density Learning", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1E2, 0x3C }, UdsDefinition{ 0x7E0, 0x1E2, 0x3C, false, 0, 21, 7, 4, "Alcohol Density Learning", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x392, 0x3C }, UdsDefinition{ 0x7E0, 0x392, 0x3C, false, 0, 21, 6, 4, "Fuel Dilution Status", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x392, 0x3C }, UdsDefinition{ 0x7E0, 0x392, 0x3C, false, 0, 21, 6, 4, "Fuel Dilution Status", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1E3, 0x3C }, UdsDefinition{ 0x7E0, 0x1E3, 0x3C, false, 33, 22, 0, 0.006103515625, 0.0, 4, "High Pres FP Duty" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x21D, 0x3C }, UdsDefinition{ 0x7E0, 0x21D, 0x3C, false, 33, 26, 0, 0.006103515625, 0.0, 4, "Alcohol Feedback Value" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x21E, 0x3C }, UdsDefinition{ 0x7E0, 0x21E, 0x3C, false, 0, 28, 0, 1.0, 0.0, 4, "Trip aft F/Crrctn by Stall" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x21F, 0x3C }, UdsDefinition{ 0x7E0, 0x21F, 0x3C, false, 33, 29, 0, 0.006103515625, 0.0, 4, "Alc FB Val bfr F/Crrctn by Stall" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x220, 0x3C }, UdsDefinition{ 0x7E0, 0x220, 0x3C, false, 24, 31, 0, 0.01953125, 0.0, 4, "Fuel Dilution Estimate" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x393, 0x3C }, UdsDefinition{ 0x7E0, 0x393, 0x3C, false, 33, 33, 0, 0.006103515625, 0.0, 4, "Sub Injector VSV Duty" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x394, 0x3C }, UdsDefinition{ 0x7E0, 0x394, 0x3C, false, 0, 35, 7, 4, "Sub Fuel Tank Pump Relay", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x394, 0x3C }, UdsDefinition{ 0x7E0, 0x394, 0x3C, false, 0, 35, 7, 4, "Sub Fuel Tank Pump Relay", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3DC, 0x3C }, UdsDefinition{ 0x7E0, 0x3DC, 0x3C, false, 36, 36, 0, 0.001953125, -64.0, 4, "High Fuel Pressure Sensor" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x441, 0x3C }, UdsDefinition{ 0x7E0, 0x441, 0x3C, false, 34, 38, 0, 0.022, -720.896, 4, "Low Fuel Pressure Sensor" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x47A, 0x3C }, UdsDefinition{ 0x7E0, 0x47A, 0x3C, false, 13, 40, 0, 0.1, 0.0, 4, "Distance from Injector Maintenance" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x302, 0x3D }, UdsDefinition{ 0x7E0, 0x302, 0x3D, false, 31, 0, 0, 1.0, 0.0, 4, "Pilot 1 Injection Period" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x303, 0x3D }, UdsDefinition{ 0x7E0, 0x303, 0x3D, false, 31, 2, 0, 1.0, 0.0, 4, "Pilot 2 Injection Period" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x304, 0x3D }, UdsDefinition{ 0x7E0, 0x304, 0x3D, false, 31, 4, 0, 1.0, 0.0, 4, "Main Injection Period" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x305, 0x3D }, UdsDefinition{ 0x7E0, 0x305, 0x3D, false, 31, 6, 0, 1.0, 0.0, 4, "After Injection Period" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x306, 0x3D }, UdsDefinition{ 0x7E0, 0x306, 0x3D, false, 60, 8, 0, 0.0078125, -210.0, 4, "Pilot 1 Injection Timing" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x307, 0x3D }, UdsDefinition{ 0x7E0, 0x307, 0x3D, false, 60, 10, 0, 0.0078125, -210.0, 4, "Pilot 2 Injection Timing" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x308, 0x3D }, UdsDefinition{ 0x7E0, 0x308, 0x3D, false, 60, 12, 0, 0.0078125, -210.0, 4, "After Injection Timing" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x309, 0x3D }, UdsDefinition{ 0x7E0, 0x309, 0x3D, false, 62, 14, 0, 0.15625, -20.0, 4, "Inj Vol Feedback Learning" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x30A, 0x3D }, UdsDefinition{ 0x7E0, 0x30A, 0x3D, false, 62, 15, 0, 0.15625, -20.0, 4, "Injection Feedback Val #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x30B, 0x3D }, UdsDefinition{ 0x7E0, 0x30B, 0x3D, false, 62, 16, 0, 0.15625, -20.0, 4, "Injection Feedback Val #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x30C, 0x3D }, UdsDefinition{ 0x7E0, 0x30C, 0x3D, false, 62, 17, 0, 0.15625, -20.0, 4, "Injection Feedback Val #3" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x30D, 0x3D }, UdsDefinition{ 0x7E0, 0x30D, 0x3D, false, 62, 18, 0, 0.15625, -20.0, 4, "Injection Feedback Val #4" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x30E, 0x3D }, UdsDefinition{ 0x7E0, 0x30E, 0x3D, false, 62, 19, 0, 0.15625, -20.0, 4, "Injection Feedback Val #5" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x30F, 0x3D }, UdsDefinition{ 0x7E0, 0x30F, 0x3D, false, 62, 20, 0, 0.15625, -20.0, 4, "Injection Feedback Val #6" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x310, 0x3D }, UdsDefinition{ 0x7E0, 0x310, 0x3D, false, 62, 21, 0, 0.15625, -20.0, 4, "Injection Feedback Val #7" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x311, 0x3D }, UdsDefinition{ 0x7E0, 0x311, 0x3D, false, 62, 22, 0, 0.15625, -20.0, 4, "Injection Feedback Val #8" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x312, 0x3D }, UdsDefinition{ 0x7E0, 0x312, 0x3D, false, 62, 23, 0, 0.01953125, 0.0, 4, "Injection Volume" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x313, 0x3D }, UdsDefinition{ 0x7E0, 0x313, 0x3D, false, 62, 25, 0, 0.01953125, -640.0, 4, "Injection Pressure Correction" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x314, 0x3D }, UdsDefinition{ 0x7E0, 0x314, 0x3D, false, 62, 27, 0, 0.01953125, -640.0, 4, "Inj. FB Vol. for Idle" });
// }
// void init_udsDefinitions_part13() {
//     udsMap.emplace(uds_key{ 0x7E0, 0x315, 0x3D }, UdsDefinition{ 0x7E0, 0x315, 0x3D, false, 12, 33, 0, 0.125, -4096.0, 4, "Pump SCV Learning Value" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x316, 0x3D }, UdsDefinition{ 0x7E0, 0x316, 0x3D, false, 12, 35, 0, 0.125, 0.0, 4, "Target Pump SCV Current" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x379, 0x3D }, UdsDefinition{ 0x7E0, 0x379, 0x3D, false, 33, 37, 0, 0.006103515625, 0.0, 4, "Pump SCV Duty Request" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x37A, 0x3D }, UdsDefinition{ 0x7E0, 0x37A, 0x3D, false, 0, 39, 7, 4, "Pump SCV Status", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x37A, 0x3D }, UdsDefinition{ 0x7E0, 0x37A, 0x3D, false, 0, 39, 7, 4, "Pump SCV Status", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x37B, 0x3D }, UdsDefinition{ 0x7E0, 0x37B, 0x3D, false, 0, 40, 7, 4, "Injector Pilot Quantity Learning", 0, "Ready" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x37B, 0x3D }, UdsDefinition{ 0x7E0, 0x37B, 0x3D, false, 0, 40, 7, 4, "Injector Pilot Quantity Learning", 1, "NG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x37C, 0x3D }, UdsDefinition{ 0x7E0, 0x37C, 0x3D, false, 0, 40, 6, 4, "Actuator Pilot Quantity Learning", 0, "Ready" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x37C, 0x3D }, UdsDefinition{ 0x7E0, 0x37C, 0x3D, false, 0, 40, 6, 4, "Actuator Pilot Quantity Learning", 1, "NG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x37D, 0x3D }, UdsDefinition{ 0x7E0, 0x37D, 0x3D, false, 0, 40, 5, 4, "Temperature Pilot Quantity Learning", 0, "Ready" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x37D, 0x3D }, UdsDefinition{ 0x7E0, 0x37D, 0x3D, false, 0, 40, 5, 4, "Temperature Pilot Quantity Learning", 1, "NG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x37E, 0x3D }, UdsDefinition{ 0x7E0, 0x37E, 0x3D, false, 0, 40, 4, 4, "Catalyst Pilot Quantity Learning", 0, "Ready" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x37E, 0x3D }, UdsDefinition{ 0x7E0, 0x37E, 0x3D, false, 0, 40, 4, 4, "Catalyst Pilot Quantity Learning", 1, "NG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x37F, 0x3D }, UdsDefinition{ 0x7E0, 0x37F, 0x3D, false, 0, 40, 0, 4, "Pilot Quantity Learning", 0, "Standby" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x37F, 0x3D }, UdsDefinition{ 0x7E0, 0x37F, 0x3D, false, 0, 40, 0, 4, "Pilot Quantity Learning", 1, "Wait" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x37F, 0x3D }, UdsDefinition{ 0x7E0, 0x37F, 0x3D, false, 0, 40, 0, 4, "Pilot Quantity Learning", 2, "Learn" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x37F, 0x3D }, UdsDefinition{ 0x7E0, 0x37F, 0x3D, false, 0, 40, 0, 4, "Pilot Quantity Learning", 4, "Stop" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x37F, 0x3D }, UdsDefinition{ 0x7E0, 0x37F, 0x3D, false, 0, 40, 0, 4, "Pilot Quantity Learning", 8, "Comple" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x442, 0x3D }, UdsDefinition{ 0x7E0, 0x442, 0x3D, false, 60, 41, 0, 0.009765625, 0.0, 4, "PCV Energization Timing" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x443, 0x3D }, UdsDefinition{ 0x7E0, 0x443, 0x3D, false, 60, 43, 0, 0.03125, -1024.0, 4, "Pump Difference Angle Learning Value" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x444, 0x3D }, UdsDefinition{ 0x7E0, 0x444, 0x3D, false, 31, 45, 0, 1.0, 0.0, 4, "Pre Injection Period" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x445, 0x3D }, UdsDefinition{ 0x7E0, 0x445, 0x3D, false, 60, 47, 0, 0.0078125, -210.0, 4, "Pre Injection Timing" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x446, 0x3D }, UdsDefinition{ 0x7E0, 0x446, 0x3D, false, 57, 49, 0, 1.0, -40.0, 4, "Fuel Return Temperature" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x447, 0x3D }, UdsDefinition{ 0x7E0, 0x447, 0x3D, false, 24, 50, 0, 3.125e-05, 0.0, 4, "Injection Volume (Cylinder1)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x448, 0x3E }, UdsDefinition{ 0x7E0, 0x448, 0x3E, false, 62, 0, 0, 0.01953125, -640.0, 4, "Total Injection Volume" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x449, 0x3E }, UdsDefinition{ 0x7E0, 0x449, 0x3E, false, 62, 2, 0, 0.01953125, -640.0, 4, "Injection Volume #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x44A, 0x3E }, UdsDefinition{ 0x7E0, 0x44A, 0x3E, false, 62, 4, 0, 0.01953125, -640.0, 4, "Injection Volume #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x44B, 0x3E }, UdsDefinition{ 0x7E0, 0x44B, 0x3E, false, 62, 6, 0, 0.01953125, -640.0, 4, "Injection Volume #3" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x44C, 0x3E }, UdsDefinition{ 0x7E0, 0x44C, 0x3E, false, 62, 8, 0, 0.01953125, -640.0, 4, "Injection Volume #4" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x44D, 0x3E }, UdsDefinition{ 0x7E0, 0x44D, 0x3E, false, 34, 10, 0, 10.0, 0.0, 4, "Fuel Pressure #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x44E, 0x3E }, UdsDefinition{ 0x7E0, 0x44E, 0x3E, false, 34, 12, 0, 10.0, 0.0, 4, "Fuel Pressure #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x44F, 0x3E }, UdsDefinition{ 0x7E0, 0x44F, 0x3E, false, 34, 14, 0, 10.0, 0.0, 4, "Fuel Pressure #3" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x450, 0x3E }, UdsDefinition{ 0x7E0, 0x450, 0x3E, false, 34, 16, 0, 10.0, 0.0, 4, "Fuel Pressure #4" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x451, 0x3E }, UdsDefinition{ 0x7E0, 0x451, 0x3E, false, 57, 18, 0, 1.0, -40.0, 4, "Fuel Temperature #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x452, 0x3E }, UdsDefinition{ 0x7E0, 0x452, 0x3E, false, 57, 19, 0, 1.0, -40.0, 4, "Fuel Temperature #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x453, 0x3E }, UdsDefinition{ 0x7E0, 0x453, 0x3E, false, 57, 20, 0, 1.0, -40.0, 4, "Fuel Temperature #3" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x454, 0x3E }, UdsDefinition{ 0x7E0, 0x454, 0x3E, false, 57, 21, 0, 1.0, -40.0, 4, "Fuel Temperature #4" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x111, 0x41 }, UdsDefinition{ 0x7E0, 0x111, 0x41, false, 48, 0, 0, 0.01953125, 0.0, 4, "Throttle Sens Open Pos #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x112, 0x41 }, UdsDefinition{ 0x7E0, 0x112, 0x41, false, 48, 1, 0, 0.01953125, 0.0, 4, "Throttle Sens Open Pos #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x113, 0x41 }, UdsDefinition{ 0x7E0, 0x113, 0x41, false, 5, 2, 0, 0.48828125, 0.0, 4, "Accel Fully Close Learn #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x114, 0x41 }, UdsDefinition{ 0x7E0, 0x114, 0x41, false, 5, 3, 0, 0.48828125, 0.0, 4, "Accel Fully Close Learn #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x115, 0x41 }, UdsDefinition{ 0x7E0, 0x115, 0x41, false, 48, 4, 0, 0.01953125, 0.0, 4, "Throttle Position Command" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x116, 0x41 }, UdsDefinition{ 0x7E0, 0x116, 0x41, false, 33, 5, 0, 0.006103515625, 0.0, 4, "Accelerator Position" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x117, 0x41 }, UdsDefinition{ 0x7E0, 0x117, 0x41, false, 48, 7, 0, 0.001220703125, 0.0, 4, "+BM Voltage" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x118, 0x41 }, UdsDefinition{ 0x7E0, 0x118, 0x41, false, 48, 9, 0, 0.01953125, 0.0, 4, "Accel Sensor Out No.1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x11A, 0x41 }, UdsDefinition{ 0x7E0, 0x11A, 0x41, false, 48, 11, 0, 0.01953125, 0.0, 4, "Throttle Position No.1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x11B, 0x41 }, UdsDefinition{ 0x7E0, 0x11B, 0x41, false, 48, 12, 0, 0.01953125, 0.0, 4, "Throttle Position No.2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x11C, 0x41 }, UdsDefinition{ 0x7E0, 0x11C, 0x41, false, 48, 13, 0, 0.01953125, 0.0, 4, "Throttle Require Position" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x11D, 0x41 }, UdsDefinition{ 0x7E0, 0x11D, 0x41, false, 48, 14, 0, 0.01953125, 0.0, 4, "Throttle Fully Close Learn" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x11E, 0x41 }, UdsDefinition{ 0x7E0, 0x11E, 0x41, false, 33, 15, 0, 1.0, 0.0, 4, "Throttle Motor Duty (Open)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x11F, 0x41 }, UdsDefinition{ 0x7E0, 0x11F, 0x41, false, 33, 16, 0, 1.0, 0.0, 4, "Throttle Motor Duty (Close)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x120, 0x41 }, UdsDefinition{ 0x7E0, 0x120, 0x41, false, 9, 17, 0, 0.078125, 0.0, 4, "Throttle Motor Current" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x121, 0x41 }, UdsDefinition{ 0x7E0, 0x121, 0x41, false, 33, 18, 0, 0.5, 0.0, 4, "Throttle Step Position" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x122, 0x41 }, UdsDefinition{ 0x7E0, 0x122, 0x41, false, 33, 19, 0, 0.5, 0.0, 4, "Throttle Aim Position" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x123, 0x41 }, UdsDefinition{ 0x7E0, 0x123, 0x41, false, 0, 20, 7, 4, "System Guard", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x123, 0x41 }, UdsDefinition{ 0x7E0, 0x123, 0x41, false, 0, 20, 7, 4, "System Guard", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x124, 0x41 }, UdsDefinition{ 0x7E0, 0x124, 0x41, false, 0, 20, 6, 4, "Open Side Malfunction", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x124, 0x41 }, UdsDefinition{ 0x7E0, 0x124, 0x41, false, 0, 20, 6, 4, "Open Side Malfunction", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x125, 0x41 }, UdsDefinition{ 0x7E0, 0x125, 0x41, false, 0, 20, 5, 4, "Actuator Power Supply", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x125, 0x41 }, UdsDefinition{ 0x7E0, 0x125, 0x41, false, 0, 20, 5, 4, "Actuator Power Supply", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x126, 0x41 }, UdsDefinition{ 0x7E0, 0x126, 0x41, false, 0, 20, 4, 4, "ST1", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x126, 0x41 }, UdsDefinition{ 0x7E0, 0x126, 0x41, false, 0, 20, 4, 4, "ST1", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x127, 0x41 }, UdsDefinition{ 0x7E0, 0x127, 0x41, false, 0, 20, 3, 4, "Accelerator Idle Position", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x127, 0x41 }, UdsDefinition{ 0x7E0, 0x127, 0x41, false, 0, 20, 3, 4, "Accelerator Idle Position", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x128, 0x41 }, UdsDefinition{ 0x7E0, 0x128, 0x41, false, 0, 20, 2, 4, "Throttle Idle Position", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x128, 0x41 }, UdsDefinition{ 0x7E0, 0x128, 0x41, false, 0, 20, 2, 4, "Throttle Idle Position", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2E8, 0x41 }, UdsDefinition{ 0x7E0, 0x2E8, 0x41, false, 59, 21, 0, 1.0, 0.0, 4, "Throttle Fully Close Learn Step" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x129, 0x42 }, UdsDefinition{ 0x7E0, 0x129, 0x42, false, 9, 0, 0, 0.003814697265625, -125.0, 4, "Battery Current" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x12A, 0x42 }, UdsDefinition{ 0x7E0, 0x12A, 0x42, false, 57, 2, 0, 0.1, -40.0, 4, "Battery Temperature" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x12B, 0x42 }, UdsDefinition{ 0x7E0, 0x12B, 0x42, false, 48, 4, 0, 0.001220703125, 0.0, 4, "Alt Vol - Non Active Test" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x12C, 0x42 }, UdsDefinition{ 0x7E0, 0x12C, 0x42, false, 48, 6, 0, 0.001220703125, 0.0, 4, "Alt Vol - Active Test" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x12D, 0x42 }, UdsDefinition{ 0x7E0, 0x12D, 0x42, false, 33, 8, 0, 0.006103515625, 0.0, 4, "Alternator Output Duty" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x435, 0x42 }, UdsDefinition{ 0x7E0, 0x435, 0x42, false, 48, 14, 0, 0.001220703125, 0.0, 4, "Battery Sensor Voltage" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x54B, 0x42 }, UdsDefinition{ 0x7E0, 0x54B, 0x42, false, 0, 18, 0, 4, "Auxiliary Battery Charging Rate Accuracy", 0, "Low" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x54B, 0x42 }, UdsDefinition{ 0x7E0, 0x54B, 0x42, false, 0, 18, 0, 4, "Auxiliary Battery Charging Rate Accuracy", 1, "Middle" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x54B, 0x42 }, UdsDefinition{ 0x7E0, 0x54B, 0x42, false, 0, 18, 0, 4, "Auxiliary Battery Charging Rate Accuracy", 2, "High" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x54B, 0x42 }, UdsDefinition{ 0x7E0, 0x54B, 0x42, false, 0, 18, 0, 4, "Auxiliary Battery Charging Rate Accuracy", 3, "Disable" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x54C, 0x42 }, UdsDefinition{ 0x7E0, 0x54C, 0x42, false, 18, 19, 0, 0.5, 0.0, 4, "Auxiliary Battery Status of Full Charge" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x54D, 0x42 }, UdsDefinition{ 0x7E0, 0x54D, 0x42, false, 12, 20, 0, 1.0, 0.0, 4, "Auxiliary Battery Dark Current" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x54E, 0x42 }, UdsDefinition{ 0x7E0, 0x54E, 0x42, false, 54, 22, 0, 1.0, 0.0, 4, "Auxiliary Battery Sensor Sleep Time" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x12E, 0x43 }, UdsDefinition{ 0x7E0, 0x12E, 0x43, false, 0, 0, 0, 4, "Stop&Start of Eng State", 0, "IG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x12E, 0x43 }, UdsDefinition{ 0x7E0, 0x12E, 0x43, false, 0, 0, 0, 4, "Stop&Start of Eng State", 1, "Run" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x12E, 0x43 }, UdsDefinition{ 0x7E0, 0x12E, 0x43, false, 0, 0, 0, 4, "Stop&Start of Eng State", 2, "Stopreq" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x12E, 0x43 }, UdsDefinition{ 0x7E0, 0x12E, 0x43, false, 0, 0, 0, 4, "Stop&Start of Eng State", 3, "Stop" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x12E, 0x43 }, UdsDefinition{ 0x7E0, 0x12E, 0x43, false, 0, 0, 0, 4, "Stop&Start of Eng State", 4, "Restart" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x132, 0x44 }, UdsDefinition{ 0x7E0, 0x132, 0x44, false, 33, 6, 0, 0.006103515625, 0.0, 4, "VVT Aim Angle #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x133, 0x44 }, UdsDefinition{ 0x7E0, 0x133, 0x44, false, 33, 8, 0, 0.006103515625, 0.0, 4, "VVT OCV Duty #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x134, 0x44 }, UdsDefinition{ 0x7E0, 0x134, 0x44, false, 5, 10, 0, 0.009765625, 0.0, 4, "VVT Change Angle #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x135, 0x44 }, UdsDefinition{ 0x7E0, 0x135, 0x44, false, 33, 12, 0, 0.006103515625, 0.0, 4, "VVT Ex Hold Lrn Val #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x136, 0x44 }, UdsDefinition{ 0x7E0, 0x136, 0x44, false, 33, 14, 0, 0.006103515625, 0.0, 4, "VVT Ex OCV Duty #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x137, 0x44 }, UdsDefinition{ 0x7E0, 0x137, 0x44, false, 5, 16, 0, 0.009765625, 0.0, 4, "VVT Ex Chg Angle #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x138, 0x44 }, UdsDefinition{ 0x7E0, 0x138, 0x44, false, 33, 18, 0, 0.006103515625, 0.0, 4, "VVT Ex Hold Lrn Val #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x139, 0x44 }, UdsDefinition{ 0x7E0, 0x139, 0x44, false, 33, 20, 0, 0.006103515625, 0.0, 4, "VVT Ex OCV Duty #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x13A, 0x44 }, UdsDefinition{ 0x7E0, 0x13A, 0x44, false, 5, 22, 0, 0.009765625, 0.0, 4, "VVT Ex Chg Angle #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x13B, 0x44 }, UdsDefinition{ 0x7E0, 0x13B, 0x44, false, 5, 24, 0, 0.009765625, 0.0, 4, "VVT-iE Aim Angle #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x13C, 0x44 }, UdsDefinition{ 0x7E0, 0x13C, 0x44, false, 5, 26, 0, 0.009765625, 0.0, 4, "VVT-iE Aim Angle #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x13D, 0x44 }, UdsDefinition{ 0x7E0, 0x13D, 0x44, false, 0, 28, 7, 4, "VVT-iE Mot Direction #1", 0, "Backward" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x13D, 0x44 }, UdsDefinition{ 0x7E0, 0x13D, 0x44, false, 0, 28, 7, 4, "VVT-iE Mot Direction #1", 1, "Forward" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x13E, 0x44 }, UdsDefinition{ 0x7E0, 0x13E, 0x44, false, 0, 28, 6, 4, "VVT-iE Mot Direction #2", 0, "Backward" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x13E, 0x44 }, UdsDefinition{ 0x7E0, 0x13E, 0x44, false, 0, 28, 6, 4, "VVT-iE Mot Direction #2", 1, "Forward" });
// }
// void init_udsDefinitions_part14() {
//     udsMap.emplace(uds_key{ 0x7E0, 0x3D5, 0x44 }, UdsDefinition{ 0x7E0, 0x3D5, 0x44, false, 5, 29, 0, 0.009765625, 0.0, 4, "VVT Target Angle #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3D6, 0x44 }, UdsDefinition{ 0x7E0, 0x3D6, 0x44, false, 5, 31, 0, 0.009765625, 0.0, 4, "VVT Target Angle #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3D7, 0x44 }, UdsDefinition{ 0x7E0, 0x3D7, 0x44, false, 5, 33, 0, 0.009765625, 0.0, 4, "VVT Ex Target Angle #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3D8, 0x44 }, UdsDefinition{ 0x7E0, 0x3D8, 0x44, false, 5, 35, 0, 0.009765625, 0.0, 4, "VVT Ex Target Angle #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3D9, 0x44 }, UdsDefinition{ 0x7E0, 0x3D9, 0x44, false, 33, 37, 0, 0.006103515625, -200.0, 4, "VVT-iE Duty #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3DA, 0x44 }, UdsDefinition{ 0x7E0, 0x3DA, 0x44, false, 33, 39, 0, 0.006103515625, -200.0, 4, "VVT-iE Duty #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x13F, 0x45 }, UdsDefinition{ 0x7E0, 0x13F, 0x45, false, 39, 1, 0, 25.0, 0.0, 4, "Misfire RPM" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x140, 0x45 }, UdsDefinition{ 0x7E0, 0x140, 0x45, false, 61, 2, 0, 0.015625, 0.0, 4, "Misfire Load" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2EF, 0x45 }, UdsDefinition{ 0x7E0, 0x2EF, 0x45, false, 34, 3, 0, 0.01, 0.0, 4, "Misfire Load" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x141, 0x45 }, UdsDefinition{ 0x7E0, 0x141, 0x45, false, 0, 5, 0, 1.0, 0.0, 4, "Cylinder #1 Misfire Count" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x142, 0x45 }, UdsDefinition{ 0x7E0, 0x142, 0x45, false, 0, 6, 0, 1.0, 0.0, 4, "Cylinder #2 Misfire Count" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x143, 0x45 }, UdsDefinition{ 0x7E0, 0x143, 0x45, false, 0, 7, 0, 1.0, 0.0, 4, "Cylinder #3 Misfire Count" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x144, 0x45 }, UdsDefinition{ 0x7E0, 0x144, 0x45, false, 0, 8, 0, 1.0, 0.0, 4, "Cylinder #4 Misfire Count" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x145, 0x45 }, UdsDefinition{ 0x7E0, 0x145, 0x45, false, 0, 9, 0, 1.0, 0.0, 4, "Cylinder #5 Misfire Count" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x146, 0x45 }, UdsDefinition{ 0x7E0, 0x146, 0x45, false, 0, 10, 0, 1.0, 0.0, 4, "Cylinder #6 Misfire Count" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x147, 0x45 }, UdsDefinition{ 0x7E0, 0x147, 0x45, false, 0, 11, 0, 1.0, 0.0, 4, "Cylinder #7 Misfire Count" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x148, 0x45 }, UdsDefinition{ 0x7E0, 0x148, 0x45, false, 0, 12, 0, 1.0, 0.0, 4, "Cylinder #8 Misfire Count" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x23F, 0x45 }, UdsDefinition{ 0x7E0, 0x23F, 0x45, false, 0, 13, 0, 1.0, 0.0, 4, "Cylinder #9 Misfire Count" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x240, 0x45 }, UdsDefinition{ 0x7E0, 0x240, 0x45, false, 0, 14, 0, 1.0, 0.0, 4, "Cylinder #10 Misfire Count" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2AA, 0x45 }, UdsDefinition{ 0x7E0, 0x2AA, 0x45, false, 0, 15, 0, 1.0, 0.0, 4, "Cylinder #11 Misfire Count" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2AB, 0x45 }, UdsDefinition{ 0x7E0, 0x2AB, 0x45, false, 0, 16, 0, 1.0, 0.0, 4, "Cylinder #12 Misfire Count" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x149, 0x45 }, UdsDefinition{ 0x7E0, 0x149, 0x45, false, 0, 17, 0, 1.0, 0.0, 4, "All Cylinders Misfire Count" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x14A, 0x45 }, UdsDefinition{ 0x7E0, 0x14A, 0x45, false, 0, 18, 0, 1.0, 0.0, 4, "Ignition Trig. Count" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x14B, 0x45 }, UdsDefinition{ 0x7E0, 0x14B, 0x45, false, 0, 20, 0, 1.0, 0.0, 4, "Multi Cylinders Misfire Count" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x14C, 0x45 }, UdsDefinition{ 0x7E0, 0x14C, 0x45, false, 33, 22, 0, 1.0, -128.0, 4, "Misfire Margin" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2E9, 0x45 }, UdsDefinition{ 0x7E0, 0x2E9, 0x45, false, 0, 23, 3, 4, "Cat OT MF F/C Cylinder#12", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2E9, 0x45 }, UdsDefinition{ 0x7E0, 0x2E9, 0x45, false, 0, 23, 3, 4, "Cat OT MF F/C Cylinder#12", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2EA, 0x45 }, UdsDefinition{ 0x7E0, 0x2EA, 0x45, false, 0, 23, 2, 4, "Cat OT MF F/C Cylinder#11", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2EA, 0x45 }, UdsDefinition{ 0x7E0, 0x2EA, 0x45, false, 0, 23, 2, 4, "Cat OT MF F/C Cylinder#11", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2EB, 0x45 }, UdsDefinition{ 0x7E0, 0x2EB, 0x45, false, 0, 23, 1, 4, "Cat OT MF F/C Cylinder#10", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2EB, 0x45 }, UdsDefinition{ 0x7E0, 0x2EB, 0x45, false, 0, 23, 1, 4, "Cat OT MF F/C Cylinder#10", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2EC, 0x45 }, UdsDefinition{ 0x7E0, 0x2EC, 0x45, false, 0, 23, 0, 4, "Cat OT MF F/C Cylinder#9", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2EC, 0x45 }, UdsDefinition{ 0x7E0, 0x2EC, 0x45, false, 0, 23, 0, 4, "Cat OT MF F/C Cylinder#9", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x14D, 0x45 }, UdsDefinition{ 0x7E0, 0x14D, 0x45, false, 0, 24, 7, 4, "Cat OT MF F/C Cylinder#8", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x14D, 0x45 }, UdsDefinition{ 0x7E0, 0x14D, 0x45, false, 0, 24, 7, 4, "Cat OT MF F/C Cylinder#8", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x14E, 0x45 }, UdsDefinition{ 0x7E0, 0x14E, 0x45, false, 0, 24, 6, 4, "Cat OT MF F/C Cylinder#7", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x14E, 0x45 }, UdsDefinition{ 0x7E0, 0x14E, 0x45, false, 0, 24, 6, 4, "Cat OT MF F/C Cylinder#7", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x14F, 0x45 }, UdsDefinition{ 0x7E0, 0x14F, 0x45, false, 0, 24, 5, 4, "Cat OT MF F/C Cylinder#6", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x14F, 0x45 }, UdsDefinition{ 0x7E0, 0x14F, 0x45, false, 0, 24, 5, 4, "Cat OT MF F/C Cylinder#6", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x150, 0x45 }, UdsDefinition{ 0x7E0, 0x150, 0x45, false, 0, 24, 4, 4, "Cat OT MF F/C Cylinder#5", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x150, 0x45 }, UdsDefinition{ 0x7E0, 0x150, 0x45, false, 0, 24, 4, 4, "Cat OT MF F/C Cylinder#5", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x151, 0x45 }, UdsDefinition{ 0x7E0, 0x151, 0x45, false, 0, 24, 3, 4, "Cat OT MF F/C Cylinder#4", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x151, 0x45 }, UdsDefinition{ 0x7E0, 0x151, 0x45, false, 0, 24, 3, 4, "Cat OT MF F/C Cylinder#4", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x152, 0x45 }, UdsDefinition{ 0x7E0, 0x152, 0x45, false, 0, 24, 2, 4, "Cat OT MF F/C Cylinder#3", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x152, 0x45 }, UdsDefinition{ 0x7E0, 0x152, 0x45, false, 0, 24, 2, 4, "Cat OT MF F/C Cylinder#3", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x153, 0x45 }, UdsDefinition{ 0x7E0, 0x153, 0x45, false, 0, 24, 1, 4, "Cat OT MF F/C Cylinder#2", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x153, 0x45 }, UdsDefinition{ 0x7E0, 0x153, 0x45, false, 0, 24, 1, 4, "Cat OT MF F/C Cylinder#2", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x154, 0x45 }, UdsDefinition{ 0x7E0, 0x154, 0x45, false, 0, 24, 0, 4, "Cat OT MF F/C Cylinder#1", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x154, 0x45 }, UdsDefinition{ 0x7E0, 0x154, 0x45, false, 0, 24, 0, 4, "Cat OT MF F/C Cylinder#1", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x155, 0x45 }, UdsDefinition{ 0x7E0, 0x155, 0x45, false, 0, 25, 7, 4, "Catalyst OT MF F/C", 0, "Not Avl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x155, 0x45 }, UdsDefinition{ 0x7E0, 0x155, 0x45, false, 0, 25, 7, 4, "Catalyst OT MF F/C", 1, "Avail" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x156, 0x45 }, UdsDefinition{ 0x7E0, 0x156, 0x45, false, 0, 25, 6, 4, "Cat OT MF F/C History", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x156, 0x45 }, UdsDefinition{ 0x7E0, 0x156, 0x45, false, 0, 25, 6, 4, "Cat OT MF F/C History", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x157, 0x46 }, UdsDefinition{ 0x7E0, 0x157, 0x46, false, 34, 1, 0, 0.022, -720.896, 4, "Vapor Pressure (Calculated)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x158, 0x46 }, UdsDefinition{ 0x7E0, 0x158, 0x46, false, 34, 3, 0, 0.022, 0.0, 4, "Vapor Pressure Pump" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x159, 0x46 }, UdsDefinition{ 0x7E0, 0x159, 0x46, false, 34, 5, 0, 0.00078125, -25.6, 4, "Vapor Pressure Tank" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x15A, 0x47 }, UdsDefinition{ 0x7E0, 0x15A, 0x47, false, 59, 0, 0, 1.0, 0.0, 4, "EGR Step Position" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x15B, 0x47 }, UdsDefinition{ 0x7E0, 0x15B, 0x47, false, 57, 1, 0, 0.625, 0.0, 4, "EGR Gas Temperature" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x15C, 0x47 }, UdsDefinition{ 0x7E0, 0x15C, 0x47, false, 48, 2, 0, 7.62939453125e-05, 0.0, 4, "EGR Close Lrn. Val." });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1DC, 0x47 }, UdsDefinition{ 0x7E0, 0x1DC, 0x47, false, 48, 4, 0, 7.62939453125e-05, 0.0, 4, "EGR Close Lrn. Val. #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x15D, 0x47 }, UdsDefinition{ 0x7E0, 0x15D, 0x47, false, 33, 6, 0, 0.5, 0.0, 4, "EGR Lift Sensor Volt %" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1DD, 0x47 }, UdsDefinition{ 0x7E0, 0x1DD, 0x47, false, 33, 7, 0, 0.5, 0.0, 4, "EGR Lift Sensor Volt % #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x15E, 0x47 }, UdsDefinition{ 0x7E0, 0x15E, 0x47, false, 33, 8, 0, 0.5, 0.0, 4, "Actual EGR Valve Pos." });
//     udsMap.emplace(uds_key{ 0x7E0, 0x15F, 0x47 }, UdsDefinition{ 0x7E0, 0x15F, 0x47, false, 33, 9, 0, 0.5, 0.0, 4, "Target EGR Pos." });
//     udsMap.emplace(uds_key{ 0x7E0, 0x160, 0x47 }, UdsDefinition{ 0x7E0, 0x160, 0x47, false, 33, 10, 0, 0.5, 0.0, 4, "Actual EGR Valve Pos. #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x161, 0x47 }, UdsDefinition{ 0x7E0, 0x161, 0x47, false, 33, 11, 0, 0.5, 0.0, 4, "Target EGR Pos. #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x162, 0x47 }, UdsDefinition{ 0x7E0, 0x162, 0x47, false, 0, 12, 7, 4, "EGR Operation Prohibit", 0, "OK" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x162, 0x47 }, UdsDefinition{ 0x7E0, 0x162, 0x47, false, 0, 12, 7, 4, "EGR Operation Prohibit", 1, "NG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B8, 0x47 }, UdsDefinition{ 0x7E0, 0x3B8, 0x47, false, 0, 12, 6, 4, "EGR Cooler Bypass VSV", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B8, 0x47 }, UdsDefinition{ 0x7E0, 0x3B8, 0x47, false, 0, 12, 6, 4, "EGR Cooler Bypass VSV", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x482, 0x47 }, UdsDefinition{ 0x7E0, 0x482, 0x47, false, 0, 12, 5, 4, "EGR Cooler Bypass VSV2", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x482, 0x47 }, UdsDefinition{ 0x7E0, 0x482, 0x47, false, 0, 12, 5, 4, "EGR Cooler Bypass VSV2", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x380, 0x47 }, UdsDefinition{ 0x7E0, 0x380, 0x47, false, 48, 13, 0, 7.62939453125e-05, 0.0, 4, "EGR Position Sensor" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x381, 0x47 }, UdsDefinition{ 0x7E0, 0x381, 0x47, false, 48, 15, 0, 7.62939453125e-05, 0.0, 4, "EGR Position Sensor #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x317, 0x47 }, UdsDefinition{ 0x7E0, 0x317, 0x47, false, 33, 17, 0, 0.5, 0.0, 4, "EGR Motor Duty #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x318, 0x47 }, UdsDefinition{ 0x7E0, 0x318, 0x47, false, 33, 18, 0, 0.5, 0.0, 4, "EGR Motor Duty #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x319, 0x47 }, UdsDefinition{ 0x7E0, 0x319, 0x47, false, 0, 19, 0, 4, "EGR Cooler Bypass Position", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x319, 0x47 }, UdsDefinition{ 0x7E0, 0x319, 0x47, false, 0, 19, 0, 4, "EGR Cooler Bypass Position", 1, "Bypass" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x319, 0x47 }, UdsDefinition{ 0x7E0, 0x319, 0x47, false, 0, 19, 0, 4, "EGR Cooler Bypass Position", 2, "Half Pos" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x319, 0x47 }, UdsDefinition{ 0x7E0, 0x319, 0x47, false, 0, 19, 0, 4, "EGR Cooler Bypass Position", 3, "Cooler" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x382, 0x47 }, UdsDefinition{ 0x7E0, 0x382, 0x47, false, 33, 20, 0, 0.5, 0.0, 4, "Throttle Motor DUTY" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x383, 0x47 }, UdsDefinition{ 0x7E0, 0x383, 0x47, false, 33, 21, 0, 0.5, 0.0, 4, "Throttle Motor DUTY #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x31A, 0x47 }, UdsDefinition{ 0x7E0, 0x31A, 0x47, false, 5, 22, 0, 0.00762939453125, 0.0, 4, "Throttle Close Learning Val." });
//     udsMap.emplace(uds_key{ 0x7E0, 0x31B, 0x47 }, UdsDefinition{ 0x7E0, 0x31B, 0x47, false, 5, 24, 0, 0.00762939453125, 0.0, 4, "Throttle Close Learning Val.#2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3B9, 0x48 }, UdsDefinition{ 0x7E0, 0x3B9, 0x48, false, 36, 0, 0, 0.0002337646484375, 0.0, 4, "Tank Fuel Pressure" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3BA, 0x48 }, UdsDefinition{ 0x7E0, 0x3BA, 0x48, false, 36, 2, 0, 0.0002337646484375, 0.0, 4, "Delivery Fuel Pressure" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3BB, 0x48 }, UdsDefinition{ 0x7E0, 0x3BB, 0x48, false, 57, 4, 0, 1.0, -40.0, 4, "Tank Fuel Temperature" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3BC, 0x48 }, UdsDefinition{ 0x7E0, 0x3BC, 0x48, false, 57, 5, 0, 1.0, -40.0, 4, "Delivery Fuel Temperature" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3BD, 0x48 }, UdsDefinition{ 0x7E0, 0x3BD, 0x48, false, 33, 6, 0, 1.0, 0.0, 4, "Propane Ratio" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3BE, 0x48 }, UdsDefinition{ 0x7E0, 0x3BE, 0x48, false, 33, 7, 0, 1.0, 0.0, 4, "Pre Trip Propane Ratio" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3BF, 0x48 }, UdsDefinition{ 0x7E0, 0x3BF, 0x48, false, 52, 8, 0, 1.0, 0.0, 4, "Engine Start Waiting Time" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3C0, 0x48 }, UdsDefinition{ 0x7E0, 0x3C0, 0x48, false, 0, 10, 0, 1.0, 0.0, 4, "Preignition F/C Detection Count #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3C1, 0x48 }, UdsDefinition{ 0x7E0, 0x3C1, 0x48, false, 0, 11, 0, 1.0, 0.0, 4, "Preignition F/C Detection Count #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3C2, 0x48 }, UdsDefinition{ 0x7E0, 0x3C2, 0x48, false, 0, 12, 0, 1.0, 0.0, 4, "Preignition F/C Detection Count #3" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3C3, 0x48 }, UdsDefinition{ 0x7E0, 0x3C3, 0x48, false, 0, 13, 0, 1.0, 0.0, 4, "Preignition F/C Detection Count #4" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3C4, 0x48 }, UdsDefinition{ 0x7E0, 0x3C4, 0x48, false, 0, 14, 7, 4, "Pump Previous Drive History", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3C4, 0x48 }, UdsDefinition{ 0x7E0, 0x3C4, 0x48, false, 0, 14, 7, 4, "Pump Previous Drive History", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3C5, 0x48 }, UdsDefinition{ 0x7E0, 0x3C5, 0x48, false, 0, 14, 6, 4, "Compressor Oil Warning", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3C5, 0x48 }, UdsDefinition{ 0x7E0, 0x3C5, 0x48, false, 0, 14, 6, 4, "Compressor Oil Warning", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4B0, 0x48 }, UdsDefinition{ 0x7E0, 0x4B0, 0x48, false, 0, 14, 5, 4, "Fuel Cooler VSV", 0, "Close" });
// }
// void init_udsDefinitions_part15() {
//     udsMap.emplace(uds_key{ 0x7E0, 0x4B0, 0x48 }, UdsDefinition{ 0x7E0, 0x4B0, 0x48, false, 0, 14, 5, 4, "Fuel Cooler VSV", 1, "Open" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4B9, 0x48 }, UdsDefinition{ 0x7E0, 0x4B9, 0x48, false, 0, 14, 4, 4, "Water Present on Ignition Plug", 0, "No" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4B9, 0x48 }, UdsDefinition{ 0x7E0, 0x4B9, 0x48, false, 0, 14, 4, 4, "Water Present on Ignition Plug", 1, "Yes" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3C6, 0x48 }, UdsDefinition{ 0x7E0, 0x3C6, 0x48, false, 0, 15, 7, 4, "Emergency Solenoid Valve", 0, "Close" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3C6, 0x48 }, UdsDefinition{ 0x7E0, 0x3C6, 0x48, false, 0, 15, 7, 4, "Emergency Solenoid Valve", 1, "Open" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3C7, 0x48 }, UdsDefinition{ 0x7E0, 0x3C7, 0x48, false, 0, 15, 6, 4, "LPG Solenoid Valve", 0, "Close" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3C7, 0x48 }, UdsDefinition{ 0x7E0, 0x3C7, 0x48, false, 0, 15, 6, 4, "LPG Solenoid Valve", 1, "Open" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3C8, 0x48 }, UdsDefinition{ 0x7E0, 0x3C8, 0x48, false, 0, 15, 5, 4, "Return Solenoid Valve", 0, "Close" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3C8, 0x48 }, UdsDefinition{ 0x7E0, 0x3C8, 0x48, false, 0, 15, 5, 4, "Return Solenoid Valve", 1, "Open" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3C9, 0x48 }, UdsDefinition{ 0x7E0, 0x3C9, 0x48, false, 0, 15, 4, 4, "Fuel Pump2 Speed Control", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3C9, 0x48 }, UdsDefinition{ 0x7E0, 0x3C9, 0x48, false, 0, 15, 4, 4, "Fuel Pump2 Speed Control", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3CA, 0x48 }, UdsDefinition{ 0x7E0, 0x3CA, 0x48, false, 0, 15, 3, 4, "Regulator Shut Valve", 0, "Close" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3CA, 0x48 }, UdsDefinition{ 0x7E0, 0x3CA, 0x48, false, 0, 15, 3, 4, "Regulator Shut Valve", 1, "Open" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3CB, 0x48 }, UdsDefinition{ 0x7E0, 0x3CB, 0x48, false, 48, 18, 0, 7.62939453125e-05, 0.0, 4, "Tank Fuel Pressure Sensor Voltage" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3CC, 0x48 }, UdsDefinition{ 0x7E0, 0x3CC, 0x48, false, 48, 20, 0, 7.62939453125e-05, 0.0, 4, "Delivery Fuel Pressure Sensor Voltage" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3CD, 0x48 }, UdsDefinition{ 0x7E0, 0x3CD, 0x48, false, 48, 22, 0, 7.62939453125e-05, 0.0, 4, "Delivery Fuel Temperature Sensor Voltage" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3CE, 0x48 }, UdsDefinition{ 0x7E0, 0x3CE, 0x48, false, 57, 24, 0, 1.0, -40.0, 4, "Oil Separator Temperature" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3CF, 0x48 }, UdsDefinition{ 0x7E0, 0x3CF, 0x48, false, 48, 25, 0, 7.62939453125e-05, 0.0, 4, "Oil Separator Temperature Sensor Voltage" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3D2, 0x48 }, UdsDefinition{ 0x7E0, 0x3D2, 0x48, false, 36, 27, 0, 0.001953125, 0.0, 4, "Tank Fuel Pressure" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x163, 0x49 }, UdsDefinition{ 0x7E0, 0x163, 0x49, false, 51, 0, 0, 0.25, 0.0, 4, "Requested Engine Torque" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x164, 0x49 }, UdsDefinition{ 0x7E0, 0x164, 0x49, false, 39, 2, 0, 25.0, 0.0, 4, "HV Target Engine Speed" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x165, 0x49 }, UdsDefinition{ 0x7E0, 0x165, 0x49, false, 58, 3, 0, 1.0, -32768.0, 4, "Actual Engine Torque" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x166, 0x49 }, UdsDefinition{ 0x7E0, 0x166, 0x49, false, 52, 5, 0, 1.0, 0.0, 4, "Engine Run Time" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x167, 0x49 }, UdsDefinition{ 0x7E0, 0x167, 0x49, false, 52, 6, 0, 0.1, 0.0, 4, "Request Engine Run Time" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x168, 0x49 }, UdsDefinition{ 0x7E0, 0x168, 0x49, false, 52, 7, 0, 0.1, 0.0, 4, "Judge Time Engine Ignition" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x169, 0x49 }, UdsDefinition{ 0x7E0, 0x169, 0x49, false, 52, 8, 0, 0.1, 0.0, 4, "Judge Time Engine Output" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x16A, 0x49 }, UdsDefinition{ 0x7E0, 0x16A, 0x49, false, 27, 9, 0, 0.001220703125, 0.0, 4, "ISC Learning Value" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x16B, 0x49 }, UdsDefinition{ 0x7E0, 0x16B, 0x49, false, 0, 11, 7, 4, "Engine Independent Control", 0, "Not Opr" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x16B, 0x49 }, UdsDefinition{ 0x7E0, 0x16B, 0x49, false, 0, 11, 7, 4, "Engine Independent Control", 1, "Operate" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x16C, 0x49 }, UdsDefinition{ 0x7E0, 0x16C, 0x49, false, 0, 11, 6, 4, "Request Warm-up", 0, "Not Req" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x16C, 0x49 }, UdsDefinition{ 0x7E0, 0x16C, 0x49, false, 0, 11, 6, 4, "Request Warm-up", 1, "Request" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x16D, 0x49 }, UdsDefinition{ 0x7E0, 0x16D, 0x49, false, 0, 11, 5, 4, "Racing Operation", 0, "Not Opr" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x16D, 0x49 }, UdsDefinition{ 0x7E0, 0x16D, 0x49, false, 0, 11, 5, 4, "Racing Operation", 1, "Operate" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x16E, 0x49 }, UdsDefinition{ 0x7E0, 0x16E, 0x49, false, 0, 11, 4, 4, "Engine Independent", 0, "Not Opr" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x16E, 0x49 }, UdsDefinition{ 0x7E0, 0x16E, 0x49, false, 0, 11, 4, 4, "Engine Independent", 1, "Operate" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x16F, 0x49 }, UdsDefinition{ 0x7E0, 0x16F, 0x49, false, 0, 11, 3, 4, "F/C for Engine Stop Req", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x16F, 0x49 }, UdsDefinition{ 0x7E0, 0x16F, 0x49, false, 0, 11, 3, 4, "F/C for Engine Stop Req", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x170, 0x49 }, UdsDefinition{ 0x7E0, 0x170, 0x49, false, 0, 11, 2, 4, "ISC Learning", 0, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x170, 0x49 }, UdsDefinition{ 0x7E0, 0x170, 0x49, false, 0, 11, 2, 4, "ISC Learning", 1, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x171, 0x49 }, UdsDefinition{ 0x7E0, 0x171, 0x49, false, 0, 11, 1, 4, "Fuel Level", 0, "Empty" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x171, 0x49 }, UdsDefinition{ 0x7E0, 0x171, 0x49, false, 0, 11, 1, 4, "Fuel Level", 1, "Not Emp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x455, 0x4A }, UdsDefinition{ 0x7E0, 0x455, 0x4A, false, 48, 0, 0, 0.001220703125, 0.0, 4, "AF Sensor Learning Value B1S2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x46A, 0x4B }, UdsDefinition{ 0x7E0, 0x46A, 0x4B, false, 0, 0, 0, 1.0, 0.0, 4, "Reductant Level" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x46B, 0x4B }, UdsDefinition{ 0x7E0, 0x46B, 0x4B, false, 57, 1, 0, 1.0, -40.0, 4, "Reductant Temperature" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x46C, 0x4B }, UdsDefinition{ 0x7E0, 0x46C, 0x4B, false, 34, 2, 0, 0.1, -3276.8, 4, "Reductant Pressure" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x46D, 0x4B }, UdsDefinition{ 0x7E0, 0x46D, 0x4B, false, 39, 4, 0, 1.0, 0.0, 4, "Reductant Pump Speed" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x46E, 0x4B }, UdsDefinition{ 0x7E0, 0x46E, 0x4B, false, 0, 8, 0, 4, "Reductant Injection Mode", 0, "-" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x46E, 0x4B }, UdsDefinition{ 0x7E0, 0x46E, 0x4B, false, 0, 8, 0, 4, "Reductant Injection Mode", 1, "-" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x46E, 0x4B }, UdsDefinition{ 0x7E0, 0x46E, 0x4B, false, 0, 8, 0, 4, "Reductant Injection Mode", 2, "-" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x46E, 0x4B }, UdsDefinition{ 0x7E0, 0x46E, 0x4B, false, 0, 8, 0, 4, "Reductant Injection Mode", 3, "Mode3" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x46F, 0x4B }, UdsDefinition{ 0x7E0, 0x46F, 0x4B, false, 45, 9, 0, 0.05, 0.0, 4, "Reductant Injection Value" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x470, 0x4B }, UdsDefinition{ 0x7E0, 0x470, 0x4B, false, 32, 11, 0, 1.0, 0.0, 4, "Engine Exhaust NOx Density" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x471, 0x4B }, UdsDefinition{ 0x7E0, 0x471, 0x4B, false, 57, 13, 0, 0.1, -40.0, 4, "SCR Temperature" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x472, 0x4B }, UdsDefinition{ 0x7E0, 0x472, 0x4B, false, 0, 15, 0, 1.0, 0.0, 4, "Catalyst Thermal Degradation Count" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x473, 0x4B }, UdsDefinition{ 0x7E0, 0x473, 0x4B, false, 0, 19, 7, 4, "Reductant Injection Value Restraint Control", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x473, 0x4B }, UdsDefinition{ 0x7E0, 0x473, 0x4B, false, 0, 19, 7, 4, "Reductant Injection Value Restraint Control", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x474, 0x4B }, UdsDefinition{ 0x7E0, 0x474, 0x4B, false, 0, 19, 6, 4, "SCR NOx Purge High Efficiency Temp", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x474, 0x4B }, UdsDefinition{ 0x7E0, 0x474, 0x4B, false, 0, 19, 6, 4, "SCR NOx Purge High Efficiency Temp", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x475, 0x4B }, UdsDefinition{ 0x7E0, 0x475, 0x4B, false, 0, 19, 4, 4, "Reductant Tank Heater", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x475, 0x4B }, UdsDefinition{ 0x7E0, 0x475, 0x4B, false, 0, 19, 4, 4, "Reductant Tank Heater", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x476, 0x4B }, UdsDefinition{ 0x7E0, 0x476, 0x4B, false, 0, 19, 3, 4, "Reductant Pipe Heater", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x476, 0x4B }, UdsDefinition{ 0x7E0, 0x476, 0x4B, false, 0, 19, 3, 4, "Reductant Pipe Heater", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x477, 0x4B }, UdsDefinition{ 0x7E0, 0x477, 0x4B, false, 0, 19, 5, 4, "NOx Sensor Active Status", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x477, 0x4B }, UdsDefinition{ 0x7E0, 0x477, 0x4B, false, 0, 19, 5, 4, "NOx Sensor Active Status", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x516, 0x4B }, UdsDefinition{ 0x7E0, 0x516, 0x4B, false, 0, 19, 2, 4, "Fr-NOx Sensor Active Status", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x516, 0x4B }, UdsDefinition{ 0x7E0, 0x516, 0x4B, false, 0, 19, 2, 4, "Fr-NOx Sensor Active Status", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x517, 0x4B }, UdsDefinition{ 0x7E0, 0x517, 0x4B, false, 0, 19, 1, 4, "Fr-NOx Sensor Carrying Request", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x517, 0x4B }, UdsDefinition{ 0x7E0, 0x517, 0x4B, false, 0, 19, 1, 4, "Fr-NOx Sensor Carrying Request", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x518, 0x4B }, UdsDefinition{ 0x7E0, 0x518, 0x4B, false, 0, 19, 0, 4, "NOx Sensor Carrying Request", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x518, 0x4B }, UdsDefinition{ 0x7E0, 0x518, 0x4B, false, 0, 19, 0, 4, "NOx Sensor Carrying Request", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x478, 0x4B }, UdsDefinition{ 0x7E0, 0x478, 0x4B, false, 52, 20, 0, 1.0, 0.0, 4, "NOx Sensor Cooling Time" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x519, 0x4B }, UdsDefinition{ 0x7E0, 0x519, 0x4B, false, 52, 22, 0, 1.0, 0.0, 4, "Fr-NOx Sensor Cooling Time" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51A, 0x4B }, UdsDefinition{ 0x7E0, 0x51A, 0x4B, false, 23, 24, 0, 0.001, 0.0, 4, "Reductant Replenishment Possible Value" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51B, 0x4B }, UdsDefinition{ 0x7E0, 0x51B, 0x4B, false, 0, 26, 0, 4, "Status of NOx Reduction Efficiency", 0, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51B, 0x4B }, UdsDefinition{ 0x7E0, 0x51B, 0x4B, false, 0, 26, 0, 4, "Status of NOx Reduction Efficiency", 1, "Caution" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51B, 0x4B }, UdsDefinition{ 0x7E0, 0x51B, 0x4B, false, 0, 26, 0, 4, "Status of NOx Reduction Efficiency", 2, "Warning" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51B, 0x4B }, UdsDefinition{ 0x7E0, 0x51B, 0x4B, false, 0, 26, 0, 4, "Status of NOx Reduction Efficiency", 3, "Danger" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51C, 0x4B }, UdsDefinition{ 0x7E0, 0x51C, 0x4B, false, 0, 27, 0, 4, "Status of Fr-NOx Sensor Lambda Detection Unit", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51C, 0x4B }, UdsDefinition{ 0x7E0, 0x51C, 0x4B, false, 0, 27, 0, 4, "Status of Fr-NOx Sensor Lambda Detection Unit", 1, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51C, 0x4B }, UdsDefinition{ 0x7E0, 0x51C, 0x4B, false, 0, 27, 0, 4, "Status of Fr-NOx Sensor Lambda Detection Unit", 2, "Abnormal(Open)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51C, 0x4B }, UdsDefinition{ 0x7E0, 0x51C, 0x4B, false, 0, 27, 0, 4, "Status of Fr-NOx Sensor Lambda Detection Unit", 3, "Unknown" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51D, 0x4B }, UdsDefinition{ 0x7E0, 0x51D, 0x4B, false, 0, 28, 0, 4, "Status of Fr-NOx Sensor NOx Detection Unit", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51D, 0x4B }, UdsDefinition{ 0x7E0, 0x51D, 0x4B, false, 0, 28, 0, 4, "Status of Fr-NOx Sensor NOx Detection Unit", 1, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51D, 0x4B }, UdsDefinition{ 0x7E0, 0x51D, 0x4B, false, 0, 28, 0, 4, "Status of Fr-NOx Sensor NOx Detection Unit", 2, "Abnormal(Open)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51D, 0x4B }, UdsDefinition{ 0x7E0, 0x51D, 0x4B, false, 0, 28, 0, 4, "Status of Fr-NOx Sensor NOx Detection Unit", 3, "Unknown" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51E, 0x4B }, UdsDefinition{ 0x7E0, 0x51E, 0x4B, false, 0, 29, 0, 4, "Status of Fr-NOx Sensor", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51E, 0x4B }, UdsDefinition{ 0x7E0, 0x51E, 0x4B, false, 0, 29, 0, 4, "Status of Fr-NOx Sensor", 1, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51E, 0x4B }, UdsDefinition{ 0x7E0, 0x51E, 0x4B, false, 0, 29, 0, 4, "Status of Fr-NOx Sensor", 2, "Abnormal(GND Short)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51E, 0x4B }, UdsDefinition{ 0x7E0, 0x51E, 0x4B, false, 0, 29, 0, 4, "Status of Fr-NOx Sensor", 3, "Abnormal(BATT Short)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51E, 0x4B }, UdsDefinition{ 0x7E0, 0x51E, 0x4B, false, 0, 29, 0, 4, "Status of Fr-NOx Sensor", 4, "Abnormal(Open)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51F, 0x4B }, UdsDefinition{ 0x7E0, 0x51F, 0x4B, false, 0, 30, 0, 4, "Status of Fr-NOx Sensor Heater", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51F, 0x4B }, UdsDefinition{ 0x7E0, 0x51F, 0x4B, false, 0, 30, 0, 4, "Status of Fr-NOx Sensor Heater", 1, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51F, 0x4B }, UdsDefinition{ 0x7E0, 0x51F, 0x4B, false, 0, 30, 0, 4, "Status of Fr-NOx Sensor Heater", 2, "Abnormal(GND Short)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51F, 0x4B }, UdsDefinition{ 0x7E0, 0x51F, 0x4B, false, 0, 30, 0, 4, "Status of Fr-NOx Sensor Heater", 3, "Abnormal(BATT Short)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x51F, 0x4B }, UdsDefinition{ 0x7E0, 0x51F, 0x4B, false, 0, 30, 0, 4, "Status of Fr-NOx Sensor Heater", 4, "Abnormal(Open)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x520, 0x4B }, UdsDefinition{ 0x7E0, 0x520, 0x4B, false, 0, 31, 0, 4, "Fr-NOx Sensor NOx Active Status (SCU)", 0, "Unused" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x520, 0x4B }, UdsDefinition{ 0x7E0, 0x520, 0x4B, false, 0, 31, 0, 4, "Fr-NOx Sensor NOx Active Status (SCU)", 1, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x520, 0x4B }, UdsDefinition{ 0x7E0, 0x520, 0x4B, false, 0, 31, 0, 4, "Fr-NOx Sensor NOx Active Status (SCU)", 2, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x520, 0x4B }, UdsDefinition{ 0x7E0, 0x520, 0x4B, false, 0, 31, 0, 4, "Fr-NOx Sensor NOx Active Status (SCU)", 3, "Unused" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x521, 0x4B }, UdsDefinition{ 0x7E0, 0x521, 0x4B, false, 0, 32, 0, 4, "Fr-NOx Sensor A/F Active Status (SCU)", 0, "Unused" });
// }
// void init_udsDefinitions_part16() {
//     udsMap.emplace(uds_key{ 0x7E0, 0x521, 0x4B }, UdsDefinition{ 0x7E0, 0x521, 0x4B, false, 0, 32, 0, 4, "Fr-NOx Sensor A/F Active Status (SCU)", 1, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x521, 0x4B }, UdsDefinition{ 0x7E0, 0x521, 0x4B, false, 0, 32, 0, 4, "Fr-NOx Sensor A/F Active Status (SCU)", 2, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x521, 0x4B }, UdsDefinition{ 0x7E0, 0x521, 0x4B, false, 0, 32, 0, 4, "Fr-NOx Sensor A/F Active Status (SCU)", 3, "Unused" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x522, 0x4B }, UdsDefinition{ 0x7E0, 0x522, 0x4B, false, 0, 33, 0, 4, "Fr-NOx Sensor Status Information", 0, "Control" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x522, 0x4B }, UdsDefinition{ 0x7E0, 0x522, 0x4B, false, 0, 33, 0, 4, "Fr-NOx Sensor Status Information", 1, "Standby" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x522, 0x4B }, UdsDefinition{ 0x7E0, 0x522, 0x4B, false, 0, 33, 0, 4, "Fr-NOx Sensor Status Information", 2, "OBD" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x523, 0x4B }, UdsDefinition{ 0x7E0, 0x523, 0x4B, false, 0, 34, 0, 4, "Status of Fr-NOx Sensor Power Supply Voltage", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x523, 0x4B }, UdsDefinition{ 0x7E0, 0x523, 0x4B, false, 0, 34, 0, 4, "Status of Fr-NOx Sensor Power Supply Voltage", 1, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x523, 0x4B }, UdsDefinition{ 0x7E0, 0x523, 0x4B, false, 0, 34, 0, 4, "Status of Fr-NOx Sensor Power Supply Voltage", 2, "Abnormal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x524, 0x4B }, UdsDefinition{ 0x7E0, 0x524, 0x4B, false, 0, 35, 0, 4, "Status of NOx Sensor Lambda Detection Unit", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x524, 0x4B }, UdsDefinition{ 0x7E0, 0x524, 0x4B, false, 0, 35, 0, 4, "Status of NOx Sensor Lambda Detection Unit", 1, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x524, 0x4B }, UdsDefinition{ 0x7E0, 0x524, 0x4B, false, 0, 35, 0, 4, "Status of NOx Sensor Lambda Detection Unit", 2, "Abnormal(Open)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x524, 0x4B }, UdsDefinition{ 0x7E0, 0x524, 0x4B, false, 0, 35, 0, 4, "Status of NOx Sensor Lambda Detection Unit", 3, "Unknown" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x525, 0x4B }, UdsDefinition{ 0x7E0, 0x525, 0x4B, false, 0, 36, 0, 4, "Status of NOx Sensor NOx Detection Unit", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x525, 0x4B }, UdsDefinition{ 0x7E0, 0x525, 0x4B, false, 0, 36, 0, 4, "Status of NOx Sensor NOx Detection Unit", 1, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x525, 0x4B }, UdsDefinition{ 0x7E0, 0x525, 0x4B, false, 0, 36, 0, 4, "Status of NOx Sensor NOx Detection Unit", 2, "Abnormal(Open)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x525, 0x4B }, UdsDefinition{ 0x7E0, 0x525, 0x4B, false, 0, 36, 0, 4, "Status of NOx Sensor NOx Detection Unit", 3, "Unknown" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x526, 0x4B }, UdsDefinition{ 0x7E0, 0x526, 0x4B, false, 0, 37, 0, 4, "Status of NOx Sensor", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x526, 0x4B }, UdsDefinition{ 0x7E0, 0x526, 0x4B, false, 0, 37, 0, 4, "Status of NOx Sensor", 1, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x526, 0x4B }, UdsDefinition{ 0x7E0, 0x526, 0x4B, false, 0, 37, 0, 4, "Status of NOx Sensor", 2, "Abnormal(GND Short)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x526, 0x4B }, UdsDefinition{ 0x7E0, 0x526, 0x4B, false, 0, 37, 0, 4, "Status of NOx Sensor", 3, "Abnormal(BATT Short)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x526, 0x4B }, UdsDefinition{ 0x7E0, 0x526, 0x4B, false, 0, 37, 0, 4, "Status of NOx Sensor", 4, "Abnormal(Open)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x527, 0x4B }, UdsDefinition{ 0x7E0, 0x527, 0x4B, false, 0, 38, 0, 4, "Status of NOx Sensor Heater", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x527, 0x4B }, UdsDefinition{ 0x7E0, 0x527, 0x4B, false, 0, 38, 0, 4, "Status of NOx Sensor Heater", 1, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x527, 0x4B }, UdsDefinition{ 0x7E0, 0x527, 0x4B, false, 0, 38, 0, 4, "Status of NOx Sensor Heater", 2, "Abnormal(GND Short)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x527, 0x4B }, UdsDefinition{ 0x7E0, 0x527, 0x4B, false, 0, 38, 0, 4, "Status of NOx Sensor Heater", 3, "Abnormal(BATT Short)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x527, 0x4B }, UdsDefinition{ 0x7E0, 0x527, 0x4B, false, 0, 38, 0, 4, "Status of NOx Sensor Heater", 4, "Abnormal(Open)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x528, 0x4B }, UdsDefinition{ 0x7E0, 0x528, 0x4B, false, 0, 39, 0, 4, "NOx Sensor NOx Active Status (SCU)", 0, "Unused" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x528, 0x4B }, UdsDefinition{ 0x7E0, 0x528, 0x4B, false, 0, 39, 0, 4, "NOx Sensor NOx Active Status (SCU)", 1, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x528, 0x4B }, UdsDefinition{ 0x7E0, 0x528, 0x4B, false, 0, 39, 0, 4, "NOx Sensor NOx Active Status (SCU)", 2, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x528, 0x4B }, UdsDefinition{ 0x7E0, 0x528, 0x4B, false, 0, 39, 0, 4, "NOx Sensor NOx Active Status (SCU)", 3, "Unused" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x529, 0x4B }, UdsDefinition{ 0x7E0, 0x529, 0x4B, false, 0, 40, 0, 4, "NOx Sensor A/F Active Status (SCU)", 0, "Unused" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x529, 0x4B }, UdsDefinition{ 0x7E0, 0x529, 0x4B, false, 0, 40, 0, 4, "NOx Sensor A/F Active Status (SCU)", 1, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x529, 0x4B }, UdsDefinition{ 0x7E0, 0x529, 0x4B, false, 0, 40, 0, 4, "NOx Sensor A/F Active Status (SCU)", 2, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x529, 0x4B }, UdsDefinition{ 0x7E0, 0x529, 0x4B, false, 0, 40, 0, 4, "NOx Sensor A/F Active Status (SCU)", 3, "Unused" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x52A, 0x4B }, UdsDefinition{ 0x7E0, 0x52A, 0x4B, false, 0, 41, 0, 4, "NOx Sensor Status Information", 0, "Control" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x52A, 0x4B }, UdsDefinition{ 0x7E0, 0x52A, 0x4B, false, 0, 41, 0, 4, "NOx Sensor Status Information", 1, "Standby" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x52A, 0x4B }, UdsDefinition{ 0x7E0, 0x52A, 0x4B, false, 0, 41, 0, 4, "NOx Sensor Status Information", 2, "OBD" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x52B, 0x4B }, UdsDefinition{ 0x7E0, 0x52B, 0x4B, false, 0, 42, 0, 4, "Status of NOx Sensor Power Supply Voltage", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x52B, 0x4B }, UdsDefinition{ 0x7E0, 0x52B, 0x4B, false, 0, 42, 0, 4, "Status of NOx Sensor Power Supply Voltage", 1, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x52B, 0x4B }, UdsDefinition{ 0x7E0, 0x52B, 0x4B, false, 0, 42, 0, 4, "Status of NOx Sensor Power Supply Voltage", 2, "Abnormal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x52C, 0x4B }, UdsDefinition{ 0x7E0, 0x52C, 0x4B, false, 33, 43, 0, 0.5, 0.0, 4, "PM Sensor Heater Duty" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x52D, 0x4B }, UdsDefinition{ 0x7E0, 0x52D, 0x4B, false, 48, 44, 0, 0.1, 0.0, 4, "PM Sensor Power Supply Voltage" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x52E, 0x4B }, UdsDefinition{ 0x7E0, 0x52E, 0x4B, false, 11, 45, 0, 0.5, 0.0, 4, "PM Sensor Output Current" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x52F, 0x4B }, UdsDefinition{ 0x7E0, 0x52F, 0x4B, false, 11, 46, 0, 0.5, 0.0, 4, "PM Sensor Maximum Current Value" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x530, 0x4B }, UdsDefinition{ 0x7E0, 0x530, 0x4B, false, 57, 47, 0, 0.625, -40.0, 4, "PM Sensor Element Temperature" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x531, 0x4B }, UdsDefinition{ 0x7E0, 0x531, 0x4B, false, 0, 48, 7, 4, "Status of PM Sensor IDE Circuit Diagnosis", 0, "Diagnosis Not Tested" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x531, 0x4B }, UdsDefinition{ 0x7E0, 0x531, 0x4B, false, 0, 48, 7, 4, "Status of PM Sensor IDE Circuit Diagnosis", 1, "Diagnosis Tested" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x532, 0x4B }, UdsDefinition{ 0x7E0, 0x532, 0x4B, false, 0, 48, 6, 4, "Status of PM Sensor IDE Circuit", 0, "No Error Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x532, 0x4B }, UdsDefinition{ 0x7E0, 0x532, 0x4B, false, 0, 48, 6, 4, "Status of PM Sensor IDE Circuit", 1, "Error Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x533, 0x4B }, UdsDefinition{ 0x7E0, 0x533, 0x4B, false, 0, 48, 5, 4, "Status of PM Sensor IDE Diagnosis", 0, "Diagnosis Not Tested" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x533, 0x4B }, UdsDefinition{ 0x7E0, 0x533, 0x4B, false, 0, 48, 5, 4, "Status of PM Sensor IDE Diagnosis", 1, "Diagnosis Tested" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x534, 0x4B }, UdsDefinition{ 0x7E0, 0x534, 0x4B, false, 0, 48, 4, 4, "Status of PM Sensor IDE", 0, "No Error Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x534, 0x4B }, UdsDefinition{ 0x7E0, 0x534, 0x4B, false, 0, 48, 4, 4, "Status of PM Sensor IDE", 1, "Error Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x535, 0x4B }, UdsDefinition{ 0x7E0, 0x535, 0x4B, false, 0, 48, 3, 4, "Status of PM Sensor Heater Diagnosis", 0, "Diagnosis Not Tested" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x535, 0x4B }, UdsDefinition{ 0x7E0, 0x535, 0x4B, false, 0, 48, 3, 4, "Status of PM Sensor Heater Diagnosis", 1, "Diagnosis Tested" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x536, 0x4B }, UdsDefinition{ 0x7E0, 0x536, 0x4B, false, 0, 48, 2, 4, "Status of PM Sensor Heater", 0, "No Error Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x536, 0x4B }, UdsDefinition{ 0x7E0, 0x536, 0x4B, false, 0, 48, 2, 4, "Status of PM Sensor Heater", 1, "Error Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x537, 0x4B }, UdsDefinition{ 0x7E0, 0x537, 0x4B, false, 0, 48, 1, 4, "Status of PM Sensor IDE (+ Side)", 0, "No Error Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x537, 0x4B }, UdsDefinition{ 0x7E0, 0x537, 0x4B, false, 0, 48, 1, 4, "Status of PM Sensor IDE (+ Side)", 1, "Error Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x538, 0x4B }, UdsDefinition{ 0x7E0, 0x538, 0x4B, false, 0, 48, 0, 4, "Status of PM Sensor IDE Diagnosis (+ Side)", 0, "Diagnosis Not Tested" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x538, 0x4B }, UdsDefinition{ 0x7E0, 0x538, 0x4B, false, 0, 48, 0, 4, "Status of PM Sensor IDE Diagnosis (+ Side)", 1, "Diagnosis Tested" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x539, 0x4B }, UdsDefinition{ 0x7E0, 0x539, 0x4B, false, 0, 49, 7, 4, "Status of PM Sensor Rejuvenate Finish", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x539, 0x4B }, UdsDefinition{ 0x7E0, 0x539, 0x4B, false, 0, 49, 7, 4, "Status of PM Sensor Rejuvenate Finish", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x53A, 0x4B }, UdsDefinition{ 0x7E0, 0x53A, 0x4B, false, 0, 49, 6, 4, "Status of PM Sensor Rejuvenate", 0, "Regeneration Not Active" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x53A, 0x4B }, UdsDefinition{ 0x7E0, 0x53A, 0x4B, false, 0, 49, 6, 4, "Status of PM Sensor Rejuvenate", 1, "Regeneration Active" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x53B, 0x4B }, UdsDefinition{ 0x7E0, 0x53B, 0x4B, false, 0, 49, 5, 4, "Status of PM Sensor Temperature", 0, "No Error Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x53B, 0x4B }, UdsDefinition{ 0x7E0, 0x53B, 0x4B, false, 0, 49, 5, 4, "Status of PM Sensor Temperature", 1, "Error Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x53C, 0x4B }, UdsDefinition{ 0x7E0, 0x53C, 0x4B, false, 0, 49, 4, 4, "Status of PM Sensor IDE (- Side)", 0, "No Error Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x53C, 0x4B }, UdsDefinition{ 0x7E0, 0x53C, 0x4B, false, 0, 49, 4, 4, "Status of PM Sensor IDE (- Side)", 1, "Error Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x53D, 0x4B }, UdsDefinition{ 0x7E0, 0x53D, 0x4B, false, 0, 49, 3, 4, "Status of PM Sensor Measurement", 0, "Measurement Not Active" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x53D, 0x4B }, UdsDefinition{ 0x7E0, 0x53D, 0x4B, false, 0, 49, 3, 4, "Status of PM Sensor Measurement", 1, "Measurement Active" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x53E, 0x4B }, UdsDefinition{ 0x7E0, 0x53E, 0x4B, false, 0, 49, 2, 4, "Status of PM Sensor SCU Output Data", 0, "Sensor Values" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x53E, 0x4B }, UdsDefinition{ 0x7E0, 0x53E, 0x4B, false, 0, 49, 2, 4, "Status of PM Sensor SCU Output Data", 1, "Initial Values" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x53F, 0x4B }, UdsDefinition{ 0x7E0, 0x53F, 0x4B, false, 0, 49, 1, 4, "Status of PM Sensor SCU Operation", 0, "SCU Not Ready" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x53F, 0x4B }, UdsDefinition{ 0x7E0, 0x53F, 0x4B, false, 0, 49, 1, 4, "Status of PM Sensor SCU Operation", 1, "SCU Ready" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x540, 0x4B }, UdsDefinition{ 0x7E0, 0x540, 0x4B, false, 0, 49, 0, 4, "PM Sensor Clogged Diagnosis", 0, "Conditions Not Given" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x540, 0x4B }, UdsDefinition{ 0x7E0, 0x540, 0x4B, false, 0, 49, 0, 4, "PM Sensor Clogged Diagnosis", 1, "Conditions Given" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x541, 0x4B }, UdsDefinition{ 0x7E0, 0x541, 0x4B, false, 0, 50, 7, 4, "Status of PM Sensor Malfunction", 0, "Not Failure Mode" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x541, 0x4B }, UdsDefinition{ 0x7E0, 0x541, 0x4B, false, 0, 50, 7, 4, "Status of PM Sensor Malfunction", 1, "Failure Mode" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x542, 0x4B }, UdsDefinition{ 0x7E0, 0x542, 0x4B, false, 0, 50, 6, 4, "Status of PM Sensor Measurement Request", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x542, 0x4B }, UdsDefinition{ 0x7E0, 0x542, 0x4B, false, 0, 50, 6, 4, "Status of PM Sensor Measurement Request", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x543, 0x4B }, UdsDefinition{ 0x7E0, 0x543, 0x4B, false, 0, 50, 5, 4, "Status of PM Sensor Self Diagnosis Clear", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x543, 0x4B }, UdsDefinition{ 0x7E0, 0x543, 0x4B, false, 0, 50, 5, 4, "Status of PM Sensor Self Diagnosis Clear", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x544, 0x4B }, UdsDefinition{ 0x7E0, 0x544, 0x4B, false, 0, 50, 4, 4, "Status of PM Sensor Carrying Request", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x544, 0x4B }, UdsDefinition{ 0x7E0, 0x544, 0x4B, false, 0, 50, 4, 4, "Status of PM Sensor Carrying Request", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x545, 0x4B }, UdsDefinition{ 0x7E0, 0x545, 0x4B, false, 0, 50, 3, 4, "Status of PM Sensor Engine Operation", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x545, 0x4B }, UdsDefinition{ 0x7E0, 0x545, 0x4B, false, 0, 50, 3, 4, "Status of PM Sensor Engine Operation", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x546, 0x4B }, UdsDefinition{ 0x7E0, 0x546, 0x4B, false, 0, 50, 2, 4, "Status of PM Sensor Heater ON Malfunction", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x546, 0x4B }, UdsDefinition{ 0x7E0, 0x546, 0x4B, false, 0, 50, 2, 4, "Status of PM Sensor Heater ON Malfunction", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x547, 0x4B }, UdsDefinition{ 0x7E0, 0x547, 0x4B, false, 0, 50, 1, 4, "Status of PM Sensor Heater ON Diagnosis", 0, "Diagnosis Not Tested" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x547, 0x4B }, UdsDefinition{ 0x7E0, 0x547, 0x4B, false, 0, 50, 1, 4, "Status of PM Sensor Heater ON Diagnosis", 1, "Diagnosis Tested" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x548, 0x4B }, UdsDefinition{ 0x7E0, 0x548, 0x4B, false, 0, 50, 0, 4, "Status of PM Sensor Heater OFF Malfunction", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x548, 0x4B }, UdsDefinition{ 0x7E0, 0x548, 0x4B, false, 0, 50, 0, 4, "Status of PM Sensor Heater OFF Malfunction", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4FF, 0x4C }, UdsDefinition{ 0x7E0, 0x4FF, 0x4C, false, 0, 0, 7, 4, "Status of IG Switch", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4FF, 0x4C }, UdsDefinition{ 0x7E0, 0x4FF, 0x4C, false, 0, 0, 7, 4, "Status of IG Switch", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x500, 0x4C }, UdsDefinition{ 0x7E0, 0x500, 0x4C, false, 0, 0, 6, 4, "Status of Ready", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x500, 0x4C }, UdsDefinition{ 0x7E0, 0x500, 0x4C, false, 0, 0, 6, 4, "Status of Ready", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x501, 0x4C }, UdsDefinition{ 0x7E0, 0x501, 0x4C, false, 0, 0, 5, 4, "Status of WI Terminal Low Voltage Guard Determination", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x501, 0x4C }, UdsDefinition{ 0x7E0, 0x501, 0x4C, false, 0, 0, 5, 4, "Status of WI Terminal Low Voltage Guard Determination", 1, "ON" });
// }
// void init_udsDefinitions_part17() {
//     udsMap.emplace(uds_key{ 0x7E0, 0x502, 0x4C }, UdsDefinition{ 0x7E0, 0x502, 0x4C, false, 0, 0, 4, 4, "Status of +B Terminal Low Voltage Guard Determination", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x502, 0x4C }, UdsDefinition{ 0x7E0, 0x502, 0x4C, false, 0, 0, 4, 4, "Status of +B Terminal Low Voltage Guard Determination", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x503, 0x4C }, UdsDefinition{ 0x7E0, 0x503, 0x4C, false, 0, 0, 3, 4, "Status of STA Terminal Low Voltage Guard Determination", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x503, 0x4C }, UdsDefinition{ 0x7E0, 0x503, 0x4C, false, 0, 0, 3, 4, "Status of STA Terminal Low Voltage Guard Determination", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x504, 0x4C }, UdsDefinition{ 0x7E0, 0x504, 0x4C, false, 0, 0, 2, 4, "Status of IG Switch Terminal Low Voltage Guard Determination", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x504, 0x4C }, UdsDefinition{ 0x7E0, 0x504, 0x4C, false, 0, 0, 2, 4, "Status of IG Switch Terminal Low Voltage Guard Determination", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x505, 0x4C }, UdsDefinition{ 0x7E0, 0x505, 0x4C, false, 0, 1, 7, 4, "Status of Soak Timer Start", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x505, 0x4C }, UdsDefinition{ 0x7E0, 0x505, 0x4C, false, 0, 1, 7, 4, "Status of Soak Timer Start", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x506, 0x4C }, UdsDefinition{ 0x7E0, 0x506, 0x4C, false, 0, 1, 6, 4, "Soak Timer Start Request", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x506, 0x4C }, UdsDefinition{ 0x7E0, 0x506, 0x4C, false, 0, 1, 6, 4, "Soak Timer Start Request", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x507, 0x4C }, UdsDefinition{ 0x7E0, 0x507, 0x4C, false, 0, 1, 5, 4, "Status of Engine Start", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x507, 0x4C }, UdsDefinition{ 0x7E0, 0x507, 0x4C, false, 0, 1, 5, 4, "Status of Engine Start", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x508, 0x4C }, UdsDefinition{ 0x7E0, 0x508, 0x4C, false, 52, 2, 0, 9.375, 0.0, 4, "Soak IC Current Timer Value" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x509, 0x4C }, UdsDefinition{ 0x7E0, 0x509, 0x4C, false, 56, 4, 0, 65.536, 0.0, 4, "Soak Timer Clear" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x50A, 0x4C }, UdsDefinition{ 0x7E0, 0x50A, 0x4C, false, 0, 6, 0, 4, "Soak Timer Start History", 0, "Unknown" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x50A, 0x4C }, UdsDefinition{ 0x7E0, 0x50A, 0x4C, false, 0, 6, 0, 4, "Soak Timer Start History", 90, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x50A, 0x4C }, UdsDefinition{ 0x7E0, 0x50A, 0x4C, false, 0, 6, 0, 4, "Soak Timer Start History", 165, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x50B, 0x4C }, UdsDefinition{ 0x7E0, 0x50B, 0x4C, false, 53, 7, 0, 4, "Soak IC First Start Time", 0, "0" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x50B, 0x4C }, UdsDefinition{ 0x7E0, 0x50B, 0x4C, false, 53, 7, 0, 4, "Soak IC First Start Time", 1, "Unknown" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x50C, 0x4C }, UdsDefinition{ 0x7E0, 0x50C, 0x4C, false, 56, 8, 0, 65.536, 0.0, 4, "Main Relay ON Time after IG OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x50D, 0x4C }, UdsDefinition{ 0x7E0, 0x50D, 0x4C, false, 56, 10, 0, 65.536, 0.0, 4, "Main Relay ON Time after IG OFF of Previous Trip" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x50E, 0x4C }, UdsDefinition{ 0x7E0, 0x50E, 0x4C, false, 56, 12, 0, 65.536, 0.0, 4, "Main Relay ON Time after Soak Start of Previous Trip" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x50F, 0x4C }, UdsDefinition{ 0x7E0, 0x50F, 0x4C, false, 0, 14, 0, 1.0, 0.0, 4, "Soak Start Count" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1E4, 0x51 }, UdsDefinition{ 0x7E0, 0x1E4, 0x51, false, 56, 0, 0, 10.0, 0.0, 4, "Engine Starting Time" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x172, 0x51 }, UdsDefinition{ 0x7E0, 0x172, 0x51, false, 39, 2, 0, 0.78125, 0.0, 4, "Engine Speed (Starter Off)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x173, 0x51 }, UdsDefinition{ 0x7E0, 0x173, 0x51, false, 0, 4, 0, 1.0, 0.0, 4, "Starter Count" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x174, 0x51 }, UdsDefinition{ 0x7E0, 0x174, 0x51, false, 13, 5, 0, 0.01, 0.0, 4, "Run Dist of Previous Trip" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1E5, 0x51 }, UdsDefinition{ 0x7E0, 0x1E5, 0x51, false, 57, 7, 0, 1.0, -40.0, 4, "Previous Trip Coolant Temp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1E6, 0x51 }, UdsDefinition{ 0x7E0, 0x1E6, 0x51, false, 57, 8, 0, 1.0, -40.0, 4, "Previous Trip Intake Temp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1E7, 0x51 }, UdsDefinition{ 0x7E0, 0x1E7, 0x51, false, 57, 9, 0, 1.0, -40.0, 4, "Engine Oil Temperature" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1E8, 0x51 }, UdsDefinition{ 0x7E0, 0x1E8, 0x51, false, 57, 10, 0, 1.0, -40.0, 4, "Previous Trip Eng Oil Temp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1E9, 0x51 }, UdsDefinition{ 0x7E0, 0x1E9, 0x51, false, 57, 11, 0, 1.0, -40.0, 4, "Ambient Temp for A/C" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1EA, 0x51 }, UdsDefinition{ 0x7E0, 0x1EA, 0x51, false, 57, 12, 0, 1.0, -40.0, 4, "Previous Trip Ambient Temp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1EB, 0x51 }, UdsDefinition{ 0x7E0, 0x1EB, 0x51, false, 5, 13, 0, 0.00762939453125, 0.0, 4, "Throttle Position" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1EC, 0x51 }, UdsDefinition{ 0x7E0, 0x1EC, 0x51, false, 27, 15, 0, 0.001220703125, 0.0, 4, "ISC Flow" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1ED, 0x51 }, UdsDefinition{ 0x7E0, 0x1ED, 0x51, false, 5, 17, 0, 0.00762939453125, 0.0, 4, "ISC Position" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1EE, 0x51 }, UdsDefinition{ 0x7E0, 0x1EE, 0x51, false, 27, 21, 0, 0.001220703125, -40.0, 4, "ISC Feedback Value" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1EF, 0x51 }, UdsDefinition{ 0x7E0, 0x1EF, 0x51, false, 27, 23, 0, 0.001220703125, -40.0, 4, "ISC Learning Value" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1F0, 0x51 }, UdsDefinition{ 0x7E0, 0x1F0, 0x51, false, 27, 25, 0, 0.001220703125, -40.0, 4, "Electric Load Feedback Val" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x175, 0x51 }, UdsDefinition{ 0x7E0, 0x175, 0x51, false, 62, 27, 0, 0.15625, 0.0, 4, "Electric Duty Feedback Value" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1F1, 0x51 }, UdsDefinition{ 0x7E0, 0x1F1, 0x51, false, 27, 28, 0, 0.001220703125, -40.0, 4, "Air Conditioner FB Val" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x176, 0x51 }, UdsDefinition{ 0x7E0, 0x176, 0x51, false, 62, 30, 0, 0.15625, 0.0, 4, "A/C Duty Feedback Value" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1F2, 0x51 }, UdsDefinition{ 0x7E0, 0x1F2, 0x51, false, 27, 31, 0, 0.001220703125, -40.0, 4, "PS Feedback Val" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x177, 0x51 }, UdsDefinition{ 0x7E0, 0x177, 0x51, false, 62, 33, 0, 0.15625, 0.0, 4, "PS Duty Feedback Value" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x178, 0x51 }, UdsDefinition{ 0x7E0, 0x178, 0x51, false, 62, 34, 0, 0.15625, 0.0, 4, "Idle Injection Volume (Min)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x179, 0x51 }, UdsDefinition{ 0x7E0, 0x179, 0x51, false, 0, 35, 1, 4, "After Glow", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x179, 0x51 }, UdsDefinition{ 0x7E0, 0x179, 0x51, false, 0, 35, 1, 4, "After Glow", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x17A, 0x51 }, UdsDefinition{ 0x7E0, 0x17A, 0x51, false, 0, 35, 0, 4, "Pre Glow", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x17A, 0x51 }, UdsDefinition{ 0x7E0, 0x17A, 0x51, false, 0, 35, 0, 4, "Pre Glow", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1F3, 0x51 }, UdsDefinition{ 0x7E0, 0x1F3, 0x51, false, 0, 35, 7, 4, "N Range Status", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1F3, 0x51 }, UdsDefinition{ 0x7E0, 0x1F3, 0x51, false, 0, 35, 7, 4, "N Range Status", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1F4, 0x51 }, UdsDefinition{ 0x7E0, 0x1F4, 0x51, false, 0, 35, 6, 4, "Neutral Control", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1F4, 0x51 }, UdsDefinition{ 0x7E0, 0x1F4, 0x51, false, 0, 35, 6, 4, "Neutral Control", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1F5, 0x51 }, UdsDefinition{ 0x7E0, 0x1F5, 0x51, false, 0, 35, 5, 4, "Low Revolution Control", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1F5, 0x51 }, UdsDefinition{ 0x7E0, 0x1F5, 0x51, false, 0, 35, 5, 4, "Low Revolution Control", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1F6, 0x51 }, UdsDefinition{ 0x7E0, 0x1F6, 0x51, false, 0, 35, 4, 4, "VVT Advance Fail", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1F6, 0x51 }, UdsDefinition{ 0x7E0, 0x1F6, 0x51, false, 0, 35, 4, 4, "VVT Advance Fail", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1F7, 0x51 }, UdsDefinition{ 0x7E0, 0x1F7, 0x51, false, 0, 35, 3, 4, "Low Rev for Eng Start", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1F7, 0x51 }, UdsDefinition{ 0x7E0, 0x1F7, 0x51, false, 0, 35, 3, 4, "Low Rev for Eng Start", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1F8, 0x51 }, UdsDefinition{ 0x7E0, 0x1F8, 0x51, false, 0, 35, 2, 4, "Engine Start Hesitation", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1F8, 0x51 }, UdsDefinition{ 0x7E0, 0x1F8, 0x51, false, 0, 35, 2, 4, "Engine Start Hesitation", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1F9, 0x51 }, UdsDefinition{ 0x7E0, 0x1F9, 0x51, false, 0, 36, 7, 4, "Immobiliser Fuel Cut", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1F9, 0x51 }, UdsDefinition{ 0x7E0, 0x1F9, 0x51, false, 0, 36, 7, 4, "Immobiliser Fuel Cut", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x243, 0x51 }, UdsDefinition{ 0x7E0, 0x243, 0x51, false, 0, 36, 6, 4, "Immobiliser Fuel Cut History", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x243, 0x51 }, UdsDefinition{ 0x7E0, 0x243, 0x51, false, 0, 36, 6, 4, "Immobiliser Fuel Cut History", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2D9, 0x51 }, UdsDefinition{ 0x7E0, 0x2D9, 0x51, false, 0, 36, 5, 4, "Fuel Cut Bank 2 for Idle", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2D9, 0x51 }, UdsDefinition{ 0x7E0, 0x2D9, 0x51, false, 0, 36, 5, 4, "Fuel Cut Bank 2 for Idle", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2DA, 0x51 }, UdsDefinition{ 0x7E0, 0x2DA, 0x51, false, 0, 37, 0, 4, "Fuel Cut Info Bank 2 for Idle", 0, "0_NG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2DA, 0x51 }, UdsDefinition{ 0x7E0, 0x2DA, 0x51, false, 0, 37, 0, 4, "Fuel Cut Info Bank 2 for Idle", 1, "1_No Mal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2DA, 0x51 }, UdsDefinition{ 0x7E0, 0x2DA, 0x51, false, 0, 37, 0, 4, "Fuel Cut Info Bank 2 for Idle", 2, "2_Auto Mode" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2DA, 0x51 }, UdsDefinition{ 0x7E0, 0x2DA, 0x51, false, 0, 37, 0, 4, "Fuel Cut Info Bank 2 for Idle", 3, "3_Temp OK" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2DA, 0x51 }, UdsDefinition{ 0x7E0, 0x2DA, 0x51, false, 0, 37, 0, 4, "Fuel Cut Info Bank 2 for Idle", 4, "4_Postulate" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2DA, 0x51 }, UdsDefinition{ 0x7E0, 0x2DA, 0x51, false, 0, 37, 0, 4, "Fuel Cut Info Bank 2 for Idle", 5, "5_Other Sys OK" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2DA, 0x51 }, UdsDefinition{ 0x7E0, 0x2DA, 0x51, false, 0, 37, 0, 4, "Fuel Cut Info Bank 2 for Idle", 6, "6_Idle OK" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2DA, 0x51 }, UdsDefinition{ 0x7E0, 0x2DA, 0x51, false, 0, 37, 0, 4, "Fuel Cut Info Bank 2 for Idle", 7, "7_ASG OK" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2DA, 0x51 }, UdsDefinition{ 0x7E0, 0x2DA, 0x51, false, 0, 37, 0, 4, "Fuel Cut Info Bank 2 for Idle", 8, "8_CAT OK" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2DA, 0x51 }, UdsDefinition{ 0x7E0, 0x2DA, 0x51, false, 0, 37, 0, 4, "Fuel Cut Info Bank 2 for Idle", 9, "9_FC OK" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2DB, 0x51 }, UdsDefinition{ 0x7E0, 0x2DB, 0x51, false, 58, 38, 0, 0.03125, -1024.0, 4, "ISC Feedback Learning Torque" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2DC, 0x51 }, UdsDefinition{ 0x7E0, 0x2DC, 0x51, false, 58, 40, 0, 0.03125, -1024.0, 4, "ISC Total AUXS Torque" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2DD, 0x51 }, UdsDefinition{ 0x7E0, 0x2DD, 0x51, false, 58, 42, 0, 0.03125, -1024.0, 4, "ISC Feedback Torque" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2DE, 0x51 }, UdsDefinition{ 0x7E0, 0x2DE, 0x51, false, 58, 44, 0, 0.03125, -1024.0, 4, "ISC Feedback Torque(Recent)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2DF, 0x51 }, UdsDefinition{ 0x7E0, 0x2DF, 0x51, false, 58, 46, 0, 0.03125, -1024.0, 4, "ISC AUXS Torque(Alternator)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2E0, 0x51 }, UdsDefinition{ 0x7E0, 0x2E0, 0x51, false, 58, 48, 0, 0.03125, -1024.0, 4, "ISC AUXS Torque(Air Conditioner)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2E1, 0x51 }, UdsDefinition{ 0x7E0, 0x2E1, 0x51, false, 27, 50, 0, 0.001220703125, -40.0, 4, "Throttle Air Flow F/B Value" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x31C, 0x51 }, UdsDefinition{ 0x7E0, 0x31C, 0x51, false, 56, 52, 0, 100.0, 0.0, 4, "IG-ON Time" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x31D, 0x51 }, UdsDefinition{ 0x7E0, 0x31D, 0x51, false, 56, 53, 0, 100.0, 0.0, 4, "Glow Request Lighting Time" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1FA, 0x52 }, UdsDefinition{ 0x7E0, 0x1FA, 0x52, false, 60, 0, 0, 0.0625, 0.0, 4, "Idle Spark Advn Ctrl #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1FB, 0x52 }, UdsDefinition{ 0x7E0, 0x1FB, 0x52, false, 60, 1, 0, 0.0625, 0.0, 4, "Idle Spark Advn Ctrl #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1FC, 0x52 }, UdsDefinition{ 0x7E0, 0x1FC, 0x52, false, 60, 2, 0, 0.0625, 0.0, 4, "Idle Spark Advn Ctrl #3" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1FD, 0x52 }, UdsDefinition{ 0x7E0, 0x1FD, 0x52, false, 60, 3, 0, 0.0625, 0.0, 4, "Idle Spark Advn Ctrl #4" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1FE, 0x52 }, UdsDefinition{ 0x7E0, 0x1FE, 0x52, false, 60, 4, 0, 0.0625, 0.0, 4, "Idle Spark Advn Ctrl #5" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1FF, 0x52 }, UdsDefinition{ 0x7E0, 0x1FF, 0x52, false, 60, 5, 0, 0.0625, 0.0, 4, "Idle Spark Advn Ctrl #6" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x200, 0x52 }, UdsDefinition{ 0x7E0, 0x200, 0x52, false, 60, 6, 0, 0.0625, 0.0, 4, "Idle Spark Advn Ctrl #7" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x201, 0x52 }, UdsDefinition{ 0x7E0, 0x201, 0x52, false, 60, 7, 0, 0.0625, 0.0, 4, "Idle Spark Advn Ctrl #8" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x241, 0x52 }, UdsDefinition{ 0x7E0, 0x241, 0x52, false, 60, 8, 0, 0.0625, 0.0, 4, "Idle Spark Advn Ctrl #9" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x242, 0x52 }, UdsDefinition{ 0x7E0, 0x242, 0x52, false, 60, 9, 0, 0.0625, 0.0, 4, "Idle Spark Advn Ctrl #10" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2AE, 0x52 }, UdsDefinition{ 0x7E0, 0x2AE, 0x52, false, 60, 10, 0, 0.0625, 0.0, 4, "Idle Spark Advn Ctrl #11" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2AF, 0x52 }, UdsDefinition{ 0x7E0, 0x2AF, 0x52, false, 60, 11, 0, 0.0625, 0.0, 4, "Idle Spark Advn Ctrl #12" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x202, 0x52 }, UdsDefinition{ 0x7E0, 0x202, 0x52, false, 39, 12, 0, 0.78125, 0.0, 4, "Minimum Engine Speed" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x203, 0x52 }, UdsDefinition{ 0x7E0, 0x203, 0x52, false, 27, 14, 0, 0.001220703125, -40.0, 4, "Eng Stall Control FB Flow" });
// }
// void init_udsDefinitions_part18() {
//     udsMap.emplace(uds_key{ 0x7E0, 0x204, 0x52 }, UdsDefinition{ 0x7E0, 0x204, 0x52, false, 27, 16, 0, 0.001220703125, -40.0, 4, "Deposit Loss Flow" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x221, 0x52 }, UdsDefinition{ 0x7E0, 0x221, 0x52, false, 52, 18, 0, 1.049, 0.0, 4, "Fuel Cut Elps Time" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x31E, 0x52 }, UdsDefinition{ 0x7E0, 0x31E, 0x52, false, 0, 20, 0, 4, "Rough Idle #8", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x31E, 0x52 }, UdsDefinition{ 0x7E0, 0x31E, 0x52, false, 0, 20, 0, 4, "Rough Idle #8", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x31F, 0x52 }, UdsDefinition{ 0x7E0, 0x31F, 0x52, false, 0, 20, 1, 4, "Rough Idle #7", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x31F, 0x52 }, UdsDefinition{ 0x7E0, 0x31F, 0x52, false, 0, 20, 1, 4, "Rough Idle #7", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x320, 0x52 }, UdsDefinition{ 0x7E0, 0x320, 0x52, false, 0, 20, 2, 4, "Rough Idle #6", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x320, 0x52 }, UdsDefinition{ 0x7E0, 0x320, 0x52, false, 0, 20, 2, 4, "Rough Idle #6", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x321, 0x52 }, UdsDefinition{ 0x7E0, 0x321, 0x52, false, 0, 20, 3, 4, "Rough Idle #5", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x321, 0x52 }, UdsDefinition{ 0x7E0, 0x321, 0x52, false, 0, 20, 3, 4, "Rough Idle #5", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x322, 0x52 }, UdsDefinition{ 0x7E0, 0x322, 0x52, false, 0, 20, 4, 4, "Rough Idle #4", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x322, 0x52 }, UdsDefinition{ 0x7E0, 0x322, 0x52, false, 0, 20, 4, 4, "Rough Idle #4", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x323, 0x52 }, UdsDefinition{ 0x7E0, 0x323, 0x52, false, 0, 20, 5, 4, "Rough Idle #3", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x323, 0x52 }, UdsDefinition{ 0x7E0, 0x323, 0x52, false, 0, 20, 5, 4, "Rough Idle #3", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x324, 0x52 }, UdsDefinition{ 0x7E0, 0x324, 0x52, false, 0, 20, 6, 4, "Rough Idle #2", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x324, 0x52 }, UdsDefinition{ 0x7E0, 0x324, 0x52, false, 0, 20, 6, 4, "Rough Idle #2", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x325, 0x52 }, UdsDefinition{ 0x7E0, 0x325, 0x52, false, 0, 20, 7, 4, "Rough Idle #1", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x325, 0x52 }, UdsDefinition{ 0x7E0, 0x325, 0x52, false, 0, 20, 7, 4, "Rough Idle #1", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x326, 0x52 }, UdsDefinition{ 0x7E0, 0x326, 0x52, false, 0, 21, 7, 4, "MAF Low", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x326, 0x52 }, UdsDefinition{ 0x7E0, 0x326, 0x52, false, 0, 21, 7, 4, "MAF Low", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x327, 0x52 }, UdsDefinition{ 0x7E0, 0x327, 0x52, false, 0, 21, 6, 4, "Boost Pressure Low", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x327, 0x52 }, UdsDefinition{ 0x7E0, 0x327, 0x52, false, 0, 21, 6, 4, "Boost Pressure Low", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x328, 0x52 }, UdsDefinition{ 0x7E0, 0x328, 0x52, false, 0, 21, 5, 4, "Common Rail Pressure Low", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x328, 0x52 }, UdsDefinition{ 0x7E0, 0x328, 0x52, false, 0, 21, 5, 4, "Common Rail Pressure Low", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x329, 0x52 }, UdsDefinition{ 0x7E0, 0x329, 0x52, false, 0, 21, 4, 4, "Engine Coolant Temp High", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x329, 0x52 }, UdsDefinition{ 0x7E0, 0x329, 0x52, false, 0, 21, 4, 4, "Engine Coolant Temp High", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x32A, 0x52 }, UdsDefinition{ 0x7E0, 0x32A, 0x52, false, 0, 22, 0, 0.01, 0.0, 4, "MAF/Estimate MAF Ratio" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x32B, 0x52 }, UdsDefinition{ 0x7E0, 0x32B, 0x52, false, 39, 23, 0, 0.78125, 0.0, 4, "Target Idle Engine Speed" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x38A, 0x52 }, UdsDefinition{ 0x7E0, 0x38A, 0x52, false, 0, 25, 0, 3.0517578125e-05, 0.0, 4, "Throttle Air Flow Learning Value(Area 1)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x38B, 0x52 }, UdsDefinition{ 0x7E0, 0x38B, 0x52, false, 0, 27, 0, 3.0517578125e-05, 0.0, 4, "Throttle Air Flow Learning Value(Area 2)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x38C, 0x52 }, UdsDefinition{ 0x7E0, 0x38C, 0x52, false, 0, 29, 0, 3.0517578125e-05, 0.0, 4, "Throttle Air Flow Learning Value(Area 3)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x38D, 0x52 }, UdsDefinition{ 0x7E0, 0x38D, 0x52, false, 0, 31, 0, 3.0517578125e-05, 0.0, 4, "Throttle Air Flow Learning Value(Calculated Value)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x38E, 0x52 }, UdsDefinition{ 0x7E0, 0x38E, 0x52, false, 0, 33, 0, 0.01, 0.0, 4, "Throttle Air Flow Learning Value(Atmosphere Pressure Offset Value)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x38F, 0x52 }, UdsDefinition{ 0x7E0, 0x38F, 0x52, false, 0, 34, 7, 4, "Throttle Air Flow Learning Prohibit(Intake Air Pressure Malfunction)", 0, "OK" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x38F, 0x52 }, UdsDefinition{ 0x7E0, 0x38F, 0x52, false, 0, 34, 7, 4, "Throttle Air Flow Learning Prohibit(Intake Air Pressure Malfunction)", 1, "NG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x390, 0x52 }, UdsDefinition{ 0x7E0, 0x390, 0x52, false, 0, 34, 6, 4, "Throttle Air Flow Learning Prohibit(Air Fuel Ratio Malfunction)", 0, "OK" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x390, 0x52 }, UdsDefinition{ 0x7E0, 0x390, 0x52, false, 0, 34, 6, 4, "Throttle Air Flow Learning Prohibit(Air Fuel Ratio Malfunction)", 1, "NG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x41A, 0x52 }, UdsDefinition{ 0x7E0, 0x41A, 0x52, false, 0, 35, 7, 4, "HICM FET Overtemperature", 0, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x41A, 0x52 }, UdsDefinition{ 0x7E0, 0x41A, 0x52, false, 0, 35, 7, 4, "HICM FET Overtemperature", 1, "Abnormal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x41B, 0x52 }, UdsDefinition{ 0x7E0, 0x41B, 0x52, false, 0, 35, 6, 4, "HICM-ECU Data Update Status", 0, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x41B, 0x52 }, UdsDefinition{ 0x7E0, 0x41B, 0x52, false, 0, 35, 6, 4, "HICM-ECU Data Update Status", 1, "Abnormal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x41C, 0x52 }, UdsDefinition{ 0x7E0, 0x41C, 0x52, false, 0, 35, 4, 4, "HICM Voltage Status", 0, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x41C, 0x52 }, UdsDefinition{ 0x7E0, 0x41C, 0x52, false, 0, 35, 4, 4, "HICM Voltage Status", 1, "High" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x41C, 0x52 }, UdsDefinition{ 0x7E0, 0x41C, 0x52, false, 0, 35, 4, 4, "HICM Voltage Status", 2, "Low" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x41C, 0x52 }, UdsDefinition{ 0x7E0, 0x41C, 0x52, false, 0, 35, 4, 4, "HICM Voltage Status", 3, "Unknown" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x41D, 0x52 }, UdsDefinition{ 0x7E0, 0x41D, 0x52, false, 0, 35, 3, 4, "HICM Main Microcomputer Status", 0, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x41D, 0x52 }, UdsDefinition{ 0x7E0, 0x41D, 0x52, false, 0, 35, 3, 4, "HICM Main Microcomputer Status", 1, "Abnormal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x41E, 0x52 }, UdsDefinition{ 0x7E0, 0x41E, 0x52, false, 0, 35, 2, 4, "HICM Electric System Sensor", 0, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x41E, 0x52 }, UdsDefinition{ 0x7E0, 0x41E, 0x52, false, 0, 35, 2, 4, "HICM Electric System Sensor", 1, "Abnormal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x41F, 0x52 }, UdsDefinition{ 0x7E0, 0x41F, 0x52, false, 0, 35, 1, 4, "HICM FET Fixed", 0, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x41F, 0x52 }, UdsDefinition{ 0x7E0, 0x41F, 0x52, false, 0, 35, 1, 4, "HICM FET Fixed", 1, "Abnormal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x420, 0x52 }, UdsDefinition{ 0x7E0, 0x420, 0x52, false, 0, 35, 0, 4, "Heated Injector System Circuit Relay Fixed ON", 0, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x420, 0x52 }, UdsDefinition{ 0x7E0, 0x420, 0x52, false, 0, 35, 0, 4, "Heated Injector System Circuit Relay Fixed ON", 1, "Abnormal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x421, 0x52 }, UdsDefinition{ 0x7E0, 0x421, 0x52, false, 0, 36, 0, 4, "HICM-ECU Communication Status", 0, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x421, 0x52 }, UdsDefinition{ 0x7E0, 0x421, 0x52, false, 0, 36, 0, 4, "HICM-ECU Communication Status", 1, "Abnormal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x422, 0x52 }, UdsDefinition{ 0x7E0, 0x422, 0x52, false, 0, 37, 6, 4, "Injector Heater Open #4", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x422, 0x52 }, UdsDefinition{ 0x7E0, 0x422, 0x52, false, 0, 37, 6, 4, "Injector Heater Open #4", 1, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x422, 0x52 }, UdsDefinition{ 0x7E0, 0x422, 0x52, false, 0, 37, 6, 4, "Injector Heater Open #4", 2, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x422, 0x52 }, UdsDefinition{ 0x7E0, 0x422, 0x52, false, 0, 37, 6, 4, "Injector Heater Open #4", 3, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x423, 0x52 }, UdsDefinition{ 0x7E0, 0x423, 0x52, false, 0, 37, 4, 4, "Injector Heater Open #3", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x423, 0x52 }, UdsDefinition{ 0x7E0, 0x423, 0x52, false, 0, 37, 4, 4, "Injector Heater Open #3", 1, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x423, 0x52 }, UdsDefinition{ 0x7E0, 0x423, 0x52, false, 0, 37, 4, 4, "Injector Heater Open #3", 2, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x423, 0x52 }, UdsDefinition{ 0x7E0, 0x423, 0x52, false, 0, 37, 4, 4, "Injector Heater Open #3", 3, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x424, 0x52 }, UdsDefinition{ 0x7E0, 0x424, 0x52, false, 0, 37, 2, 4, "Injector Heater Open #2", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x424, 0x52 }, UdsDefinition{ 0x7E0, 0x424, 0x52, false, 0, 37, 2, 4, "Injector Heater Open #2", 1, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x424, 0x52 }, UdsDefinition{ 0x7E0, 0x424, 0x52, false, 0, 37, 2, 4, "Injector Heater Open #2", 2, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x424, 0x52 }, UdsDefinition{ 0x7E0, 0x424, 0x52, false, 0, 37, 2, 4, "Injector Heater Open #2", 3, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x425, 0x52 }, UdsDefinition{ 0x7E0, 0x425, 0x52, false, 0, 37, 0, 4, "Injector Heater Open #1", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x425, 0x52 }, UdsDefinition{ 0x7E0, 0x425, 0x52, false, 0, 37, 0, 4, "Injector Heater Open #1", 1, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x425, 0x52 }, UdsDefinition{ 0x7E0, 0x425, 0x52, false, 0, 37, 0, 4, "Injector Heater Open #1", 2, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x425, 0x52 }, UdsDefinition{ 0x7E0, 0x425, 0x52, false, 0, 37, 0, 4, "Injector Heater Open #1", 3, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x426, 0x52 }, UdsDefinition{ 0x7E0, 0x426, 0x52, false, 0, 38, 6, 4, "Injector Heater GND Short #4", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x426, 0x52 }, UdsDefinition{ 0x7E0, 0x426, 0x52, false, 0, 38, 6, 4, "Injector Heater GND Short #4", 1, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x426, 0x52 }, UdsDefinition{ 0x7E0, 0x426, 0x52, false, 0, 38, 6, 4, "Injector Heater GND Short #4", 2, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x426, 0x52 }, UdsDefinition{ 0x7E0, 0x426, 0x52, false, 0, 38, 6, 4, "Injector Heater GND Short #4", 3, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x427, 0x52 }, UdsDefinition{ 0x7E0, 0x427, 0x52, false, 0, 38, 4, 4, "Injector Heater GND Short #3", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x427, 0x52 }, UdsDefinition{ 0x7E0, 0x427, 0x52, false, 0, 38, 4, 4, "Injector Heater GND Short #3", 1, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x427, 0x52 }, UdsDefinition{ 0x7E0, 0x427, 0x52, false, 0, 38, 4, 4, "Injector Heater GND Short #3", 2, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x427, 0x52 }, UdsDefinition{ 0x7E0, 0x427, 0x52, false, 0, 38, 4, 4, "Injector Heater GND Short #3", 3, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x428, 0x52 }, UdsDefinition{ 0x7E0, 0x428, 0x52, false, 0, 38, 2, 4, "Injector Heater GND Short #2", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x428, 0x52 }, UdsDefinition{ 0x7E0, 0x428, 0x52, false, 0, 38, 2, 4, "Injector Heater GND Short #2", 1, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x428, 0x52 }, UdsDefinition{ 0x7E0, 0x428, 0x52, false, 0, 38, 2, 4, "Injector Heater GND Short #2", 2, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x428, 0x52 }, UdsDefinition{ 0x7E0, 0x428, 0x52, false, 0, 38, 2, 4, "Injector Heater GND Short #2", 3, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x429, 0x52 }, UdsDefinition{ 0x7E0, 0x429, 0x52, false, 0, 38, 0, 4, "Injector Heater GND Short #1", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x429, 0x52 }, UdsDefinition{ 0x7E0, 0x429, 0x52, false, 0, 38, 0, 4, "Injector Heater GND Short #1", 1, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x429, 0x52 }, UdsDefinition{ 0x7E0, 0x429, 0x52, false, 0, 38, 0, 4, "Injector Heater GND Short #1", 2, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x429, 0x52 }, UdsDefinition{ 0x7E0, 0x429, 0x52, false, 0, 38, 0, 4, "Injector Heater GND Short #1", 3, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42A, 0x52 }, UdsDefinition{ 0x7E0, 0x42A, 0x52, false, 0, 39, 6, 4, "Injector Heater Battery Short #4", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42A, 0x52 }, UdsDefinition{ 0x7E0, 0x42A, 0x52, false, 0, 39, 6, 4, "Injector Heater Battery Short #4", 1, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42A, 0x52 }, UdsDefinition{ 0x7E0, 0x42A, 0x52, false, 0, 39, 6, 4, "Injector Heater Battery Short #4", 2, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42A, 0x52 }, UdsDefinition{ 0x7E0, 0x42A, 0x52, false, 0, 39, 6, 4, "Injector Heater Battery Short #4", 3, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42B, 0x52 }, UdsDefinition{ 0x7E0, 0x42B, 0x52, false, 0, 39, 4, 4, "Injector Heater Battery Short #3", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42B, 0x52 }, UdsDefinition{ 0x7E0, 0x42B, 0x52, false, 0, 39, 4, 4, "Injector Heater Battery Short #3", 1, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42B, 0x52 }, UdsDefinition{ 0x7E0, 0x42B, 0x52, false, 0, 39, 4, 4, "Injector Heater Battery Short #3", 2, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42B, 0x52 }, UdsDefinition{ 0x7E0, 0x42B, 0x52, false, 0, 39, 4, 4, "Injector Heater Battery Short #3", 3, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42C, 0x52 }, UdsDefinition{ 0x7E0, 0x42C, 0x52, false, 0, 39, 2, 4, "Injector Heater Battery Short #2", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42C, 0x52 }, UdsDefinition{ 0x7E0, 0x42C, 0x52, false, 0, 39, 2, 4, "Injector Heater Battery Short #2", 1, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42C, 0x52 }, UdsDefinition{ 0x7E0, 0x42C, 0x52, false, 0, 39, 2, 4, "Injector Heater Battery Short #2", 2, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42C, 0x52 }, UdsDefinition{ 0x7E0, 0x42C, 0x52, false, 0, 39, 2, 4, "Injector Heater Battery Short #2", 3, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42D, 0x52 }, UdsDefinition{ 0x7E0, 0x42D, 0x52, false, 0, 39, 0, 4, "Injector Heater Battery Short #1", 0, "Not Detected" });
// }
// void init_udsDefinitions_part19() {
//     udsMap.emplace(uds_key{ 0x7E0, 0x42D, 0x52 }, UdsDefinition{ 0x7E0, 0x42D, 0x52, false, 0, 39, 0, 4, "Injector Heater Battery Short #1", 1, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42D, 0x52 }, UdsDefinition{ 0x7E0, 0x42D, 0x52, false, 0, 39, 0, 4, "Injector Heater Battery Short #1", 2, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42D, 0x52 }, UdsDefinition{ 0x7E0, 0x42D, 0x52, false, 0, 39, 0, 4, "Injector Heater Battery Short #1", 3, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42E, 0x52 }, UdsDefinition{ 0x7E0, 0x42E, 0x52, false, 0, 40, 6, 4, "Injector Heater Resistance Value #4", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42E, 0x52 }, UdsDefinition{ 0x7E0, 0x42E, 0x52, false, 0, 40, 6, 4, "Injector Heater Resistance Value #4", 1, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42E, 0x52 }, UdsDefinition{ 0x7E0, 0x42E, 0x52, false, 0, 40, 6, 4, "Injector Heater Resistance Value #4", 2, "Abnormal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42E, 0x52 }, UdsDefinition{ 0x7E0, 0x42E, 0x52, false, 0, 40, 6, 4, "Injector Heater Resistance Value #4", 3, "Abnormal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42F, 0x52 }, UdsDefinition{ 0x7E0, 0x42F, 0x52, false, 0, 40, 4, 4, "Injector Heater Resistance Value #3", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42F, 0x52 }, UdsDefinition{ 0x7E0, 0x42F, 0x52, false, 0, 40, 4, 4, "Injector Heater Resistance Value #3", 1, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42F, 0x52 }, UdsDefinition{ 0x7E0, 0x42F, 0x52, false, 0, 40, 4, 4, "Injector Heater Resistance Value #3", 2, "Abnormal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x42F, 0x52 }, UdsDefinition{ 0x7E0, 0x42F, 0x52, false, 0, 40, 4, 4, "Injector Heater Resistance Value #3", 3, "Abnormal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x430, 0x52 }, UdsDefinition{ 0x7E0, 0x430, 0x52, false, 0, 40, 2, 4, "Injector Heater Resistance Value #2", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x430, 0x52 }, UdsDefinition{ 0x7E0, 0x430, 0x52, false, 0, 40, 2, 4, "Injector Heater Resistance Value #2", 1, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x430, 0x52 }, UdsDefinition{ 0x7E0, 0x430, 0x52, false, 0, 40, 2, 4, "Injector Heater Resistance Value #2", 2, "Abnormal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x430, 0x52 }, UdsDefinition{ 0x7E0, 0x430, 0x52, false, 0, 40, 2, 4, "Injector Heater Resistance Value #2", 3, "Abnormal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x431, 0x52 }, UdsDefinition{ 0x7E0, 0x431, 0x52, false, 0, 40, 0, 4, "Injector Heater Resistance Value #1", 0, "Not Detected" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x431, 0x52 }, UdsDefinition{ 0x7E0, 0x431, 0x52, false, 0, 40, 0, 4, "Injector Heater Resistance Value #1", 1, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x431, 0x52 }, UdsDefinition{ 0x7E0, 0x431, 0x52, false, 0, 40, 0, 4, "Injector Heater Resistance Value #1", 2, "Abnormal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x431, 0x52 }, UdsDefinition{ 0x7E0, 0x431, 0x52, false, 0, 40, 0, 4, "Injector Heater Resistance Value #1", 3, "Abnormal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x456, 0x52 }, UdsDefinition{ 0x7E0, 0x456, 0x52, false, 0, 41, 3, 4, "i-ART Learning Status #4", 0, "OK" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x456, 0x52 }, UdsDefinition{ 0x7E0, 0x456, 0x52, false, 0, 41, 3, 4, "i-ART Learning Status #4", 1, "NG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x457, 0x52 }, UdsDefinition{ 0x7E0, 0x457, 0x52, false, 0, 41, 2, 4, "i-ART Learning Status #3", 0, "OK" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x457, 0x52 }, UdsDefinition{ 0x7E0, 0x457, 0x52, false, 0, 41, 2, 4, "i-ART Learning Status #3", 1, "NG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x458, 0x52 }, UdsDefinition{ 0x7E0, 0x458, 0x52, false, 0, 41, 1, 4, "i-ART Learning Status #2", 0, "OK" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x458, 0x52 }, UdsDefinition{ 0x7E0, 0x458, 0x52, false, 0, 41, 1, 4, "i-ART Learning Status #2", 1, "NG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x459, 0x52 }, UdsDefinition{ 0x7E0, 0x459, 0x52, false, 0, 41, 0, 4, "i-ART Learning Status #1", 0, "OK" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x459, 0x52 }, UdsDefinition{ 0x7E0, 0x459, 0x52, false, 0, 41, 0, 4, "i-ART Learning Status #1", 1, "NG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x45A, 0x52 }, UdsDefinition{ 0x7E0, 0x45A, 0x52, false, 0, 42, 0, 1.0, 0.0, 4, "Injector Leaking Count #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x45B, 0x52 }, UdsDefinition{ 0x7E0, 0x45B, 0x52, false, 0, 43, 0, 1.0, 0.0, 4, "Injector Leaking Count #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x45C, 0x52 }, UdsDefinition{ 0x7E0, 0x45C, 0x52, false, 0, 44, 0, 1.0, 0.0, 4, "Injector Leaking Count #3" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x45D, 0x52 }, UdsDefinition{ 0x7E0, 0x45D, 0x52, false, 0, 45, 0, 1.0, 0.0, 4, "Injector Leaking Count #4" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x489, 0x52 }, UdsDefinition{ 0x7E0, 0x489, 0x52, false, 59, 46, 0, 1.0, 0.0, 4, "i-ART Learning Status History #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x48A, 0x52 }, UdsDefinition{ 0x7E0, 0x48A, 0x52, false, 59, 47, 0, 1.0, 0.0, 4, "i-ART Learning Status History #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x48B, 0x52 }, UdsDefinition{ 0x7E0, 0x48B, 0x52, false, 59, 48, 0, 1.0, 0.0, 4, "i-ART Learning Status History #3" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x48C, 0x52 }, UdsDefinition{ 0x7E0, 0x48C, 0x52, false, 59, 49, 0, 1.0, 0.0, 4, "i-ART Learning Status History #4" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x432, 0x52 }, UdsDefinition{ 0x7E0, 0x432, 0x52, false, 0, 50, 0, 4, "Plural Cylinders Rough Idle", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x432, 0x52 }, UdsDefinition{ 0x7E0, 0x432, 0x52, false, 0, 50, 0, 4, "Plural Cylinders Rough Idle", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x433, 0x52 }, UdsDefinition{ 0x7E0, 0x433, 0x52, false, 0, 51, 0, 1.0, 0.0, 4, "Compression Leakage Count" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x434, 0x52 }, UdsDefinition{ 0x7E0, 0x434, 0x52, false, 0, 52, 0, 4, "Rough Idle Status", 0, "Normal" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x434, 0x52 }, UdsDefinition{ 0x7E0, 0x434, 0x52, false, 0, 52, 0, 4, "Rough Idle Status", 1, "Misfire" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x434, 0x52 }, UdsDefinition{ 0x7E0, 0x434, 0x52, false, 0, 52, 0, 4, "Rough Idle Status", 2, "Continuous poor combustion" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x434, 0x52 }, UdsDefinition{ 0x7E0, 0x434, 0x52, false, 0, 52, 0, 4, "Rough Idle Status", 3, "Intermittent poor combustion" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x434, 0x52 }, UdsDefinition{ 0x7E0, 0x434, 0x52, false, 0, 52, 0, 4, "Rough Idle Status", 4, "Low frequency poor combustion" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x45E, 0x52 }, UdsDefinition{ 0x7E0, 0x45E, 0x52, false, 33, 53, 0, 1.0, -128.0, 4, "EGR Rate Differential(Actual-Target)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x54F, 0x53 }, UdsDefinition{ 0x7E0, 0x54F, 0x53, false, 0, 0, 0, 1.0, 0.0, 4, "Electric Cooling Fan Drive Count when IG OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x551, 0x53 }, UdsDefinition{ 0x7E0, 0x551, 0x53, false, 56, 1, 0, 65.536, 0.0, 4, "Time after Shift Change" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x17B, 0x54 }, UdsDefinition{ 0x7E0, 0x17B, 0x54, false, 39, 0, 0, 0.78125, 0.0, 4, "Engine Speed of Cyl #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x17C, 0x54 }, UdsDefinition{ 0x7E0, 0x17C, 0x54, false, 39, 2, 0, 0.78125, 0.0, 4, "Engine Speed of Cyl #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x17D, 0x54 }, UdsDefinition{ 0x7E0, 0x17D, 0x54, false, 39, 4, 0, 0.78125, 0.0, 4, "Engine Speed of Cyl #3" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x17E, 0x54 }, UdsDefinition{ 0x7E0, 0x17E, 0x54, false, 39, 6, 0, 0.78125, 0.0, 4, "Engine Speed of Cyl #4" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x17F, 0x54 }, UdsDefinition{ 0x7E0, 0x17F, 0x54, false, 39, 8, 0, 0.78125, 0.0, 4, "Engine Speed of Cyl #5" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x180, 0x54 }, UdsDefinition{ 0x7E0, 0x180, 0x54, false, 39, 10, 0, 0.78125, 0.0, 4, "Engine Speed of Cyl #6" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x181, 0x54 }, UdsDefinition{ 0x7E0, 0x181, 0x54, false, 39, 12, 0, 0.78125, 0.0, 4, "Engine Speed of Cyl #7" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x182, 0x54 }, UdsDefinition{ 0x7E0, 0x182, 0x54, false, 39, 14, 0, 0.78125, 0.0, 4, "Engine Speed of Cyl #8" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x183, 0x54 }, UdsDefinition{ 0x7E0, 0x183, 0x54, false, 39, 16, 0, 0.78125, 0.0, 4, "Engine Speed of Cyl #9" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x184, 0x54 }, UdsDefinition{ 0x7E0, 0x184, 0x54, false, 39, 18, 0, 0.78125, 0.0, 4, "Engine Speed of Cyl #10" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2B0, 0x54 }, UdsDefinition{ 0x7E0, 0x2B0, 0x54, false, 39, 20, 0, 0.78125, 0.0, 4, "Engine Speed of Cyl #11" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2B1, 0x54 }, UdsDefinition{ 0x7E0, 0x2B1, 0x54, false, 39, 22, 0, 0.78125, 0.0, 4, "Engine Speed of Cyl #12" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x185, 0x54 }, UdsDefinition{ 0x7E0, 0x185, 0x54, false, 39, 24, 0, 0.78125, 0.0, 4, "Av Engine Speed of All Cyl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x244, 0x55 }, UdsDefinition{ 0x7E0, 0x244, 0x55, false, 33, 0, 0, 0.390625, -50.0, 4, "A/F Learn Value Idle #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x245, 0x55 }, UdsDefinition{ 0x7E0, 0x245, 0x55, false, 33, 1, 0, 0.390625, -50.0, 4, "A/F Learn Value Low #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x246, 0x55 }, UdsDefinition{ 0x7E0, 0x246, 0x55, false, 33, 2, 0, 0.390625, -50.0, 4, "A/F Learn Value Mid1 #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x247, 0x55 }, UdsDefinition{ 0x7E0, 0x247, 0x55, false, 33, 3, 0, 0.390625, -50.0, 4, "A/F Learn Value Mid2 #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2F0, 0x55 }, UdsDefinition{ 0x7E0, 0x2F0, 0x55, false, 33, 4, 0, 0.390625, -50.0, 4, "A/F Learn Value Mid3 #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x248, 0x55 }, UdsDefinition{ 0x7E0, 0x248, 0x55, false, 33, 5, 0, 0.390625, -50.0, 4, "A/F Learn Value High #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x249, 0x55 }, UdsDefinition{ 0x7E0, 0x249, 0x55, false, 33, 7, 0, 0.390625, -50.0, 4, "A/F Learn Val Low #1 (Dual)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x24A, 0x55 }, UdsDefinition{ 0x7E0, 0x24A, 0x55, false, 33, 8, 0, 0.390625, -50.0, 4, "A/F Learn Val Mid1 #1 (Dual)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x24B, 0x55 }, UdsDefinition{ 0x7E0, 0x24B, 0x55, false, 33, 9, 0, 0.390625, -50.0, 4, "A/F Learn Val Mid2 #1 (Dual)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x24C, 0x55 }, UdsDefinition{ 0x7E0, 0x24C, 0x55, false, 33, 10, 0, 0.390625, -50.0, 4, "A/F Learn Val High #1 (Dual)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x24D, 0x55 }, UdsDefinition{ 0x7E0, 0x24D, 0x55, false, 33, 11, 0, 0.390625, -50.0, 4, "A/F Learn Value Idle #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x24E, 0x55 }, UdsDefinition{ 0x7E0, 0x24E, 0x55, false, 33, 12, 0, 0.390625, -50.0, 4, "A/F Learn Value Low #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x24F, 0x55 }, UdsDefinition{ 0x7E0, 0x24F, 0x55, false, 33, 13, 0, 0.390625, -50.0, 4, "A/F Learn Value Mid1 #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x250, 0x55 }, UdsDefinition{ 0x7E0, 0x250, 0x55, false, 33, 14, 0, 0.390625, -50.0, 4, "A/F Learn Value Mid2 #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x251, 0x55 }, UdsDefinition{ 0x7E0, 0x251, 0x55, false, 33, 16, 0, 0.390625, -50.0, 4, "A/F Learn Value High #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x252, 0x55 }, UdsDefinition{ 0x7E0, 0x252, 0x55, false, 33, 18, 0, 0.390625, -50.0, 4, "A/F Learn Val Low #2 (Dual)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x253, 0x55 }, UdsDefinition{ 0x7E0, 0x253, 0x55, false, 33, 19, 0, 0.390625, -50.0, 4, "A/F Learn Val Mid1 #2 (Dual)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x254, 0x55 }, UdsDefinition{ 0x7E0, 0x254, 0x55, false, 33, 20, 0, 0.390625, -50.0, 4, "A/F Learn Val Mid2 #2 (Dual)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x255, 0x55 }, UdsDefinition{ 0x7E0, 0x255, 0x55, false, 33, 21, 0, 0.390625, -50.0, 4, "A/F Learn Val High #2 (Dual)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2E2, 0x56 }, UdsDefinition{ 0x7E0, 0x2E2, 0x56, false, 39, 0, 0, 0.25, 0.0, 4, "Maximum Engine Speed" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2E3, 0x56 }, UdsDefinition{ 0x7E0, 0x2E3, 0x56, false, 42, 2, 0, 0.01, 0.0, 4, "Vehicle Speed for Maximum Engine Speed" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2E4, 0x56 }, UdsDefinition{ 0x7E0, 0x2E4, 0x56, false, 56, 4, 0, 65.536, 0.0, 4, "Red Zone Duration Time" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2E5, 0x56 }, UdsDefinition{ 0x7E0, 0x2E5, 0x56, false, 0, 6, 0, 1.0, 0.0, 4, "Red Zone Count" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2E6, 0x56 }, UdsDefinition{ 0x7E0, 0x2E6, 0x56, false, 42, 8, 0, 0.01, 0.0, 4, "Maximum Vehicle Speed" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2BC, 0x57 }, UdsDefinition{ 0x7E0, 0x2BC, 0x57, false, 0, 0, 0, 3.0517578125e-05, -1.0, 4, "A/F Sensor Determination (worst value) #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2BD, 0x57 }, UdsDefinition{ 0x7E0, 0x2BD, 0x57, false, 0, 2, 0, 3.0517578125e-05, -1.0, 4, "A/F Sensor Determination (worst value) #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2BE, 0x57 }, UdsDefinition{ 0x7E0, 0x2BE, 0x57, false, 0, 4, 0, 0.01, 0.0, 4, "Engine Speed Fluctuation Avg (worst value) #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2BF, 0x57 }, UdsDefinition{ 0x7E0, 0x2BF, 0x57, false, 0, 5, 0, 0.01, 0.0, 4, "Engine Speed Fluctuation Avg (worst value) #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C0, 0x57 }, UdsDefinition{ 0x7E0, 0x2C0, 0x57, false, 0, 6, 0, 0.01, 0.0, 4, "Engine Speed Fluctuation Avg (worst value) #3" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C1, 0x57 }, UdsDefinition{ 0x7E0, 0x2C1, 0x57, false, 0, 7, 0, 0.01, 0.0, 4, "Engine Speed Fluctuation Avg (worst value) #4" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C2, 0x57 }, UdsDefinition{ 0x7E0, 0x2C2, 0x57, false, 0, 8, 0, 0.01, 0.0, 4, "Engine Speed Fluctuation Avg (worst value) #5" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C3, 0x57 }, UdsDefinition{ 0x7E0, 0x2C3, 0x57, false, 0, 9, 0, 0.01, 0.0, 4, "Engine Speed Fluctuation Avg (worst value) #6" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C4, 0x57 }, UdsDefinition{ 0x7E0, 0x2C4, 0x57, false, 0, 10, 0, 0.01, 0.0, 4, "Engine Speed Fluctuation Avg (worst value) #7" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x2C5, 0x57 }, UdsDefinition{ 0x7E0, 0x2C5, 0x57, false, 0, 11, 0, 0.01, 0.0, 4, "Engine Speed Fluctuation Avg (worst value) #8" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x39B, 0x57 }, UdsDefinition{ 0x7E0, 0x39B, 0x57, false, 0, 12, 0, 3.0517578125e-05, -1.0, 4, "A/F Sensor Determination (worst value) (Port) #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x39C, 0x57 }, UdsDefinition{ 0x7E0, 0x39C, 0x57, false, 0, 14, 0, 3.0517578125e-05, -1.0, 4, "A/F Sensor Determination (worst value) (Port) #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x39D, 0x57 }, UdsDefinition{ 0x7E0, 0x39D, 0x57, false, 0, 16, 0, 0.01, 0.0, 4, "Engine Speed Fluctuation Avg (worst value) (Port) #1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x39E, 0x57 }, UdsDefinition{ 0x7E0, 0x39E, 0x57, false, 0, 17, 0, 0.01, 0.0, 4, "Engine Speed Fluctuation Avg (worst value) (Port) #2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x39F, 0x57 }, UdsDefinition{ 0x7E0, 0x39F, 0x57, false, 0, 18, 0, 0.01, 0.0, 4, "Engine Speed Fluctuation Avg (worst value) (Port) #3" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3A0, 0x57 }, UdsDefinition{ 0x7E0, 0x3A0, 0x57, false, 0, 19, 0, 0.01, 0.0, 4, "Engine Speed Fluctuation Avg (worst value) (Port) #4" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3A1, 0x57 }, UdsDefinition{ 0x7E0, 0x3A1, 0x57, false, 0, 20, 0, 0.01, 0.0, 4, "Engine Speed Fluctuation Avg (worst value) (Port) #5" });
// }
// void init_udsDefinitions_part20() {
//     udsMap.emplace(uds_key{ 0x7E0, 0x3A2, 0x57 }, UdsDefinition{ 0x7E0, 0x3A2, 0x57, false, 0, 21, 0, 0.01, 0.0, 4, "Engine Speed Fluctuation Avg (worst value) (Port) #6" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3D0, 0x57 }, UdsDefinition{ 0x7E0, 0x3D0, 0x57, false, 0, 22, 0, 0.01, 0.0, 4, "Engine Speed Fluctuation Avg (worst value) (Port) #7" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3D1, 0x57 }, UdsDefinition{ 0x7E0, 0x3D1, 0x57, false, 0, 23, 0, 0.01, 0.0, 4, "Engine Speed Fluctuation Avg (worst value) (Port) #8" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4BA, 0x58 }, UdsDefinition{ 0x7E0, 0x4BA, 0x58, false, 34, 0, 0, 0.01, -327.68, 4, "GPF Clogged Determination Threshold Bank1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4BB, 0x58 }, UdsDefinition{ 0x7E0, 0x4BB, 0x58, false, 34, 2, 0, 0.01, -327.68, 4, "GPF Clogged Determination Threshold Bank2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4BC, 0x58 }, UdsDefinition{ 0x7E0, 0x4BC, 0x58, false, 34, 4, 0, 0.01, -327.68, 4, "GPF Steady Differential Pressure Average Bank1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4BD, 0x58 }, UdsDefinition{ 0x7E0, 0x4BD, 0x58, false, 34, 6, 0, 0.01, -327.68, 4, "GPF Steady Differential Pressure Average Bank2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4BE, 0x58 }, UdsDefinition{ 0x7E0, 0x4BE, 0x58, false, 46, 8, 0, 0.01, 0.0, 4, "GPF Steady Air Flow Average Bank1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4BF, 0x58 }, UdsDefinition{ 0x7E0, 0x4BF, 0x58, false, 46, 10, 0, 0.01, 0.0, 4, "GPF Steady Air Flow Average Bank2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C2, 0x58 }, UdsDefinition{ 0x7E0, 0x4C2, 0x58, false, 34, 16, 0, 0.01, -327.68, 4, "GPF Differential Pressure Offset Bank1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C3, 0x58 }, UdsDefinition{ 0x7E0, 0x4C3, 0x58, false, 34, 18, 0, 0.01, -327.68, 4, "GPF Differential Pressure Offset Bank2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C6, 0x58 }, UdsDefinition{ 0x7E0, 0x4C6, 0x58, false, 0, 24, 0, 0.001, 0.0, 4, "GPF Variance Determination Threshold Bank1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C7, 0x58 }, UdsDefinition{ 0x7E0, 0x4C7, 0x58, false, 0, 26, 0, 0.001, 0.0, 4, "GPF Variance Determination Threshold Bank2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C8, 0x58 }, UdsDefinition{ 0x7E0, 0x4C8, 0x58, false, 0, 28, 0, 0.001, 0.0, 4, "GPF Variance Bank1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4C9, 0x58 }, UdsDefinition{ 0x7E0, 0x4C9, 0x58, false, 0, 30, 0, 0.001, 0.0, 4, "GPF Variance Bank2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4CC, 0x58 }, UdsDefinition{ 0x7E0, 0x4CC, 0x58, false, 33, 36, 0, 1.0, 0.0, 4, "PM Deposition Ratio Bank1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4CD, 0x58 }, UdsDefinition{ 0x7E0, 0x4CD, 0x58, false, 33, 37, 0, 1.0, 0.0, 4, "PM Deposition Ratio Bank2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4CE, 0x58 }, UdsDefinition{ 0x7E0, 0x4CE, 0x58, false, 33, 38, 0, 1.0, 0.0, 4, "Ash Deposition Ratio Bank1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4CF, 0x58 }, UdsDefinition{ 0x7E0, 0x4CF, 0x58, false, 33, 39, 0, 1.0, 0.0, 4, "Ash Deposition Ratio Bank2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x552, 0x58 }, UdsDefinition{ 0x7E0, 0x552, 0x58, false, 34, 40, 0, 0.01, -327.68, 4, "Differential Pressure Sensor Learning Value Bank 1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x553, 0x58 }, UdsDefinition{ 0x7E0, 0x553, 0x58, false, 34, 42, 0, 0.01, -327.68, 4, "Differential Pressure Sensor Learning Value Bank 2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x554, 0x58 }, UdsDefinition{ 0x7E0, 0x554, 0x58, false, 57, 44, 0, 0.1, -40.0, 4, "Rear Catalyst Estimate Temperature" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x186, 0x81 }, UdsDefinition{ 0x7E0, 0x186, 0x81, false, 39, 0, 0, 50.0, 0.0, 4, "SPD (NT)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x187, 0x81 }, UdsDefinition{ 0x7E0, 0x187, 0x81, false, 48, 1, 0, 7.62939453125e-05, 0.0, 4, "NT Sensor Voltage" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x188, 0x81 }, UdsDefinition{ 0x7E0, 0x188, 0x81, false, 39, 3, 0, 50.0, 0.0, 4, "SPD (NC)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x189, 0x81 }, UdsDefinition{ 0x7E0, 0x189, 0x81, false, 48, 4, 0, 7.62939453125e-05, 0.0, 4, "NC Sensor Voltage" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x18A, 0x81 }, UdsDefinition{ 0x7E0, 0x18A, 0x81, false, 39, 6, 0, 50.0, 0.0, 4, "SPD (NC0)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x18B, 0x81 }, UdsDefinition{ 0x7E0, 0x18B, 0x81, false, 48, 7, 0, 7.62939453125e-05, 0.0, 4, "NC0 Sensor Voltage" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x18C, 0x81 }, UdsDefinition{ 0x7E0, 0x18C, 0x81, false, 39, 9, 0, 50.0, 0.0, 4, "SPD (NC2)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x18D, 0x81 }, UdsDefinition{ 0x7E0, 0x18D, 0x81, false, 48, 10, 0, 7.62939453125e-05, 0.0, 4, "NC2 Sensor Voltage" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x18E, 0x81 }, UdsDefinition{ 0x7E0, 0x18E, 0x81, false, 39, 12, 0, 50.0, 0.0, 4, "SPD (NC3)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x18F, 0x81 }, UdsDefinition{ 0x7E0, 0x18F, 0x81, false, 48, 13, 0, 7.62939453125e-05, 0.0, 4, "NC3 Sensor Voltage" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x190, 0x81 }, UdsDefinition{ 0x7E0, 0x190, 0x81, false, 39, 15, 0, 50.0, 0.0, 4, "SPD (NIN)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x191, 0x81 }, UdsDefinition{ 0x7E0, 0x191, 0x81, false, 48, 16, 0, 7.62939453125e-05, 0.0, 4, "NIN Sensor Voltage" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x192, 0x81 }, UdsDefinition{ 0x7E0, 0x192, 0x81, false, 39, 18, 0, 50.0, 0.0, 4, "SPD (NOUT)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x193, 0x81 }, UdsDefinition{ 0x7E0, 0x193, 0x81, false, 48, 19, 0, 7.62939453125e-05, 0.0, 4, "NOUT Sensor Voltage" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x194, 0x81 }, UdsDefinition{ 0x7E0, 0x194, 0x81, false, 42, 21, 0, 1.0, 0.0, 4, "SPD (SP2)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x195, 0x81 }, UdsDefinition{ 0x7E0, 0x195, 0x81, false, 48, 22, 0, 7.62939453125e-05, 0.0, 4, "SP2 Sensor Voltage" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x45F, 0x81 }, UdsDefinition{ 0x7E0, 0x45F, 0x81, false, 39, 24, 0, 0.25, 0.0, 4, "SPD (NIM)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x460, 0x81 }, UdsDefinition{ 0x7E0, 0x460, 0x81, false, 48, 26, 0, 7.62939453125e-05, 0.0, 4, "NIM Sensor Voltage" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4D0, 0x81 }, UdsDefinition{ 0x7E0, 0x4D0, 0x81, false, 39, 28, 0, 1.0, 0.0, 4, "SPD (NT)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4D1, 0x81 }, UdsDefinition{ 0x7E0, 0x4D1, 0x81, false, 39, 30, 0, 1.0, 0.0, 4, "SPD (NIN)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4D2, 0x81 }, UdsDefinition{ 0x7E0, 0x4D2, 0x81, false, 39, 32, 0, 1.0, 0.0, 4, "SPD (NOUT)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x196, 0x82 }, UdsDefinition{ 0x7E0, 0x196, 0x82, false, 57, 0, 0, 0.00390625, -40.0, 4, "A/T Oil Temperature 1" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x197, 0x82 }, UdsDefinition{ 0x7E0, 0x197, 0x82, false, 57, 2, 0, 0.00390625, -40.0, 4, "A/T Oil Temperature 2" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x198, 0x82 }, UdsDefinition{ 0x7E0, 0x198, 0x82, false, 57, 4, 0, 0.00390625, -40.0, 4, "A/T Oil Temperature 3" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x199, 0x82 }, UdsDefinition{ 0x7E0, 0x199, 0x82, false, 36, 6, 0, 0.001953125, -64.0, 4, "A/T Oil Pressure" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x19A, 0x82 }, UdsDefinition{ 0x7E0, 0x19A, 0x82, false, 48, 8, 0, 0.001220703125, 0.0, 4, "G Sensor" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x461, 0x82 }, UdsDefinition{ 0x7E0, 0x461, 0x82, false, 33, 10, 0, 0.006103515625, -200.0, 4, "Clutch Stroke Position" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x462, 0x82 }, UdsDefinition{ 0x7E0, 0x462, 0x82, false, 48, 12, 0, 7.62939453125e-05, 0.0, 4, "Clutch Stroke Sensor Voltage" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x19C, 0x83 }, UdsDefinition{ 0x7E0, 0x19C, 0x83, false, 0, 0, 5, 4, "G Sensor Calibration", 0, "Incomplete" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x19C, 0x83 }, UdsDefinition{ 0x7E0, 0x19C, 0x83, false, 0, 0, 5, 4, "G Sensor Calibration", 1, "Complete" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x19D, 0x83 }, UdsDefinition{ 0x7E0, 0x19D, 0x83, false, 0, 0, 4, 4, "MT Up Shift Indication", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x19D, 0x83 }, UdsDefinition{ 0x7E0, 0x19D, 0x83, false, 0, 0, 4, 4, "MT Up Shift Indication", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x19E, 0x83 }, UdsDefinition{ 0x7E0, 0x19E, 0x83, false, 0, 0, 3, 4, "MT Down Shift Indication", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x19E, 0x83 }, UdsDefinition{ 0x7E0, 0x19E, 0x83, false, 0, 0, 3, 4, "MT Down Shift Indication", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x205, 0x83 }, UdsDefinition{ 0x7E0, 0x205, 0x83, false, 0, 0, 6, 4, "CVT Oil Press Calibration", 0, "Incmp" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x205, 0x83 }, UdsDefinition{ 0x7E0, 0x205, 0x83, false, 0, 0, 6, 4, "CVT Oil Press Calibration", 1, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x222, 0x83 }, UdsDefinition{ 0x7E0, 0x222, 0x83, false, 0, 0, 2, 4, "Shift Control Mode", 0, "S-mode" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x222, 0x83 }, UdsDefinition{ 0x7E0, 0x222, 0x83, false, 0, 0, 2, 4, "Shift Control Mode", 1, "M-mode" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3A3, 0x83 }, UdsDefinition{ 0x7E0, 0x3A3, 0x83, false, 0, 0, 1, 4, "Torque Converter Temperature Raise History", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3A3, 0x83 }, UdsDefinition{ 0x7E0, 0x3A3, 0x83, false, 0, 0, 1, 4, "Torque Converter Temperature Raise History", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x463, 0x83 }, UdsDefinition{ 0x7E0, 0x463, 0x83, false, 0, 0, 0, 4, "iMT Type", 0, "Type A" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x463, 0x83 }, UdsDefinition{ 0x7E0, 0x463, 0x83, false, 0, 0, 0, 4, "iMT Type", 1, "Type B" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x19F, 0x83 }, UdsDefinition{ 0x7E0, 0x19F, 0x83, false, 48, 1, 0, 0.001220703125, 0.0, 4, "G Sensor Learning Value" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x20C, 0x83 }, UdsDefinition{ 0x7E0, 0x20C, 0x83, false, 0, 3, 0, 4, "Off-road Guidance Status", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x20C, 0x83 }, UdsDefinition{ 0x7E0, 0x20C, 0x83, false, 0, 3, 0, 4, "Off-road Guidance Status", 1, "Snow" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x20C, 0x83 }, UdsDefinition{ 0x7E0, 0x20C, 0x83, false, 0, 3, 0, 4, "Off-road Guidance Status", 2, "Sand" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x20C, 0x83 }, UdsDefinition{ 0x7E0, 0x20C, 0x83, false, 0, 3, 0, 4, "Off-road Guidance Status", 3, "Climb" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x20C, 0x83 }, UdsDefinition{ 0x7E0, 0x20C, 0x83, false, 0, 3, 0, 4, "Off-road Guidance Status", 4, "Mogul" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x20C, 0x83 }, UdsDefinition{ 0x7E0, 0x20C, 0x83, false, 0, 3, 0, 4, "Off-road Guidance Status", 5, "Rock" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x20C, 0x83 }, UdsDefinition{ 0x7E0, 0x20C, 0x83, false, 0, 3, 0, 4, "Off-road Guidance Status", 255, "Unset" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x391, 0x83 }, UdsDefinition{ 0x7E0, 0x391, 0x83, false, 0, 4, 0, 1.0, 0.0, 4, "ATF Thermal Degradation Estimate" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x464, 0x83 }, UdsDefinition{ 0x7E0, 0x464, 0x83, false, 0, 6, 0, 4, "iMT Telltale", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x464, 0x83 }, UdsDefinition{ 0x7E0, 0x464, 0x83, false, 0, 6, 0, 4, "iMT Telltale", 1, "Green" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x464, 0x83 }, UdsDefinition{ 0x7E0, 0x464, 0x83, false, 0, 6, 0, 4, "iMT Telltale", 3, "Yellow" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4D3, 0x83 }, UdsDefinition{ 0x7E0, 0x4D3, 0x83, false, 0, 16, 0, 4, "Shift Range Indicator", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4D3, 0x83 }, UdsDefinition{ 0x7E0, 0x4D3, 0x83, false, 0, 16, 0, 4, "Shift Range Indicator", 1, "1st" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4D3, 0x83 }, UdsDefinition{ 0x7E0, 0x4D3, 0x83, false, 0, 16, 0, 4, "Shift Range Indicator", 2, "2nd" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4D3, 0x83 }, UdsDefinition{ 0x7E0, 0x4D3, 0x83, false, 0, 16, 0, 4, "Shift Range Indicator", 3, "3rd" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4D3, 0x83 }, UdsDefinition{ 0x7E0, 0x4D3, 0x83, false, 0, 16, 0, 4, "Shift Range Indicator", 4, "4th" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4D3, 0x83 }, UdsDefinition{ 0x7E0, 0x4D3, 0x83, false, 0, 16, 0, 4, "Shift Range Indicator", 5, "5th" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4D3, 0x83 }, UdsDefinition{ 0x7E0, 0x4D3, 0x83, false, 0, 16, 0, 4, "Shift Range Indicator", 6, "6th" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4D3, 0x83 }, UdsDefinition{ 0x7E0, 0x4D3, 0x83, false, 0, 16, 0, 4, "Shift Range Indicator", 7, "7th" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4D3, 0x83 }, UdsDefinition{ 0x7E0, 0x4D3, 0x83, false, 0, 16, 0, 4, "Shift Range Indicator", 8, "8th" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4D3, 0x83 }, UdsDefinition{ 0x7E0, 0x4D3, 0x83, false, 0, 16, 0, 4, "Shift Range Indicator", 9, "9th" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4D3, 0x83 }, UdsDefinition{ 0x7E0, 0x4D3, 0x83, false, 0, 16, 0, 4, "Shift Range Indicator", 10, "10th" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A0, 0x85 }, UdsDefinition{ 0x7E0, 0x1A0, 0x85, false, 0, 0, 0, 4, "Shift Status", 1, "1st" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A0, 0x85 }, UdsDefinition{ 0x7E0, 0x1A0, 0x85, false, 0, 0, 0, 4, "Shift Status", 2, "2nd" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A0, 0x85 }, UdsDefinition{ 0x7E0, 0x1A0, 0x85, false, 0, 0, 0, 4, "Shift Status", 3, "3rd" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A0, 0x85 }, UdsDefinition{ 0x7E0, 0x1A0, 0x85, false, 0, 0, 0, 4, "Shift Status", 4, "4th" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A0, 0x85 }, UdsDefinition{ 0x7E0, 0x1A0, 0x85, false, 0, 0, 0, 4, "Shift Status", 5, "5th" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A0, 0x85 }, UdsDefinition{ 0x7E0, 0x1A0, 0x85, false, 0, 0, 0, 4, "Shift Status", 6, "6th" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A0, 0x85 }, UdsDefinition{ 0x7E0, 0x1A0, 0x85, false, 0, 0, 0, 4, "Shift Status", 7, "7th" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A0, 0x85 }, UdsDefinition{ 0x7E0, 0x1A0, 0x85, false, 0, 0, 0, 4, "Shift Status", 8, "8th" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A1, 0x85 }, UdsDefinition{ 0x7E0, 0x1A1, 0x85, false, 0, 1, 7, 4, "Lock Up", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A1, 0x85 }, UdsDefinition{ 0x7E0, 0x1A1, 0x85, false, 0, 1, 7, 4, "Lock Up", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A2, 0x85 }, UdsDefinition{ 0x7E0, 0x1A2, 0x85, false, 0, 1, 6, 4, "ST Solenoid Status", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A2, 0x85 }, UdsDefinition{ 0x7E0, 0x1A2, 0x85, false, 0, 1, 6, 4, "ST Solenoid Status", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A3, 0x85 }, UdsDefinition{ 0x7E0, 0x1A3, 0x85, false, 0, 1, 5, 4, "SL Solenoid Status", 0, "OFF" });
// }
// void init_udsDefinitions_part21() {
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A3, 0x85 }, UdsDefinition{ 0x7E0, 0x1A3, 0x85, false, 0, 1, 5, 4, "SL Solenoid Status", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3EA, 0x85 }, UdsDefinition{ 0x7E0, 0x3EA, 0x85, false, 0, 1, 4, 4, "Solenoid(SC)", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3EA, 0x85 }, UdsDefinition{ 0x7E0, 0x3EA, 0x85, false, 0, 1, 4, 4, "Solenoid(SC)", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A4, 0x85 }, UdsDefinition{ 0x7E0, 0x1A4, 0x85, false, 0, 2, 7, 4, "Solenoid (SLS)", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A4, 0x85 }, UdsDefinition{ 0x7E0, 0x1A4, 0x85, false, 0, 2, 7, 4, "Solenoid (SLS)", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A5, 0x85 }, UdsDefinition{ 0x7E0, 0x1A5, 0x85, false, 0, 2, 6, 4, "Solenoid (SLC)", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A5, 0x85 }, UdsDefinition{ 0x7E0, 0x1A5, 0x85, false, 0, 2, 6, 4, "Solenoid (SLC)", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A6, 0x85 }, UdsDefinition{ 0x7E0, 0x1A6, 0x85, false, 0, 2, 4, 4, "SLT Solenoid Status", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A6, 0x85 }, UdsDefinition{ 0x7E0, 0x1A6, 0x85, false, 0, 2, 4, 4, "SLT Solenoid Status", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A7, 0x85 }, UdsDefinition{ 0x7E0, 0x1A7, 0x85, false, 0, 2, 3, 4, "SLU Solenoid Status", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A7, 0x85 }, UdsDefinition{ 0x7E0, 0x1A7, 0x85, false, 0, 2, 3, 4, "SLU Solenoid Status", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A8, 0x85 }, UdsDefinition{ 0x7E0, 0x1A8, 0x85, false, 0, 2, 2, 4, "SLN Solenoid Status", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A8, 0x85 }, UdsDefinition{ 0x7E0, 0x1A8, 0x85, false, 0, 2, 2, 4, "SLN Solenoid Status", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3EB, 0x85 }, UdsDefinition{ 0x7E0, 0x3EB, 0x85, false, 0, 2, 1, 4, "Solenoid(SLP)", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3EB, 0x85 }, UdsDefinition{ 0x7E0, 0x3EB, 0x85, false, 0, 2, 1, 4, "Solenoid(SLP)", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A9, 0x85 }, UdsDefinition{ 0x7E0, 0x1A9, 0x85, false, 0, 3, 7, 4, "Solenoid (DS1)", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1A9, 0x85 }, UdsDefinition{ 0x7E0, 0x1A9, 0x85, false, 0, 3, 7, 4, "Solenoid (DS1)", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1AA, 0x85 }, UdsDefinition{ 0x7E0, 0x1AA, 0x85, false, 0, 3, 6, 4, "Solenoid (DS2)", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1AA, 0x85 }, UdsDefinition{ 0x7E0, 0x1AA, 0x85, false, 0, 3, 6, 4, "Solenoid (DS2)", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1AB, 0x85 }, UdsDefinition{ 0x7E0, 0x1AB, 0x85, false, 0, 3, 5, 4, "Solenoid (DSU)", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1AB, 0x85 }, UdsDefinition{ 0x7E0, 0x1AB, 0x85, false, 0, 3, 5, 4, "Solenoid (DSU)", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1AC, 0x85 }, UdsDefinition{ 0x7E0, 0x1AC, 0x85, false, 0, 3, 4, 4, "DSL Solenoid Status", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1AC, 0x85 }, UdsDefinition{ 0x7E0, 0x1AC, 0x85, false, 0, 3, 4, 4, "DSL Solenoid Status", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x4D4, 0x85 }, UdsDefinition{ 0x7E0, 0x4D4, 0x85, false, 0, 4, 0, 0.000244140625, 0.0, 4, "CVT Shift Status Ratio" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1B4, 0xC1 }, UdsDefinition{ 0x7E0, 0x1B4, 0xC1, false, 0, 0, 0, 1.0, 0.0, 4, "Model Code" });
//     udsMap.emplace(uds_key{ 0xC7, 0x20, 0xC1 }, UdsDefinition{ 0xC7, 0x20, 0xC1, false, 0, 0, 0, 4, "Remote Engine Starter Registration Status", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0xC7, 0x20, 0xC1 }, UdsDefinition{ 0xC7, 0x20, 0xC1, false, 0, 0, 0, 4, "Remote Engine Starter Registration Status", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1B5, 0xC1 }, UdsDefinition{ 0x7E0, 0x1B5, 0xC1, false, 0, 7, 0, 1.0, 0.0, 4, "Engine Type" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1B6, 0xC1 }, UdsDefinition{ 0x7E0, 0x1B6, 0xC1, false, 0, 13, 0, 1.0, 0.0, 4, "Cylinder Number" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1B7, 0xC1 }, UdsDefinition{ 0x7E0, 0x1B7, 0xC1, false, 0, 14, 0, 4, "Transmission Type", 0, "0" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1B7, 0xC1 }, UdsDefinition{ 0x7E0, 0x1B7, 0xC1, false, 0, 14, 0, 4, "Transmission Type", 1, "MT" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1B7, 0xC1 }, UdsDefinition{ 0x7E0, 0x1B7, 0xC1, false, 0, 14, 0, 4, "Transmission Type", 2, "ECT 4th" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1B7, 0xC1 }, UdsDefinition{ 0x7E0, 0x1B7, 0xC1, false, 0, 14, 0, 4, "Transmission Type", 4, "ECT 5th" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1B7, 0xC1 }, UdsDefinition{ 0x7E0, 0x1B7, 0xC1, false, 0, 14, 0, 4, "Transmission Type", 8, "ECT 6th" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1B7, 0xC1 }, UdsDefinition{ 0x7E0, 0x1B7, 0xC1, false, 0, 14, 0, 4, "Transmission Type", 16, "CVT" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1B7, 0xC1 }, UdsDefinition{ 0x7E0, 0x1B7, 0xC1, false, 0, 14, 0, 4, "Transmission Type", 32, "MMT(5th)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1B7, 0xC1 }, UdsDefinition{ 0x7E0, 0x1B7, 0xC1, false, 0, 14, 0, 4, "Transmission Type", 64, "MMT(6th)" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1B7, 0xC1 }, UdsDefinition{ 0x7E0, 0x1B7, 0xC1, false, 0, 14, 0, 4, "Transmission Type", 128, "ECT 8th" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1B8, 0xC1 }, UdsDefinition{ 0x7E0, 0x1B8, 0xC1, false, 0, 15, 0, 1.0, 0.0, 4, "Destination" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1B9, 0xC1 }, UdsDefinition{ 0x7E0, 0x1B9, 0xC1, false, 0, 16, 0, 1.0, 1900.0, 4, "Model Year" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1BA, 0xC1 }, UdsDefinition{ 0x7E0, 0x1BA, 0xC1, false, 0, 17, 0, 4, "System Identification", 1, "Gasoline" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1BA, 0xC1 }, UdsDefinition{ 0x7E0, 0x1BA, 0xC1, false, 0, 17, 0, 4, "System Identification", 2, "Diesel" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1BA, 0xC1 }, UdsDefinition{ 0x7E0, 0x1BA, 0xC1, false, 0, 17, 0, 4, "System Identification", 4, "CNG/LPG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1BA, 0xC1 }, UdsDefinition{ 0x7E0, 0x1BA, 0xC1, false, 0, 17, 0, 4, "System Identification", 5, "Gasoline&CNG/LPG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1BA, 0xC1 }, UdsDefinition{ 0x7E0, 0x1BA, 0xC1, false, 0, 17, 0, 4, "System Identification", 8, "ECO" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1BA, 0xC1 }, UdsDefinition{ 0x7E0, 0x1BA, 0xC1, false, 0, 17, 0, 4, "System Identification", 9, "ECO" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1BA, 0xC1 }, UdsDefinition{ 0x7E0, 0x1BA, 0xC1, false, 0, 17, 0, 4, "System Identification", 10, "Diesel&ECO" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1BA, 0xC1 }, UdsDefinition{ 0x7E0, 0x1BA, 0xC1, false, 0, 17, 0, 4, "System Identification", 12, "CNG/LPG&ECO" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1BA, 0xC1 }, UdsDefinition{ 0x7E0, 0x1BA, 0xC1, false, 0, 17, 0, 4, "System Identification", 16, "MHV" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1BA, 0xC1 }, UdsDefinition{ 0x7E0, 0x1BA, 0xC1, false, 0, 17, 0, 4, "System Identification", 32, "HV" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1BA, 0xC1 }, UdsDefinition{ 0x7E0, 0x1BA, 0xC1, false, 0, 17, 0, 4, "System Identification", 33, "HV" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x485, 0xC1 }, UdsDefinition{ 0x7E0, 0x485, 0xC1, false, 0, 18, 0, 4, "Transmission Type2", 0, "0" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x485, 0xC1 }, UdsDefinition{ 0x7E0, 0x485, 0xC1, false, 0, 18, 0, 4, "Transmission Type2", 128, "ASG" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x485, 0xC1 }, UdsDefinition{ 0x7E0, 0x485, 0xC1, false, 0, 18, 0, 4, "Transmission Type2", 64, "ECT 10th" });
//     udsMap.emplace(uds_key{ 0xC7, 0x22, 0xC3 }, UdsDefinition{ 0xC7, 0x22, 0xC3, false, 0, 0, 0, 4, "Communication Remote Engine Starter", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0xC7, 0x22, 0xC3 }, UdsDefinition{ 0xC7, 0x22, 0xC3, false, 0, 0, 0, 4, "Communication Remote Engine Starter", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1BB, 0xE1 }, UdsDefinition{ 0x7E0, 0x1BB, 0xE1, false, 0, 0, 0, 1.0, 0.0, 4, "# Codes(Include History)" });
//     udsMap.emplace(uds_key{ 0xC7, 0x2, 0xE1 }, UdsDefinition{ 0xC7, 0x2, 0xE1, false, 0, 0, 0, 1.0, 0.0, 4, "Number of Trouble Codes" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1BC, 0xE3 }, UdsDefinition{ 0x7E0, 0x1BC, 0xE3, false, 0, 0, 7, 4, "Check Mode", 0, "OFF" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1BC, 0xE3 }, UdsDefinition{ 0x7E0, 0x1BC, 0xE3, false, 0, 0, 7, 4, "Check Mode", 1, "ON" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1BD, 0xE3 }, UdsDefinition{ 0x7E0, 0x1BD, 0xE3, false, 0, 0, 5, 4, "SPD Test Result", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1BD, 0xE3 }, UdsDefinition{ 0x7E0, 0x1BD, 0xE3, false, 0, 0, 5, 4, "SPD Test Result", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1BE, 0xE3 }, UdsDefinition{ 0x7E0, 0x1BE, 0xE3, false, 0, 0, 4, 4, "NSW Test Result", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1BE, 0xE3 }, UdsDefinition{ 0x7E0, 0x1BE, 0xE3, false, 0, 0, 4, 4, "NSW Test Result", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1BF, 0xE3 }, UdsDefinition{ 0x7E0, 0x1BF, 0xE3, false, 0, 0, 3, 4, "AS Test Result", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1BF, 0xE3 }, UdsDefinition{ 0x7E0, 0x1BF, 0xE3, false, 0, 0, 3, 4, "AS Test Result", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1C0, 0xE3 }, UdsDefinition{ 0x7E0, 0x1C0, 0xE3, false, 0, 0, 2, 4, "Misfire Test Result", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1C0, 0xE3 }, UdsDefinition{ 0x7E0, 0x1C0, 0xE3, false, 0, 0, 2, 4, "Misfire Test Result", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1C1, 0xE3 }, UdsDefinition{ 0x7E0, 0x1C1, 0xE3, false, 0, 0, 1, 4, "OXS2 (A/FS2) Test Result", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1C1, 0xE3 }, UdsDefinition{ 0x7E0, 0x1C1, 0xE3, false, 0, 0, 1, 4, "OXS2 (A/FS2) Test Result", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1C2, 0xE3 }, UdsDefinition{ 0x7E0, 0x1C2, 0xE3, false, 0, 0, 0, 4, "OXS1 (A/FS2) Test Result", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1C2, 0xE3 }, UdsDefinition{ 0x7E0, 0x1C2, 0xE3, false, 0, 0, 0, 4, "OXS1 (A/FS2) Test Result", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3D3, 0xE3 }, UdsDefinition{ 0x7E0, 0x3D3, 0xE3, false, 0, 0, 6, 4, "Misfire Test Result(CNG)", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x3D3, 0xE3 }, UdsDefinition{ 0x7E0, 0x3D3, 0xE3, false, 0, 0, 6, 4, "Misfire Test Result(CNG)", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1C3, 0xE3 }, UdsDefinition{ 0x7E0, 0x1C3, 0xE3, false, 0, 1, 3, 4, "O2 HCAC #2 Test Result", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1C3, 0xE3 }, UdsDefinition{ 0x7E0, 0x1C3, 0xE3, false, 0, 1, 3, 4, "O2 HCAC #2 Test Result", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1C4, 0xE3 }, UdsDefinition{ 0x7E0, 0x1C4, 0xE3, false, 0, 1, 2, 4, "O2 HCAC #1 Test Result", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1C4, 0xE3 }, UdsDefinition{ 0x7E0, 0x1C4, 0xE3, false, 0, 1, 2, 4, "O2 HCAC #1 Test Result", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1C5, 0xE3 }, UdsDefinition{ 0x7E0, 0x1C5, 0xE3, false, 0, 1, 1, 4, "A/F Test Results #2", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1C5, 0xE3 }, UdsDefinition{ 0x7E0, 0x1C5, 0xE3, false, 0, 1, 1, 4, "A/F Test Results #2", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1C6, 0xE3 }, UdsDefinition{ 0x7E0, 0x1C6, 0xE3, false, 0, 1, 0, 4, "A/F Test Results #1", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1C6, 0xE3 }, UdsDefinition{ 0x7E0, 0x1C6, 0xE3, false, 0, 1, 0, 4, "A/F Test Results #1", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1C7, 0xE3 }, UdsDefinition{ 0x7E0, 0x1C7, 0xE3, false, 0, 2, 4, 4, "HC Adsorber Catalyst Test", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1C7, 0xE3 }, UdsDefinition{ 0x7E0, 0x1C7, 0xE3, false, 0, 2, 4, 4, "HC Adsorber Catalyst Test", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1C8, 0xE3 }, UdsDefinition{ 0x7E0, 0x1C8, 0xE3, false, 0, 2, 3, 4, "HC Adsorber Ex Temp B2S2", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1C8, 0xE3 }, UdsDefinition{ 0x7E0, 0x1C8, 0xE3, false, 0, 2, 3, 4, "HC Adsorber Ex Temp B2S2", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1C9, 0xE3 }, UdsDefinition{ 0x7E0, 0x1C9, 0xE3, false, 0, 2, 2, 4, "HC Adsorber Ex Temp B1S2", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1C9, 0xE3 }, UdsDefinition{ 0x7E0, 0x1C9, 0xE3, false, 0, 2, 2, 4, "HC Adsorber Ex Temp B1S2", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1CA, 0xE3 }, UdsDefinition{ 0x7E0, 0x1CA, 0xE3, false, 0, 2, 1, 4, "HC Adsorber Ex Temp B2S1", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1CA, 0xE3 }, UdsDefinition{ 0x7E0, 0x1CA, 0xE3, false, 0, 2, 1, 4, "HC Adsorber Ex Temp B2S1", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1CB, 0xE3 }, UdsDefinition{ 0x7E0, 0x1CB, 0xE3, false, 0, 2, 0, 4, "HC Adsorber Ex Temp B1S1", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x1CB, 0xE3 }, UdsDefinition{ 0x7E0, 0x1CB, 0xE3, false, 0, 2, 0, 4, "HC Adsorber Ex Temp B1S1", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x465, 0xE3 }, UdsDefinition{ 0x7E0, 0x465, 0xE3, false, 0, 3, 3, 4, "Exhaust Temperature B1S4 Test Result", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x465, 0xE3 }, UdsDefinition{ 0x7E0, 0x465, 0xE3, false, 0, 3, 3, 4, "Exhaust Temperature B1S4 Test Result", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x466, 0xE3 }, UdsDefinition{ 0x7E0, 0x466, 0xE3, false, 0, 3, 2, 4, "Exhaust Temperature B1S3 Test Result", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x466, 0xE3 }, UdsDefinition{ 0x7E0, 0x466, 0xE3, false, 0, 3, 2, 4, "Exhaust Temperature B1S3 Test Result", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x467, 0xE3 }, UdsDefinition{ 0x7E0, 0x467, 0xE3, false, 0, 3, 1, 4, "Exhaust Temperature B1S2 Test Result", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x467, 0xE3 }, UdsDefinition{ 0x7E0, 0x467, 0xE3, false, 0, 3, 1, 4, "Exhaust Temperature B1S2 Test Result", 1, "Incmpl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x468, 0xE3 }, UdsDefinition{ 0x7E0, 0x468, 0xE3, false, 0, 3, 0, 4, "Exhaust Temperature B1S1 Test Result", 0, "Compl" });
//     udsMap.emplace(uds_key{ 0x7E0, 0x468, 0xE3 }, UdsDefinition{ 0x7E0, 0x468, 0xE3, false, 0, 3, 0, 4, "Exhaust Temperature B1S1 Test Result", 1, "Incmpl" });
// }
void init_udsDefinitions() {
    
    // init_udsDefinitions_part1();
    // vTaskDelay(pdMS_TO_TICKS(2));
    // init_udsDefinitions_part2();
    // vTaskDelay(pdMS_TO_TICKS(2));
    // init_udsDefinitions_part3();
    // vTaskDelay(pdMS_TO_TICKS(2));
    // init_udsDefinitions_part4();
    // vTaskDelay(pdMS_TO_TICKS(2));
    // init_udsDefinitions_part5();
    // vTaskDelay(pdMS_TO_TICKS(2));
    // init_udsDefinitions_part6();
    // vTaskDelay(pdMS_TO_TICKS(2));
    // init_udsDefinitions_part7();
    // vTaskDelay(pdMS_TO_TICKS(2));
    // init_udsDefinitions_part8();
    // vTaskDelay(pdMS_TO_TICKS(2));
    // init_udsDefinitions_part9();
    // vTaskDelay(pdMS_TO_TICKS(2));
    // init_udsDefinitions_part10();
    // vTaskDelay(pdMS_TO_TICKS(2));
    // init_udsDefinitions_part11();
    // vTaskDelay(pdMS_TO_TICKS(2));
    // init_udsDefinitions_part12();
    // vTaskDelay(pdMS_TO_TICKS(2));
    // init_udsDefinitions_part13();
    // vTaskDelay(pdMS_TO_TICKS(2));
    // init_udsDefinitions_part14();
    // vTaskDelay(pdMS_TO_TICKS(2));
    // init_udsDefinitions_part15();
    // vTaskDelay(pdMS_TO_TICKS(2));
    // init_udsDefinitions_part16();
    // vTaskDelay(pdMS_TO_TICKS(2));
    // init_udsDefinitions_part17();
    // vTaskDelay(pdMS_TO_TICKS(2));
    // init_udsDefinitions_part18();
    // vTaskDelay(pdMS_TO_TICKS(2));
    // init_udsDefinitions_part19();
    // vTaskDelay(pdMS_TO_TICKS(2));
    // init_udsDefinitions_part20();
    // vTaskDelay(pdMS_TO_TICKS(2));
    // init_udsDefinitions_part21();
}
