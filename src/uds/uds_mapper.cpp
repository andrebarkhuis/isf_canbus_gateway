#include "uds_mapper.h"
#include <unordered_map>
#include <SPI.h>
#include <Arduino.h>



void init_udsDefinitions_ecu_07B0() {
    udsMap.emplace(uds_key{ 0x7B0, 0x3 }, UdsDefinition{ 0x7B0, 0x3, 42, 0, 0, 1.28, 0.0, 4, "FR Wheel Speed" });
    udsMap.emplace(uds_key{ 0x7B0, 0x3 }, UdsDefinition{ 0x7B0, 0x3, 42, 1, 0, 1.28, 0.0, 4, "FL Wheel Speed" });
    udsMap.emplace(uds_key{ 0x7B0, 0x3 }, UdsDefinition{ 0x7B0, 0x3, 42, 2, 0, 1.28, 0.0, 4, "RR Wheel Speed" });
    udsMap.emplace(uds_key{ 0x7B0, 0x3 }, UdsDefinition{ 0x7B0, 0x3, 42, 3, 0, 1.28, 0.0, 4, "RL Wheel Speed" });
    udsMap.emplace(uds_key{ 0x7B0, 0x3 }, UdsDefinition{ 0x7B0, 0x3, 0, 4, 7, 4, "FR Wheel Direction", 0, "Forward" });
    udsMap.emplace(uds_key{ 0x7B0, 0x3 }, UdsDefinition{ 0x7B0, 0x3, 0, 4, 7, 4, "FR Wheel Direction", 1, "Back" });
    udsMap.emplace(uds_key{ 0x7B0, 0x3 }, UdsDefinition{ 0x7B0, 0x3, 0, 4, 6, 4, "FL Wheel Direction", 0, "Forward" });
    udsMap.emplace(uds_key{ 0x7B0, 0x3 }, UdsDefinition{ 0x7B0, 0x3, 0, 4, 6, 4, "FL Wheel Direction", 1, "Back" });
    udsMap.emplace(uds_key{ 0x7B0, 0x3 }, UdsDefinition{ 0x7B0, 0x3, 0, 4, 5, 4, "RR Wheel Direction", 0, "Forward" });
    udsMap.emplace(uds_key{ 0x7B0, 0x3 }, UdsDefinition{ 0x7B0, 0x3, 0, 4, 5, 4, "RR Wheel Direction", 1, "Back" });
    udsMap.emplace(uds_key{ 0x7B0, 0x3 }, UdsDefinition{ 0x7B0, 0x3, 0, 4, 4, 4, "RL Wheel Direction", 0, "Forward" });
    udsMap.emplace(uds_key{ 0x7B0, 0x3 }, UdsDefinition{ 0x7B0, 0x3, 0, 4, 4, 4, "RL Wheel Direction", 1, "Back" });
    udsMap.emplace(uds_key{ 0x7B0, 0x4 }, UdsDefinition{ 0x7B0, 0x4, 48, 0, 0, 0.0196078431372549, 0.0, 4, "Master Cylinder Sensor" });
    udsMap.emplace(uds_key{ 0x7B0, 0x4 }, UdsDefinition{ 0x7B0, 0x4, 48, 1, 0, 0.0196078431372549, 0.0, 4, "Master Cylinder Sensor2" });
    udsMap.emplace(uds_key{ 0x7B0, 0x4 }, UdsDefinition{ 0x7B0, 0x4, 48, 2, 0, 0.0196078431372549, 0.0, 4, "Stroke Sensor" });
    udsMap.emplace(uds_key{ 0x7B0, 0x4 }, UdsDefinition{ 0x7B0, 0x4, 48, 3, 0, 0.0196078431372549, 0.0, 4, "Stroke Sensor2" });
    udsMap.emplace(uds_key{ 0x7B0, 0x4 }, UdsDefinition{ 0x7B0, 0x4, 48, 4, 0, 0.0196078431372549, 0.0, 4, "Accumulator Sensor" });
    udsMap.emplace(uds_key{ 0x7B0, 0x4 }, UdsDefinition{ 0x7B0, 0x4, 48, 5, 0, 0.0196078431372549, 0.0, 4, "Regulator Pressure Sensor Output" });
    udsMap.emplace(uds_key{ 0x7B0, 0x4 }, UdsDefinition{ 0x7B0, 0x4, 36, 6, 0, 0.096, 0.0, 4, "Reaction Force Pressure" });
    udsMap.emplace(uds_key{ 0x7B0, 0x4 }, UdsDefinition{ 0x7B0, 0x4, 36, 7, 0, 0.096, 0.0, 4, "Servo Pressure" });
    udsMap.emplace(uds_key{ 0x7B0, 0x4 }, UdsDefinition{ 0x7B0, 0x4, 36, 8, 0, 0.096, 0.0, 4, "Accumulator Pressure" });
    udsMap.emplace(uds_key{ 0x7B0, 0x4 }, UdsDefinition{ 0x7B0, 0x4, 36, 9, 0, 0.096, 0.0, 4, "Master Cylinder Pressure" });
    udsMap.emplace(uds_key{ 0x7B0, 0x4 }, UdsDefinition{ 0x7B0, 0x4, 57, 10, 0, 1.0, -80.0, 4, "Master Cylinder Sensor Temperature" });
    udsMap.emplace(uds_key{ 0x7B0, 0x4 }, UdsDefinition{ 0x7B0, 0x4, 34, 12, 0, 0.5, 0.0, 4, "Brake Booster Pressure" });
    udsMap.emplace(uds_key{ 0x7B0, 0x4 }, UdsDefinition{ 0x7B0, 0x4, 34, 13, 0, 0.5, 0.0, 4, "Atmospheric Pressure" });
    udsMap.emplace(uds_key{ 0x7B0, 0x4 }, UdsDefinition{ 0x7B0, 0x4, 57, 14, 0, 1.0, -80.0, 4, "Reaction Force Pressure Sensor Temperature" });
    udsMap.emplace(uds_key{ 0x7B0, 0x4 }, UdsDefinition{ 0x7B0, 0x4, 57, 16, 0, 1.0, -80.0, 4, "Servo Pressure Sensor Temperature" });
    udsMap.emplace(uds_key{ 0x7B0, 0x4 }, UdsDefinition{ 0x7B0, 0x4, 34, 20, 0, 0.5, 0.0, 4, "Brake Booster Pressure \"B\"" });
    udsMap.emplace(uds_key{ 0x7B0, 0x5 }, UdsDefinition{ 0x7B0, 0x5, 1, 0, 0, 0.14318, -18.327, 4, "Deceleration Sensor" });
    udsMap.emplace(uds_key{ 0x7B0, 0x5 }, UdsDefinition{ 0x7B0, 0x5, 1, 1, 0, 0.14318, -18.327, 4, "Deceleration Sensor2" });
    udsMap.emplace(uds_key{ 0x7B0, 0x5 }, UdsDefinition{ 0x7B0, 0x5, 5, 6, 0, 0.490196078431373, 0.0, 4, "Throttle Opening Angle" });
    udsMap.emplace(uds_key{ 0x7B0, 0x5 }, UdsDefinition{ 0x7B0, 0x5, 33, 7, 0, 0.490196078431373, 0.0, 4, "Throttle Opening Angle %" });
    udsMap.emplace(uds_key{ 0x7B0, 0x5 }, UdsDefinition{ 0x7B0, 0x5, 5, 8, 0, 0.490196078431373, 0.0, 4, "Accelerator Opening Angle" });
    udsMap.emplace(uds_key{ 0x7B0, 0x5 }, UdsDefinition{ 0x7B0, 0x5, 33, 9, 0, 0.5, 0.0, 4, "Accelerator Opening Angle %" });
    udsMap.emplace(uds_key{ 0x7B0, 0x5 }, UdsDefinition{ 0x7B0, 0x5, 58, 10, 0, 0.03125, 0.0, 4, "Real Engine Torque" });
    udsMap.emplace(uds_key{ 0x7B0, 0x6 }, UdsDefinition{ 0x7B0, 0x6, 7, 0, 0, 1.0, -128.0, 4, "Yaw Rate Sensor" });
    udsMap.emplace(uds_key{ 0x7B0, 0x6 }, UdsDefinition{ 0x7B0, 0x6, 7, 1, 0, 1.0, -128.0, 4, "Yaw Rate Sensor2" });
    udsMap.emplace(uds_key{ 0x7B0, 0x6 }, UdsDefinition{ 0x7B0, 0x6, 5, 2, 0, 0.1, -3276.8, 4, "Steering Angle Sensor" });
    udsMap.emplace(uds_key{ 0x7B0, 0x21 }, UdsDefinition{ 0x7B0, 0x21, 42, 0, 0, 1.28, 0.0, 4, "Vehicle Speed" });
    udsMap.emplace(uds_key{ 0x7B0, 0x3C }, UdsDefinition{ 0x7B0, 0x3C, 0, 0, 7, 4, "Stop Light Relay Output", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7B0, 0x3C }, UdsDefinition{ 0x7B0, 0x3C, 0, 0, 7, 4, "Stop Light Relay Output", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7B0, 0x3C }, UdsDefinition{ 0x7B0, 0x3C, 0, 0, 6, 4, "EBS Relay", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7B0, 0x3C }, UdsDefinition{ 0x7B0, 0x3C, 0, 0, 6, 4, "EBS Relay", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7B0, 0x41 }, UdsDefinition{ 0x7B0, 0x41, 36, 0, 0, 0.098, 0.0, 4, "Zero Point of M/C" });
    udsMap.emplace(uds_key{ 0x7B0, 0x41 }, UdsDefinition{ 0x7B0, 0x41, 36, 3, 0, 0.098, 0.0, 4, "Zero Point of M/C2" });
    udsMap.emplace(uds_key{ 0x7B0, 0x41 }, UdsDefinition{ 0x7B0, 0x41, 48, 5, 0, 0.0196078431372549, 0.0, 4, "Voltage of M/C" });
    udsMap.emplace(uds_key{ 0x7B0, 0x41 }, UdsDefinition{ 0x7B0, 0x41, 48, 6, 0, 0.0196078431372549, 0.0, 4, "Voltage of M/C2" });
    udsMap.emplace(uds_key{ 0x7B0, 0x41 }, UdsDefinition{ 0x7B0, 0x41, 48, 7, 0, 0.0196078431372549, 0.0, 4, "Voltage of Stroke Sensor" });
    udsMap.emplace(uds_key{ 0x7B0, 0x41 }, UdsDefinition{ 0x7B0, 0x41, 48, 8, 0, 0.0196078431372549, 0.0, 4, "Voltage of Stroke Sensor2" });
    udsMap.emplace(uds_key{ 0x7B0, 0x41 }, UdsDefinition{ 0x7B0, 0x41, 36, 9, 0, 0.098, -1.0, 4, "Regulator Pressure Sensor Output After Filter" });
    udsMap.emplace(uds_key{ 0x7B0, 0x41 }, UdsDefinition{ 0x7B0, 0x41, 37, 10, 0, 1.0, -30.0, 4, "Regulator Pressure Sensor Variation" });
    udsMap.emplace(uds_key{ 0x7B0, 0x41 }, UdsDefinition{ 0x7B0, 0x41, 48, 11, 0, 0.0196078431372549, 0.0, 4, "Regulator Pressure Sensor Correction Voltage" });
    udsMap.emplace(uds_key{ 0x7B0, 0x85 }, UdsDefinition{ 0x7B0, 0x85, 42, 0, 0, 0.1, 0.0, 4, "FR Gap Wheel Speed" });
    udsMap.emplace(uds_key{ 0x7B0, 0x85 }, UdsDefinition{ 0x7B0, 0x85, 42, 1, 0, 0.1, 0.0, 4, "FL Gap Wheel Speed" });
    udsMap.emplace(uds_key{ 0x7B0, 0x85 }, UdsDefinition{ 0x7B0, 0x85, 42, 2, 0, 0.1, 0.0, 4, "RR Gap Wheel Speed" });
    udsMap.emplace(uds_key{ 0x7B0, 0xE1 }, UdsDefinition{ 0x7B0, 0xE1, 0, 0, 0, 1.0, 0.0, 4, "Number of DTC" });
}
void init_udsDefinitions_ecu_07E0() {
    udsMap.emplace(uds_key{ 0x7E0, 0x1 }, UdsDefinition{ 0x7E0, 0x1, 33, 0, 0, 0.392156862745098, 0.0, 4, "Calculate Load" });
    udsMap.emplace(uds_key{ 0x7E0, 0x1 }, UdsDefinition{ 0x7E0, 0x1, 33, 1, 0, 0.392156862745098, 0.0, 4, "Vehicle Load" });
    udsMap.emplace(uds_key{ 0x7E0, 0x1 }, UdsDefinition{ 0x7E0, 0x1, 57, 9, 0, 1.0, -40.0, 4, "Coolant Temp" });
    udsMap.emplace(uds_key{ 0x7E0, 0x1 }, UdsDefinition{ 0x7E0, 0x1, 39, 10, 0, 0.25, 0.0, 4, "Engine Speed" });
    udsMap.emplace(uds_key{ 0x7E0, 0x1 }, UdsDefinition{ 0x7E0, 0x1, 39, 10, 0, 0.25, 0.0, 4, "Engine Speed" });
    udsMap.emplace(uds_key{ 0x7E0, 0x1 }, UdsDefinition{ 0x7E0, 0x1, 42, 12, 0, 1.0, 0.0, 4, "Vehicle Speed" });
    udsMap.emplace(uds_key{ 0x7E0, 0x1 }, UdsDefinition{ 0x7E0, 0x1, 33, 15, 0, 0.392156862745098, 0.0, 4, "Throttle Sensor Position" });
    udsMap.emplace(uds_key{ 0x7E0, 0x1 }, UdsDefinition{ 0x7E0, 0x1, 33, 16, 0, 0.392156862745098, 0.0, 4, "Throttle Sensor Volt %" });
    udsMap.emplace(uds_key{ 0x7E0, 0x1 }, UdsDefinition{ 0x7E0, 0x1, 48, 26, 0, 0.001, 0.0, 4, "Battery Voltage" });
    udsMap.emplace(uds_key{ 0x7E0, 0x4 }, UdsDefinition{ 0x7E0, 0x4, 0, 0, 0, 3.05e-05, 0.0, 4, "Target Air-Fuel Ratio" });
    udsMap.emplace(uds_key{ 0x7E0, 0x6 }, UdsDefinition{ 0x7E0, 0x6, 0, 0, 7, 4, "MIL", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x6 }, UdsDefinition{ 0x7E0, 0x6, 0, 0, 7, 4, "MIL", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 0, 7, 4, "Idle Up SW", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 0, 7, 4, "Idle Up SW", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 0, 6, 4, "Engine Oil Pressure SW", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 0, 6, 4, "Engine Oil Pressure SW", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 0, 2, 4, "Stop Light Switch", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 0, 2, 4, "Stop Light Switch", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 4, 7, 4, "Shift SW Status (P Range)", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 4, 7, 4, "Shift SW Status (P Range)", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 4, 6, 4, "Shift SW Status (R Range)", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 4, 6, 4, "Shift SW Status (R Range)", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 4, 5, 4, "Shift SW Status (N Range)", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 4, 5, 4, "Shift SW Status (N Range)", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 4, 4, 4, "Shift SW Status (D Range)", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 4, 4, 4, "Shift SW Status (D Range)", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 4, 3, 4, "Shift SW Status (4 Range)", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 4, 3, 4, "Shift SW Status (4 Range)", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 4, 2, 4, "Shift SW Status (3 Range)", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 4, 2, 4, "Shift SW Status (3 Range)", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 4, 1, 4, "Shift SW Status (2 Range)", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 4, 1, 4, "Shift SW Status (2 Range)", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 4, 0, 4, "Shift SW Status (L Range)", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 4, 0, 4, "Shift SW Status (L Range)", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 5, 7, 4, "Sports Mode Selection SW", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 5, 7, 4, "Sports Mode Selection SW", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 5, 6, 4, "Sports Shift Up SW", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 5, 6, 4, "Sports Shift Up SW", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 5, 5, 4, "Sports Shift Down SW", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 5, 5, 4, "Sports Shift Down SW", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 5, 3, 4, "Shift SW Status (B Range)", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 5, 3, 4, "Shift SW Status (B Range)", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 5, 2, 4, "Reverse Switch", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 5, 2, 4, "Reverse Switch", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 6, 4, 4, "Snow or 2nd Start Mode", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 6, 4, 4, "Snow or 2nd Start Mode", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 6, 3, 4, "Sports Drive Switch", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 6, 3, 4, "Sports Drive Switch", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 6, 2, 4, "Snow Switch Status", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 6, 2, 4, "Snow Switch Status", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 8, 7, 4, "Low Gear Switch", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 8, 7, 4, "Low Gear Switch", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 8, 6, 4, "Transfer Neutral", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 8, 6, 4, "Transfer Neutral", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 8, 4, 4, "Kick Down Switch Status", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 8, 4, 4, "Kick Down Switch Status", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 8, 2, 4, "Neutral Position SW Signal", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 8, 2, 4, "Neutral Position SW Signal", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 8, 1, 4, "Brake Switch", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 8, 1, 4, "Brake Switch", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 8, 0, 4, "Brake Switch Status", 0, "Unable" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 8, 0, 4, "Brake Switch Status", 1, "Able" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 10, 7, 4, "Shift Indication Enable", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 10, 7, 4, "Shift Indication Enable", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 10, 4, 4, "Cruise Cancel Signal", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 10, 4, 4, "Cruise Cancel Signal", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 11, 7, 4, "A/C Signal", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 11, 7, 4, "A/C Signal", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 11, 6, 4, "Idle Up Signal", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 11, 6, 4, "Idle Up Signal", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 11, 1, 4, "Throttle Open Switch", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 11, 1, 4, "Throttle Open Switch", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 11, 0, 4, "Cruise Main SW", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x25 }, UdsDefinition{ 0x7E0, 0x25, 0, 11, 0, 4, "Cruise Main SW", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x37 }, UdsDefinition{ 0x7E0, 0x37, 60, 8, 0, 0.03125, -1024.0, 4, "Knock Correct Learn Value" });
    udsMap.emplace(uds_key{ 0x7E0, 0x37 }, UdsDefinition{ 0x7E0, 0x37, 60, 10, 0, 0.03125, -1024.0, 4, "Knock Feedback Value" });
    udsMap.emplace(uds_key{ 0x7E0, 0x37 }, UdsDefinition{ 0x7E0, 0x37, 0, 21, 4, 4, "Throttle Learning", 0, "NG" });
    udsMap.emplace(uds_key{ 0x7E0, 0x37 }, UdsDefinition{ 0x7E0, 0x37, 0, 21, 4, 4, "Throttle Learning", 1, "OK" });
    udsMap.emplace(uds_key{ 0x7E0, 0x37 }, UdsDefinition{ 0x7E0, 0x37, 0, 21, 2, 4, "Closed Throttle Position SW", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x37 }, UdsDefinition{ 0x7E0, 0x37, 0, 21, 2, 4, "Closed Throttle Position SW", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x37 }, UdsDefinition{ 0x7E0, 0x37, 0, 22, 4, 4, "Brake Override System", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x37 }, UdsDefinition{ 0x7E0, 0x37, 0, 22, 4, 4, "Brake Override System", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x39 }, UdsDefinition{ 0x7E0, 0x39, 0, 1, 0, 4, "Idle Up VSV", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x39 }, UdsDefinition{ 0x7E0, 0x39, 0, 1, 0, 4, "Idle Up VSV", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x41 }, UdsDefinition{ 0x7E0, 0x41, 33, 5, 0, 0.006103515625, 0.0, 4, "Accelerator Position" });
    udsMap.emplace(uds_key{ 0x7E0, 0x41 }, UdsDefinition{ 0x7E0, 0x41, 48, 14, 0, 0.01953125, 0.0, 4, "Throttle Fully Close Learn" });
    udsMap.emplace(uds_key{ 0x7E0, 0x41 }, UdsDefinition{ 0x7E0, 0x41, 0, 20, 7, 4, "System Guard", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x41 }, UdsDefinition{ 0x7E0, 0x41, 0, 20, 7, 4, "System Guard", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x41 }, UdsDefinition{ 0x7E0, 0x41, 0, 20, 4, 4, "ST1", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x41 }, UdsDefinition{ 0x7E0, 0x41, 0, 20, 4, 4, "ST1", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x41 }, UdsDefinition{ 0x7E0, 0x41, 0, 20, 3, 4, "Accelerator Idle Position", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x41 }, UdsDefinition{ 0x7E0, 0x41, 0, 20, 3, 4, "Accelerator Idle Position", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x51 }, UdsDefinition{ 0x7E0, 0x51, 57, 9, 0, 1.0, -40.0, 4, "Engine Oil Temperature" });
    udsMap.emplace(uds_key{ 0x7E0, 0x51 }, UdsDefinition{ 0x7E0, 0x51, 5, 13, 0, 0.00762939453125, 0.0, 4, "Throttle Position" });
    udsMap.emplace(uds_key{ 0x7E0, 0x51 }, UdsDefinition{ 0x7E0, 0x51, 27, 25, 0, 0.001220703125, -40.0, 4, "Electric Load Feedback Val" });
    udsMap.emplace(uds_key{ 0x7E0, 0x52 }, UdsDefinition{ 0x7E0, 0x52, 39, 12, 0, 0.78125, 0.0, 4, "Minimum Engine Speed" });
    udsMap.emplace(uds_key{ 0x7E0, 0x82 }, UdsDefinition{ 0x7E0, 0x82, 57, 0, 0, 0.00390625, -40.0, 4, "A/T Oil Temperature 1" });
    udsMap.emplace(uds_key{ 0x7E0, 0x83 }, UdsDefinition{ 0x7E0, 0x83, 0, 0, 6, 4, "CVT Oil Press Calibration", 0, "Incmp" });
    udsMap.emplace(uds_key{ 0x7E0, 0x83 }, UdsDefinition{ 0x7E0, 0x83, 0, 0, 6, 4, "CVT Oil Press Calibration", 1, "Compl" });
    udsMap.emplace(uds_key{ 0x7E0, 0x83 }, UdsDefinition{ 0x7E0, 0x83, 0, 0, 4, 4, "MT Up Shift Indication", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x83 }, UdsDefinition{ 0x7E0, 0x83, 0, 0, 4, 4, "MT Up Shift Indication", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x83 }, UdsDefinition{ 0x7E0, 0x83, 0, 0, 3, 4, "MT Down Shift Indication", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x83 }, UdsDefinition{ 0x7E0, 0x83, 0, 0, 3, 4, "MT Down Shift Indication", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0x83 }, UdsDefinition{ 0x7E0, 0x83, 0, 0, 2, 4, "Shift Control Mode", 0, "S-mode" });
    udsMap.emplace(uds_key{ 0x7E0, 0x83 }, UdsDefinition{ 0x7E0, 0x83, 0, 0, 2, 4, "Shift Control Mode", 1, "M-mode" });
    udsMap.emplace(uds_key{ 0x7E0, 0x85 }, UdsDefinition{ 0x7E0, 0x85, 0, 1, 6, 4, "ST Solenoid Status", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0x85 }, UdsDefinition{ 0x7E0, 0x85, 0, 1, 6, 4, "ST Solenoid Status", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0xE1 }, UdsDefinition{ 0x7E0, 0xE1, 0, 0, 0, 1.0, 0.0, 4, "# Codes(Include History)" });
    udsMap.emplace(uds_key{ 0x7E0, 0xE3 }, UdsDefinition{ 0x7E0, 0xE3, 0, 0, 7, 4, "Check Mode", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E0, 0xE3 }, UdsDefinition{ 0x7E0, 0xE3, 0, 0, 7, 4, "Check Mode", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E0, 0xE3 }, UdsDefinition{ 0x7E0, 0xE3, 0, 0, 5, 4, "SPD Test Result", 0, "Compl" });
    udsMap.emplace(uds_key{ 0x7E0, 0xE3 }, UdsDefinition{ 0x7E0, 0xE3, 0, 0, 5, 4, "SPD Test Result", 1, "Incmpl" });
}
void init_udsDefinitions_ecu_07E1() {
    udsMap.emplace(uds_key{ 0x7E1, 0x1 }, UdsDefinition{ 0x7E1, 0x1, 33, 0, 0, 0.392156862745098, 0.0, 4, "Calculate Load" });
    udsMap.emplace(uds_key{ 0x7E1, 0x1 }, UdsDefinition{ 0x7E1, 0x1, 57, 9, 0, 1.0, -40.0, 4, "Coolant Temp" });
    udsMap.emplace(uds_key{ 0x7E1, 0x1 }, UdsDefinition{ 0x7E1, 0x1, 42, 12, 0, 1.0, 0.0, 4, "Vehicle Speed" });
    udsMap.emplace(uds_key{ 0x7E1, 0x6 }, UdsDefinition{ 0x7E1, 0x6, 0, 0, 7, 4, "MIL", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E1, 0x6 }, UdsDefinition{ 0x7E1, 0x6, 0, 0, 7, 4, "MIL", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E1, 0x25 }, UdsDefinition{ 0x7E1, 0x25, 0, 4, 7, 4, "Shift SW Status (P Range)", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E1, 0x25 }, UdsDefinition{ 0x7E1, 0x25, 0, 4, 7, 4, "Shift SW Status (P Range)", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E1, 0x25 }, UdsDefinition{ 0x7E1, 0x25, 0, 4, 6, 4, "Shift SW Status (R Range)", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E1, 0x25 }, UdsDefinition{ 0x7E1, 0x25, 0, 4, 6, 4, "Shift SW Status (R Range)", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E1, 0x25 }, UdsDefinition{ 0x7E1, 0x25, 0, 4, 5, 4, "Shift SW Status (N Range)", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E1, 0x25 }, UdsDefinition{ 0x7E1, 0x25, 0, 4, 5, 4, "Shift SW Status (N Range)", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E1, 0x25 }, UdsDefinition{ 0x7E1, 0x25, 0, 4, 4, 4, "Shift SW Status (D Range)", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E1, 0x25 }, UdsDefinition{ 0x7E1, 0x25, 0, 4, 4, 4, "Shift SW Status (D Range)", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E1, 0x25 }, UdsDefinition{ 0x7E1, 0x25, 0, 5, 3, 4, "Shift SW Status (B Range)", 0, "OFF" });
    udsMap.emplace(uds_key{ 0x7E1, 0x25 }, UdsDefinition{ 0x7E1, 0x25, 0, 5, 3, 4, "Shift SW Status (B Range)", 1, "ON" });
    udsMap.emplace(uds_key{ 0x7E1, 0x82 }, UdsDefinition{ 0x7E1, 0x82, 57, 0, 0, 0.00390625, -40.0, 4, "A/T Oil Temperature 1" });
    udsMap.emplace(uds_key{ 0x7E1, 0x83 }, UdsDefinition{ 0x7E1, 0x83, 0, 0, 6, 4, "CVT Oil Press Calibration", 0, "Incmp" });
    udsMap.emplace(uds_key{ 0x7E1, 0x83 }, UdsDefinition{ 0x7E1, 0x83, 0, 0, 6, 4, "CVT Oil Press Calibration", 1, "Compl" });
    udsMap.emplace(uds_key{ 0x7E1, 0xE1 }, UdsDefinition{ 0x7E1, 0xE1, 0, 0, 0, 1.0, 0.0, 4, "# Codes(Include History)" });
}

void init_udsDefinitions() {
    init_udsDefinitions_ecu_07B0();
    init_udsDefinitions_ecu_07E0();
    init_udsDefinitions_ecu_07E1();
}